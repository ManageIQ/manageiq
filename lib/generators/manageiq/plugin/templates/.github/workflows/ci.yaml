---
name: CI
on:
  push:
  pull_request:
  schedule:
  - cron: 0 0 * * *
  workflow_dispatch:
jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version:
<%= YAML.load_file(Rails.root.join(".github/workflows/ci.yaml")).dig("jobs", "ci", "strategy", "matrix", "ruby-version").to_a.map { |r| "- '#{r}'".indent(8) }.join("\n") %>
    services:
      postgres:
        image: manageiq/postgresql:13
        env:
          POSTGRESQL_USER: root
          POSTGRESQL_PASSWORD: smartvm
          POSTGRESQL_DATABASE: vmdb_test
        options: "--health-cmd pg_isready --health-interval 2s --health-timeout 5s
          --health-retries 5"
        ports:
        - 5432:5432
    env:
      PGHOST: localhost
      PGPASSWORD: smartvm
      CC_TEST_REPORTER_ID: "${{ secrets.CC_TEST_REPORTER_ID }}"
    steps:
    - uses: actions/checkout@v4
    - name: Set up system
      run: bin/before_install
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: "${{ matrix.ruby-version }}"
        bundler-cache: true
      timeout-minutes: 30
    - name: Prepare tests
      run: bin/setup
    - name: Run tests
      run: bundle exec rake
    - name: Report code coverage
      if: "${{ github.ref == 'refs/heads/master' && matrix.ruby-version == '<%= YAML.load_file(Rails.root.join(".github/workflows/ci.yaml")).dig("jobs", "ci", "strategy", "matrix", "ruby-version").max %>' }}"
      continue-on-error: true
      uses: paambaati/codeclimate-action@v9
