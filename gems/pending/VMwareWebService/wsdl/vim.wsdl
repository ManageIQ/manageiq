<?xml version="1.0" encoding="UTF-8" ?>
<!--
   Copyright 2005-2009 VMware, Inc.  All rights reserved.
-->
<definitions targetNamespace="urn:vim25"
   xmlns="http://schemas.xmlsoap.org/wsdl/"
   xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
   xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
   xmlns:vim25="urn:vim25"
   xmlns:xsd="http://www.w3.org/2001/XMLSchema"
>
   <types>
      <schema
         targetNamespace="urn:vim25"
         xmlns="http://www.w3.org/2001/XMLSchema"
         xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/"
         xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
         xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
         xmlns:vim25="urn:vim25"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         elementFormDefault="qualified"
      >
         <complexType name="DynamicArray">
            <sequence>
               <element name="dynamicType" type="xsd:string" minOccurs="0" />
               <element name="val" type="xsd:anyType" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DynamicData">
            <sequence>
               <element name="dynamicType" type="xsd:string" minOccurs="0" />
               <element name="dynamicProperty" type="vim25:DynamicProperty" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DynamicProperty">
            <sequence>
               <element name="name" type="xsd:string" />
               <element name="val" type="xsd:anyType" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfDynamicProperty">
            <sequence>
               <element name="DynamicProperty" type="vim25:DynamicProperty" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="KeyAnyValue">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="value" type="xsd:anyType" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfKeyAnyValue">
            <sequence>
               <element name="KeyAnyValue" type="vim25:KeyAnyValue" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="LocalizableMessage">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="arg" type="vim25:KeyAnyValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="message" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfLocalizableMessage">
            <sequence>
               <element name="LocalizableMessage" type="vim25:LocalizableMessage" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostCommunication">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostCommunicationFault" type="vim25:HostCommunication"/>
         <complexType name="HostNotConnected">
            <complexContent>
               <extension base="vim25:HostCommunication">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostNotConnectedFault" type="vim25:HostNotConnected"/>
         <complexType name="HostNotReachable">
            <complexContent>
               <extension base="vim25:HostCommunication">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostNotReachableFault" type="vim25:HostNotReachable"/>
         <complexType name="InvalidArgument">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                     <element name="invalidProperty" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidArgumentFault" type="vim25:InvalidArgument"/>
         <complexType name="InvalidRequest">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidRequestFault" type="vim25:InvalidRequest"/>
         <complexType name="InvalidType">
            <complexContent>
               <extension base="vim25:InvalidRequest">
                  <sequence>
                     <element name="argument" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidTypeFault" type="vim25:InvalidType"/>
         <complexType name="ManagedObjectNotFound">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                     <element name="obj" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ManagedObjectNotFoundFault" type="vim25:ManagedObjectNotFound"/>
         <complexType name="MethodNotFound">
            <complexContent>
               <extension base="vim25:InvalidRequest">
                  <sequence>
                     <element name="receiver" type="vim25:ManagedObjectReference" />
                     <element name="method" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MethodNotFoundFault" type="vim25:MethodNotFound"/>
         <complexType name="NotEnoughLicenses">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotEnoughLicensesFault" type="vim25:NotEnoughLicenses"/>
         <complexType name="NotImplemented">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotImplementedFault" type="vim25:NotImplemented"/>
         <complexType name="NotSupported">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotSupportedFault" type="vim25:NotSupported"/>
         <complexType name="RequestCanceled">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RequestCanceledFault" type="vim25:RequestCanceled"/>
         <complexType name="SecurityError">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SecurityErrorFault" type="vim25:SecurityError"/>
         <complexType name="SystemError">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                     <element name="reason" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SystemErrorFault" type="vim25:SystemError"/>
         <complexType name="UnexpectedFault">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                     <element name="faultName" type="xsd:string" />
                     <element name="fault" type="vim25:LocalizedMethodFault" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnexpectedFaultFault" type="vim25:UnexpectedFault"/>
         <complexType name="InvalidCollectorVersion">
            <complexContent>
               <extension base="vim25:MethodFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidCollectorVersionFault" type="vim25:InvalidCollectorVersion"/>
         <complexType name="InvalidProperty">
            <complexContent>
               <extension base="vim25:MethodFault">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidPropertyFault" type="vim25:InvalidProperty"/>
         <complexType name="PropertyFilterSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="propSet" type="vim25:PropertySpec" maxOccurs="unbounded" />
                     <element name="objectSet" type="vim25:ObjectSpec" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPropertyFilterSpec">
            <sequence>
               <element name="PropertyFilterSpec" type="vim25:PropertyFilterSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PropertySpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="all" type="xsd:boolean" minOccurs="0" />
                     <element name="pathSet" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPropertySpec">
            <sequence>
               <element name="PropertySpec" type="vim25:PropertySpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ObjectSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="obj" type="vim25:ManagedObjectReference" />
                     <element name="skip" type="xsd:boolean" minOccurs="0" />
                     <element name="selectSet" type="vim25:SelectionSpec" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfObjectSpec">
            <sequence>
               <element name="ObjectSpec" type="vim25:ObjectSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="SelectionSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfSelectionSpec">
            <sequence>
               <element name="SelectionSpec" type="vim25:SelectionSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="TraversalSpec">
            <complexContent>
               <extension base="vim25:SelectionSpec">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="path" type="xsd:string" />
                     <element name="skip" type="xsd:boolean" minOccurs="0" />
                     <element name="selectSet" type="vim25:SelectionSpec" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DestroyPropertyFilterRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DestroyPropertyFilter"  type="vim25:DestroyPropertyFilterRequestType" />
         <element name="DestroyPropertyFilterResponse">
            <complexType />
         </element>
         <complexType name="ObjectContent">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="obj" type="vim25:ManagedObjectReference" />
                     <element name="propSet" type="vim25:DynamicProperty" minOccurs="0" maxOccurs="unbounded" />
                     <element name="missingSet" type="vim25:MissingProperty" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfObjectContent">
            <sequence>
               <element name="ObjectContent" type="vim25:ObjectContent" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="UpdateSet">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="version" type="xsd:string" />
                     <element name="filterSet" type="vim25:PropertyFilterUpdate" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PropertyFilterUpdate">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="filter" type="vim25:ManagedObjectReference" />
                     <element name="objectSet" type="vim25:ObjectUpdate" minOccurs="0" maxOccurs="unbounded" />
                     <element name="missingSet" type="vim25:MissingObject" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPropertyFilterUpdate">
            <sequence>
               <element name="PropertyFilterUpdate" type="vim25:PropertyFilterUpdate" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="ObjectUpdateKind">
            <restriction base="xsd:string">
               <enumeration value="modify" />
               <enumeration value="enter" />
               <enumeration value="leave" />
            </restriction>
         </simpleType>
         <complexType name="ObjectUpdate">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="kind" type="vim25:ObjectUpdateKind" />
                     <element name="obj" type="vim25:ManagedObjectReference" />
                     <element name="changeSet" type="vim25:PropertyChange" minOccurs="0" maxOccurs="unbounded" />
                     <element name="missingSet" type="vim25:MissingProperty" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfObjectUpdate">
            <sequence>
               <element name="ObjectUpdate" type="vim25:ObjectUpdate" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="PropertyChangeOp">
            <restriction base="xsd:string">
               <enumeration value="add" />
               <enumeration value="remove" />
               <enumeration value="assign" />
               <enumeration value="indirectRemove" />
            </restriction>
         </simpleType>
         <complexType name="PropertyChange">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="op" type="vim25:PropertyChangeOp" />
                     <element name="val" type="xsd:anyType" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPropertyChange">
            <sequence>
               <element name="PropertyChange" type="vim25:PropertyChange" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="MissingProperty">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="path" type="xsd:string" />
                     <element name="fault" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfMissingProperty">
            <sequence>
               <element name="MissingProperty" type="vim25:MissingProperty" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="MissingObject">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="obj" type="vim25:ManagedObjectReference" />
                     <element name="fault" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfMissingObject">
            <sequence>
               <element name="MissingObject" type="vim25:MissingObject" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CreateFilterRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:PropertyFilterSpec" />
               <element name="partialUpdates" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="CreateFilter"  type="vim25:CreateFilterRequestType" />
         <element name="CreateFilterResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RetrievePropertiesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="specSet" type="vim25:PropertyFilterSpec" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="RetrieveProperties"  type="vim25:RetrievePropertiesRequestType" />
         <element name="RetrievePropertiesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ObjectContent" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CheckForUpdatesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="version" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="CheckForUpdates"  type="vim25:CheckForUpdatesRequestType" />
         <element name="CheckForUpdatesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:UpdateSet" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="WaitForUpdatesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="version" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="WaitForUpdates"  type="vim25:WaitForUpdatesRequestType" />
         <element name="WaitForUpdatesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:UpdateSet" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CancelWaitForUpdatesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="CancelWaitForUpdates"  type="vim25:CancelWaitForUpdatesRequestType" />
         <element name="CancelWaitForUpdatesResponse">
            <complexType />
         </element>
         <complexType name="LocalizedMethodFault">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="fault" type="vim25:MethodFault" />
                     <element name="localizedMessage" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MethodFault">
            <sequence>
               <element name="dynamicType" type="xsd:string" minOccurs="0" />
               <element name="dynamicProperty" type="vim25:DynamicProperty" minOccurs="0" maxOccurs="unbounded" />
               <element name="faultCause" type="vim25:LocalizedMethodFault" minOccurs="0" />
               <element name="faultMessage" type="vim25:LocalizableMessage" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfMethodFault">
            <sequence>
               <element name="MethodFault" type="vim25:MethodFault" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="MethodFaultFault" type="vim25:MethodFault"/>
         <complexType name="RuntimeFault">
            <complexContent>
               <extension base="vim25:MethodFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RuntimeFaultFault" type="vim25:RuntimeFault"/>
         <complexType name="AboutInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="fullName" type="xsd:string" />
                     <element name="vendor" type="xsd:string" />
                     <element name="version" type="xsd:string" />
                     <element name="build" type="xsd:string" />
                     <element name="localeVersion" type="xsd:string" minOccurs="0" />
                     <element name="localeBuild" type="xsd:string" minOccurs="0" />
                     <element name="osType" type="xsd:string" />
                     <element name="productLineId" type="xsd:string" />
                     <element name="apiType" type="xsd:string" />
                     <element name="apiVersion" type="xsd:string" />
                     <element name="instanceUuid" type="xsd:string" minOccurs="0" />
                     <element name="licenseProductName" type="xsd:string" minOccurs="0" />
                     <element name="licenseProductVersion" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AuthorizationDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="privilege" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="privilegeGroup" type="vim25:ElementDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="Permission">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="principal" type="xsd:string" />
                     <element name="group" type="xsd:boolean" />
                     <element name="roleId" type="xsd:int" />
                     <element name="propagate" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPermission">
            <sequence>
               <element name="Permission" type="vim25:Permission" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="AuthorizationRole">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="roleId" type="xsd:int" />
                     <element name="system" type="xsd:boolean" />
                     <element name="name" type="xsd:string" />
                     <element name="info" type="vim25:Description" />
                     <element name="privilege" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAuthorizationRole">
            <sequence>
               <element name="AuthorizationRole" type="vim25:AuthorizationRole" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="AuthorizationPrivilege">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="privId" type="xsd:string" />
                     <element name="onParent" type="xsd:boolean" />
                     <element name="name" type="xsd:string" />
                     <element name="privGroupName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAuthorizationPrivilege">
            <sequence>
               <element name="AuthorizationPrivilege" type="vim25:AuthorizationPrivilege" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="AddAuthorizationRoleRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="privIds" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="AddAuthorizationRole"  type="vim25:AddAuthorizationRoleRequestType" />
         <element name="AddAuthorizationRoleResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RemoveAuthorizationRoleRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="roleId" type="xsd:int" />
               <element name="failIfUsed" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="RemoveAuthorizationRole"  type="vim25:RemoveAuthorizationRoleRequestType" />
         <element name="RemoveAuthorizationRoleResponse">
            <complexType />
         </element>
         <complexType name="UpdateAuthorizationRoleRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="roleId" type="xsd:int" />
               <element name="newName" type="xsd:string" />
               <element name="privIds" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="UpdateAuthorizationRole"  type="vim25:UpdateAuthorizationRoleRequestType" />
         <element name="UpdateAuthorizationRoleResponse">
            <complexType />
         </element>
         <complexType name="MergePermissionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="srcRoleId" type="xsd:int" />
               <element name="dstRoleId" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="MergePermissions"  type="vim25:MergePermissionsRequestType" />
         <element name="MergePermissionsResponse">
            <complexType />
         </element>
         <complexType name="RetrieveRolePermissionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="roleId" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="RetrieveRolePermissions"  type="vim25:RetrieveRolePermissionsRequestType" />
         <element name="RetrieveRolePermissionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:Permission" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RetrieveEntityPermissionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="inherited" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="RetrieveEntityPermissions"  type="vim25:RetrieveEntityPermissionsRequestType" />
         <element name="RetrieveEntityPermissionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:Permission" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RetrieveAllPermissionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RetrieveAllPermissions"  type="vim25:RetrieveAllPermissionsRequestType" />
         <element name="RetrieveAllPermissionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:Permission" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SetEntityPermissionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="permission" type="vim25:Permission" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="SetEntityPermissions"  type="vim25:SetEntityPermissionsRequestType" />
         <element name="SetEntityPermissionsResponse">
            <complexType />
         </element>
         <complexType name="ResetEntityPermissionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="permission" type="vim25:Permission" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="ResetEntityPermissions"  type="vim25:ResetEntityPermissionsRequestType" />
         <element name="ResetEntityPermissionsResponse">
            <complexType />
         </element>
         <complexType name="RemoveEntityPermissionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="user" type="xsd:string" />
               <element name="isGroup" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="RemoveEntityPermission"  type="vim25:RemoveEntityPermissionRequestType" />
         <element name="RemoveEntityPermissionResponse">
            <complexType />
         </element>
         <complexType name="BoolPolicy">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                     <element name="value" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="Capability">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="provisioningSupported" type="xsd:boolean" />
                     <element name="multiHostSupported" type="xsd:boolean" />
                     <element name="userShellAccessSupported" type="xsd:boolean" />
                     <element name="supportedEVCMode" type="vim25:EVCMode" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterComputeResourceSummary">
            <complexContent>
               <extension base="vim25:ComputeResourceSummary">
                  <sequence>
                     <element name="currentFailoverLevel" type="xsd:int" />
                     <element name="admissionControlInfo" type="vim25:ClusterDasAdmissionControlInfo" minOccurs="0" />
                     <element name="numVmotions" type="xsd:int" />
                     <element name="targetBalance" type="xsd:int" minOccurs="0" />
                     <element name="currentBalance" type="xsd:int" minOccurs="0" />
                     <element name="currentEVCModeKey" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ReconfigureClusterRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:ClusterConfigSpec" />
               <element name="modify" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="ReconfigureCluster_Task"  type="vim25:ReconfigureClusterRequestType" />
         <element name="ReconfigureCluster_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ApplyRecommendationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="key" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="ApplyRecommendation"  type="vim25:ApplyRecommendationRequestType" />
         <element name="ApplyRecommendationResponse">
            <complexType />
         </element>
         <complexType name="RecommendHostsForVmRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" />
               <element name="pool" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="RecommendHostsForVm"  type="vim25:RecommendHostsForVmRequestType" />
         <element name="RecommendHostsForVmResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ClusterHostRecommendation" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="AddHostRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:HostConnectSpec" />
               <element name="asConnected" type="xsd:boolean" />
               <element name="resourcePool" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="license" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="AddHost_Task"  type="vim25:AddHostRequestType" />
         <element name="AddHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MoveIntoRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="MoveInto_Task"  type="vim25:MoveIntoRequestType" />
         <element name="MoveInto_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MoveHostIntoRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" />
               <element name="resourcePool" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="MoveHostInto_Task"  type="vim25:MoveHostIntoRequestType" />
         <element name="MoveHostInto_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RefreshRecommendationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RefreshRecommendation"  type="vim25:RefreshRecommendationRequestType" />
         <element name="RefreshRecommendationResponse">
            <complexType />
         </element>
         <complexType name="RetrieveDasAdvancedRuntimeInfoRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RetrieveDasAdvancedRuntimeInfo"  type="vim25:RetrieveDasAdvancedRuntimeInfoRequestType" />
         <element name="RetrieveDasAdvancedRuntimeInfoResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ClusterDasAdvancedRuntimeInfo" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ComputeResourceSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="totalCpu" type="xsd:int" />
                     <element name="totalMemory" type="xsd:long" />
                     <element name="numCpuCores" type="xsd:short" />
                     <element name="numCpuThreads" type="xsd:short" />
                     <element name="effectiveCpu" type="xsd:int" />
                     <element name="effectiveMemory" type="xsd:long" />
                     <element name="numHosts" type="xsd:int" />
                     <element name="numEffectiveHosts" type="xsd:int" />
                     <element name="overallStatus" type="vim25:ManagedEntityStatus" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ComputeResourceConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vmSwapPlacement" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ComputeResourceConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vmSwapPlacement" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ReconfigureComputeResourceRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:ComputeResourceConfigSpec" />
               <element name="modify" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="ReconfigureComputeResource_Task"  type="vim25:ReconfigureComputeResourceRequestType" />
         <element name="ReconfigureComputeResource_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="ConfigSpecOperation">
            <restriction base="xsd:string">
               <enumeration value="add" />
               <enumeration value="edit" />
               <enumeration value="remove" />
            </restriction>
         </simpleType>
         <complexType name="CustomFieldDef">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                     <element name="type" type="xsd:string" />
                     <element name="managedObjectType" type="xsd:string" minOccurs="0" />
                     <element name="fieldDefPrivileges" type="vim25:PrivilegePolicyDef" minOccurs="0" />
                     <element name="fieldInstancePrivileges" type="vim25:PrivilegePolicyDef" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfCustomFieldDef">
            <sequence>
               <element name="CustomFieldDef" type="vim25:CustomFieldDef" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CustomFieldValue">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfCustomFieldValue">
            <sequence>
               <element name="CustomFieldValue" type="vim25:CustomFieldValue" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CustomFieldStringValue">
            <complexContent>
               <extension base="vim25:CustomFieldValue">
                  <sequence>
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AddCustomFieldDefRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="moType" type="xsd:string" minOccurs="0" />
               <element name="fieldDefPolicy" type="vim25:PrivilegePolicyDef" minOccurs="0" />
               <element name="fieldPolicy" type="vim25:PrivilegePolicyDef" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="AddCustomFieldDef"  type="vim25:AddCustomFieldDefRequestType" />
         <element name="AddCustomFieldDefResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:CustomFieldDef" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RemoveCustomFieldDefRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="key" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="RemoveCustomFieldDef"  type="vim25:RemoveCustomFieldDefRequestType" />
         <element name="RemoveCustomFieldDefResponse">
            <complexType />
         </element>
         <complexType name="RenameCustomFieldDefRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="key" type="xsd:int" />
               <element name="name" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RenameCustomFieldDef"  type="vim25:RenameCustomFieldDefRequestType" />
         <element name="RenameCustomFieldDefResponse">
            <complexType />
         </element>
         <complexType name="SetFieldRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="key" type="xsd:int" />
               <element name="value" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="SetField"  type="vim25:SetFieldRequestType" />
         <element name="SetFieldResponse">
            <complexType />
         </element>
         <complexType name="DoesCustomizationSpecExistRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="DoesCustomizationSpecExist"  type="vim25:DoesCustomizationSpecExistRequestType" />
         <element name="DoesCustomizationSpecExistResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <complexType name="GetCustomizationSpecRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="GetCustomizationSpec"  type="vim25:GetCustomizationSpecRequestType" />
         <element name="GetCustomizationSpecResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:CustomizationSpecItem" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateCustomizationSpecRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="item" type="vim25:CustomizationSpecItem" />
            </sequence>
         </complexType>
         <element name="CreateCustomizationSpec"  type="vim25:CreateCustomizationSpecRequestType" />
         <element name="CreateCustomizationSpecResponse">
            <complexType />
         </element>
         <complexType name="OverwriteCustomizationSpecRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="item" type="vim25:CustomizationSpecItem" />
            </sequence>
         </complexType>
         <element name="OverwriteCustomizationSpec"  type="vim25:OverwriteCustomizationSpecRequestType" />
         <element name="OverwriteCustomizationSpecResponse">
            <complexType />
         </element>
         <complexType name="DeleteCustomizationSpecRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="DeleteCustomizationSpec"  type="vim25:DeleteCustomizationSpecRequestType" />
         <element name="DeleteCustomizationSpecResponse">
            <complexType />
         </element>
         <complexType name="DuplicateCustomizationSpecRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="newName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="DuplicateCustomizationSpec"  type="vim25:DuplicateCustomizationSpecRequestType" />
         <element name="DuplicateCustomizationSpecResponse">
            <complexType />
         </element>
         <complexType name="RenameCustomizationSpecRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="newName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RenameCustomizationSpec"  type="vim25:RenameCustomizationSpecRequestType" />
         <element name="RenameCustomizationSpecResponse">
            <complexType />
         </element>
         <complexType name="CustomizationSpecItemToXmlRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="item" type="vim25:CustomizationSpecItem" />
            </sequence>
         </complexType>
         <element name="CustomizationSpecItemToXml"  type="vim25:CustomizationSpecItemToXmlRequestType" />
         <element name="CustomizationSpecItemToXmlResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="XmlToCustomizationSpecItemRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="specItemXml" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="XmlToCustomizationSpecItem"  type="vim25:XmlToCustomizationSpecItemRequestType" />
         <element name="XmlToCustomizationSpecItemResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:CustomizationSpecItem" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CheckCustomizationResourcesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="guestOs" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="CheckCustomizationResources"  type="vim25:CheckCustomizationResourcesRequestType" />
         <element name="CheckCustomizationResourcesResponse">
            <complexType />
         </element>
         <complexType name="CustomizationSpecInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="type" type="xsd:string" />
                     <element name="changeVersion" type="xsd:string" minOccurs="0" />
                     <element name="lastUpdateTime" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfCustomizationSpecInfo">
            <sequence>
               <element name="CustomizationSpecInfo" type="vim25:CustomizationSpecInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CustomizationSpecItem">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="info" type="vim25:CustomizationSpecInfo" />
                     <element name="spec" type="vim25:CustomizationSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="QueryConnectionInfoRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="hostname" type="xsd:string" />
               <element name="port" type="xsd:int" />
               <element name="username" type="xsd:string" />
               <element name="password" type="xsd:string" />
               <element name="sslThumbprint" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryConnectionInfo"  type="vim25:QueryConnectionInfoRequestType" />
         <element name="QueryConnectionInfoResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostConnectInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PowerOnMultiVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="PowerOnMultiVM_Task"  type="vim25:PowerOnMultiVMRequestType" />
         <element name="PowerOnMultiVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="DatastoreAccessible">
            <restriction base="xsd:string">
               <enumeration value="True" />
               <enumeration value="False" />
            </restriction>
         </simpleType>
         <complexType name="DatastoreSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="datastore" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="name" type="xsd:string" />
                     <element name="url" type="xsd:string" />
                     <element name="capacity" type="xsd:long" />
                     <element name="freeSpace" type="xsd:long" />
                     <element name="uncommitted" type="xsd:long" minOccurs="0" />
                     <element name="accessible" type="xsd:boolean" />
                     <element name="multipleHostAccess" type="xsd:boolean" minOccurs="0" />
                     <element name="type" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="url" type="xsd:string" />
                     <element name="freeSpace" type="xsd:long" />
                     <element name="maxFileSize" type="xsd:long" />
                     <element name="timestamp" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreCapability">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="directoryHierarchySupported" type="xsd:boolean" />
                     <element name="rawDiskMappingsSupported" type="xsd:boolean" />
                     <element name="perFileThinProvisioningSupported" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreHostMount">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="vim25:ManagedObjectReference" />
                     <element name="mountInfo" type="vim25:HostMountInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDatastoreHostMount">
            <sequence>
               <element name="DatastoreHostMount" type="vim25:DatastoreHostMount" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="RefreshDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RefreshDatastore"  type="vim25:RefreshDatastoreRequestType" />
         <element name="RefreshDatastoreResponse">
            <complexType />
         </element>
         <complexType name="RefreshDatastoreStorageInfoRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RefreshDatastoreStorageInfo"  type="vim25:RefreshDatastoreStorageInfoRequestType" />
         <element name="RefreshDatastoreStorageInfoResponse">
            <complexType />
         </element>
         <complexType name="RenameDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="newName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RenameDatastore"  type="vim25:RenameDatastoreRequestType" />
         <element name="RenameDatastoreResponse">
            <complexType />
         </element>
         <complexType name="DestroyDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DestroyDatastore"  type="vim25:DestroyDatastoreRequestType" />
         <element name="DestroyDatastoreResponse">
            <complexType />
         </element>
         <complexType name="Description">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="label" type="xsd:string" />
                     <element name="summary" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="DiagnosticManagerLogCreator">
            <restriction base="xsd:string">
               <enumeration value="vpxd" />
               <enumeration value="vpxa" />
               <enumeration value="hostd" />
               <enumeration value="serverd" />
               <enumeration value="install" />
               <enumeration value="vpxClient" />
               <enumeration value="recordLog" />
            </restriction>
         </simpleType>
         <simpleType name="DiagnosticManagerLogFormat">
            <restriction base="xsd:string">
               <enumeration value="plain" />
            </restriction>
         </simpleType>
         <complexType name="DiagnosticManagerLogDescriptor">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="fileName" type="xsd:string" />
                     <element name="creator" type="xsd:string" />
                     <element name="format" type="xsd:string" />
                     <element name="mimeType" type="xsd:string" />
                     <element name="info" type="vim25:Description" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDiagnosticManagerLogDescriptor">
            <sequence>
               <element name="DiagnosticManagerLogDescriptor" type="vim25:DiagnosticManagerLogDescriptor" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DiagnosticManagerLogHeader">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="lineStart" type="xsd:int" />
                     <element name="lineEnd" type="xsd:int" />
                     <element name="lineText" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DiagnosticManagerBundleInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="system" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="url" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDiagnosticManagerBundleInfo">
            <sequence>
               <element name="DiagnosticManagerBundleInfo" type="vim25:DiagnosticManagerBundleInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="QueryDescriptionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryDescriptions"  type="vim25:QueryDescriptionsRequestType" />
         <element name="QueryDescriptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:DiagnosticManagerLogDescriptor" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="BrowseDiagnosticLogRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="key" type="xsd:string" />
               <element name="start" type="xsd:int" minOccurs="0" />
               <element name="lines" type="xsd:int" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="BrowseDiagnosticLog"  type="vim25:BrowseDiagnosticLogRequestType" />
         <element name="BrowseDiagnosticLogResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:DiagnosticManagerLogHeader" />
               </sequence>
            </complexType>
         </element>
         <complexType name="GenerateLogBundlesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="includeDefault" type="xsd:boolean" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="GenerateLogBundles_Task"  type="vim25:GenerateLogBundlesRequestType" />
         <element name="GenerateLogBundles_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="DistributedVirtualSwitchProductSpecOperationType">
            <restriction base="xsd:string">
               <enumeration value="preInstall" />
               <enumeration value="upgrade" />
               <enumeration value="notifyAvailableUpgrade" />
               <enumeration value="proceedWithUpgrade" />
               <enumeration value="updateBundleInfo" />
            </restriction>
         </simpleType>
         <complexType name="DVSContactInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="contact" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSCapability">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="dvsOperationSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="dvPortGroupOperationSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="dvPortOperationSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="compatibleHostComponentProductInfo" type="vim25:DistributedVirtualSwitchHostProductSpec" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="uuid" type="xsd:string" />
                     <element name="numPorts" type="xsd:int" />
                     <element name="productInfo" type="vim25:DistributedVirtualSwitchProductSpec" minOccurs="0" />
                     <element name="hostMember" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vm" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="portgroupName" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                     <element name="contact" type="vim25:DVSContactInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="autoPreInstallAllowed" type="xsd:boolean" minOccurs="0" />
                     <element name="autoUpgradeAllowed" type="xsd:boolean" minOccurs="0" />
                     <element name="partialUpgradeAllowed" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSUplinkPortPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSNameArrayUplinkPortPolicy">
            <complexContent>
               <extension base="vim25:DVSUplinkPortPolicy">
                  <sequence>
                     <element name="uplinkPortName" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="configVersion" type="xsd:string" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="numStandalonePorts" type="xsd:int" minOccurs="0" />
                     <element name="maxPorts" type="xsd:int" minOccurs="0" />
                     <element name="uplinkPortPolicy" type="vim25:DVSUplinkPortPolicy" minOccurs="0" />
                     <element name="uplinkPortgroup" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="defaultPortConfig" type="vim25:DVPortSetting" minOccurs="0" />
                     <element name="host" type="vim25:DistributedVirtualSwitchHostMemberConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="extensionKey" type="xsd:string" minOccurs="0" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                     <element name="policy" type="vim25:DVSPolicy" minOccurs="0" />
                     <element name="vendorSpecificConfig" type="vim25:DistributedVirtualSwitchKeyedOpaqueBlob" minOccurs="0" maxOccurs="unbounded" />
                     <element name="contact" type="vim25:DVSContactInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSCreateSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="configSpec" type="vim25:DVSConfigSpec" />
                     <element name="productInfo" type="vim25:DistributedVirtualSwitchProductSpec" minOccurs="0" />
                     <element name="capability" type="vim25:DVSCapability" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="uuid" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="numStandalonePorts" type="xsd:int" />
                     <element name="numPorts" type="xsd:int" />
                     <element name="maxPorts" type="xsd:int" />
                     <element name="uplinkPortPolicy" type="vim25:DVSUplinkPortPolicy" />
                     <element name="uplinkPortgroup" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="defaultPortConfig" type="vim25:DVPortSetting" />
                     <element name="host" type="vim25:DistributedVirtualSwitchHostMember" minOccurs="0" maxOccurs="unbounded" />
                     <element name="productInfo" type="vim25:DistributedVirtualSwitchProductSpec" />
                     <element name="targetInfo" type="vim25:DistributedVirtualSwitchProductSpec" minOccurs="0" />
                     <element name="extensionKey" type="xsd:string" minOccurs="0" />
                     <element name="vendorSpecificConfig" type="vim25:DistributedVirtualSwitchKeyedOpaqueBlob" minOccurs="0" maxOccurs="unbounded" />
                     <element name="policy" type="vim25:DVSPolicy" minOccurs="0" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                     <element name="configVersion" type="xsd:string" />
                     <element name="contact" type="vim25:DVSContactInfo" />
                     <element name="createTime" type="xsd:dateTime" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FetchDVPortKeysRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="criteria" type="vim25:DistributedVirtualSwitchPortCriteria" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="FetchDVPortKeys"  type="vim25:FetchDVPortKeysRequestType" />
         <element name="FetchDVPortKeysResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FetchDVPortsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="criteria" type="vim25:DistributedVirtualSwitchPortCriteria" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="FetchDVPorts"  type="vim25:FetchDVPortsRequestType" />
         <element name="FetchDVPortsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:DistributedVirtualPort" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryUsedVlanIdInDvsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryUsedVlanIdInDvs"  type="vim25:QueryUsedVlanIdInDvsRequestType" />
         <element name="QueryUsedVlanIdInDvsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ReconfigureDvsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:DVSConfigSpec" />
            </sequence>
         </complexType>
         <element name="ReconfigureDvs_Task"  type="vim25:ReconfigureDvsRequestType" />
         <element name="ReconfigureDvs_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PerformDvsProductSpecOperationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="operation" type="xsd:string" />
               <element name="productSpec" type="vim25:DistributedVirtualSwitchProductSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="PerformDvsProductSpecOperation_Task"  type="vim25:PerformDvsProductSpecOperationRequestType" />
         <element name="PerformDvsProductSpecOperation_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MergeDvsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="dvs" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="MergeDvs_Task"  type="vim25:MergeDvsRequestType" />
         <element name="MergeDvs_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="AddDVPortgroupRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:DVPortgroupConfigSpec" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="AddDVPortgroup_Task"  type="vim25:AddDVPortgroupRequestType" />
         <element name="AddDVPortgroup_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MoveDVPortRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="portKey" type="xsd:string" maxOccurs="unbounded" />
               <element name="destinationPortgroupKey" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="MoveDVPort_Task"  type="vim25:MoveDVPortRequestType" />
         <element name="MoveDVPort_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateDvsCapabilityRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="capability" type="vim25:DVSCapability" />
            </sequence>
         </complexType>
         <element name="UpdateDvsCapability"  type="vim25:UpdateDvsCapabilityRequestType" />
         <element name="UpdateDvsCapabilityResponse">
            <complexType />
         </element>
         <complexType name="ReconfigureDVPortRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="port" type="vim25:DVPortConfigSpec" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="ReconfigureDVPort_Task"  type="vim25:ReconfigureDVPortRequestType" />
         <element name="ReconfigureDVPort_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RefreshDVPortStateRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="portKeys" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="RefreshDVPortState"  type="vim25:RefreshDVPortStateRequestType" />
         <element name="RefreshDVPortStateResponse">
            <complexType />
         </element>
         <complexType name="RectifyDvsHostRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="hosts" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="RectifyDvsHost_Task"  type="vim25:RectifyDvsHostRequestType" />
         <element name="RectifyDvsHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="EVCMode">
            <complexContent>
               <extension base="vim25:ElementDescription">
                  <sequence>
                     <element name="vendor" type="xsd:string" />
                     <element name="vendorTier" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfEVCMode">
            <sequence>
               <element name="EVCMode" type="vim25:EVCMode" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ElementDescription">
            <complexContent>
               <extension base="vim25:Description">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfElementDescription">
            <sequence>
               <element name="ElementDescription" type="vim25:ElementDescription" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="EnumDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="tags" type="vim25:ElementDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfEnumDescription">
            <sequence>
               <element name="EnumDescription" type="vim25:EnumDescription" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="QueryConfigOptionDescriptorRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryConfigOptionDescriptor"  type="vim25:QueryConfigOptionDescriptorRequestType" />
         <element name="QueryConfigOptionDescriptorResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:VirtualMachineConfigOptionDescriptor" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryConfigOptionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="key" type="xsd:string" minOccurs="0" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryConfigOption"  type="vim25:QueryConfigOptionRequestType" />
         <element name="QueryConfigOptionResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:VirtualMachineConfigOption" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryConfigTargetRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryConfigTarget"  type="vim25:QueryConfigTargetRequestType" />
         <element name="QueryConfigTargetResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ConfigTarget" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryTargetCapabilitiesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryTargetCapabilities"  type="vim25:QueryTargetCapabilitiesRequestType" />
         <element name="QueryTargetCapabilitiesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostCapability" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ExtendedDescription">
            <complexContent>
               <extension base="vim25:Description">
                  <sequence>
                     <element name="messageCatalogKeyPrefix" type="xsd:string" />
                     <element name="messageArg" type="vim25:KeyAnyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ExtendedElementDescription">
            <complexContent>
               <extension base="vim25:ElementDescription">
                  <sequence>
                     <element name="messageCatalogKeyPrefix" type="xsd:string" />
                     <element name="messageArg" type="vim25:KeyAnyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="setCustomValueRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="key" type="xsd:string" />
               <element name="value" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="setCustomValue"  type="vim25:setCustomValueRequestType" />
         <element name="setCustomValueResponse">
            <complexType />
         </element>
         <complexType name="ExtensionServerInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="url" type="xsd:string" />
                     <element name="description" type="vim25:Description" />
                     <element name="company" type="xsd:string" />
                     <element name="type" type="xsd:string" />
                     <element name="adminEmail" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfExtensionServerInfo">
            <sequence>
               <element name="ExtensionServerInfo" type="vim25:ExtensionServerInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ExtensionClientInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="version" type="xsd:string" />
                     <element name="description" type="vim25:Description" />
                     <element name="company" type="xsd:string" />
                     <element name="type" type="xsd:string" />
                     <element name="url" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfExtensionClientInfo">
            <sequence>
               <element name="ExtensionClientInfo" type="vim25:ExtensionClientInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ExtensionTaskTypeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="taskID" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfExtensionTaskTypeInfo">
            <sequence>
               <element name="ExtensionTaskTypeInfo" type="vim25:ExtensionTaskTypeInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ExtensionEventTypeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="eventID" type="xsd:string" />
                     <element name="eventTypeSchema" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfExtensionEventTypeInfo">
            <sequence>
               <element name="ExtensionEventTypeInfo" type="vim25:ExtensionEventTypeInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ExtensionFaultTypeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="faultID" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfExtensionFaultTypeInfo">
            <sequence>
               <element name="ExtensionFaultTypeInfo" type="vim25:ExtensionFaultTypeInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ExtensionPrivilegeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="privID" type="xsd:string" />
                     <element name="privGroupName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfExtensionPrivilegeInfo">
            <sequence>
               <element name="ExtensionPrivilegeInfo" type="vim25:ExtensionPrivilegeInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ExtensionResourceInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="locale" type="xsd:string" />
                     <element name="module" type="xsd:string" />
                     <element name="data" type="vim25:KeyValue" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfExtensionResourceInfo">
            <sequence>
               <element name="ExtensionResourceInfo" type="vim25:ExtensionResourceInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ExtensionHealthInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="url" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="Extension">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="description" type="vim25:Description" />
                     <element name="key" type="xsd:string" />
                     <element name="company" type="xsd:string" minOccurs="0" />
                     <element name="type" type="xsd:string" minOccurs="0" />
                     <element name="version" type="xsd:string" />
                     <element name="subjectName" type="xsd:string" minOccurs="0" />
                     <element name="server" type="vim25:ExtensionServerInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="client" type="vim25:ExtensionClientInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="taskList" type="vim25:ExtensionTaskTypeInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="eventList" type="vim25:ExtensionEventTypeInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="faultList" type="vim25:ExtensionFaultTypeInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="privilegeList" type="vim25:ExtensionPrivilegeInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="resourceList" type="vim25:ExtensionResourceInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="lastHeartbeatTime" type="xsd:dateTime" />
                     <element name="healthInfo" type="vim25:ExtensionHealthInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfExtension">
            <sequence>
               <element name="Extension" type="vim25:Extension" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="UnregisterExtensionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="extensionKey" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UnregisterExtension"  type="vim25:UnregisterExtensionRequestType" />
         <element name="UnregisterExtensionResponse">
            <complexType />
         </element>
         <complexType name="FindExtensionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="extensionKey" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="FindExtension"  type="vim25:FindExtensionRequestType" />
         <element name="FindExtensionResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:Extension" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RegisterExtensionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="extension" type="vim25:Extension" />
            </sequence>
         </complexType>
         <element name="RegisterExtension"  type="vim25:RegisterExtensionRequestType" />
         <element name="RegisterExtensionResponse">
            <complexType />
         </element>
         <complexType name="UpdateExtensionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="extension" type="vim25:Extension" />
            </sequence>
         </complexType>
         <element name="UpdateExtension"  type="vim25:UpdateExtensionRequestType" />
         <element name="UpdateExtensionResponse">
            <complexType />
         </element>
         <complexType name="GetPublicKeyRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="GetPublicKey"  type="vim25:GetPublicKeyRequestType" />
         <element name="GetPublicKeyResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SetPublicKeyRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="extensionKey" type="xsd:string" />
               <element name="publicKey" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="SetPublicKey"  type="vim25:SetPublicKeyRequestType" />
         <element name="SetPublicKeyResponse">
            <complexType />
         </element>
         <complexType name="SetExtensionCertificateRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="extensionKey" type="xsd:string" />
               <element name="certificatePem" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="SetExtensionCertificate"  type="vim25:SetExtensionCertificateRequestType" />
         <element name="SetExtensionCertificateResponse">
            <complexType />
         </element>
         <complexType name="MoveDatastoreFileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="sourceName" type="xsd:string" />
               <element name="sourceDatacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="destinationName" type="xsd:string" />
               <element name="destinationDatacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="force" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="MoveDatastoreFile_Task"  type="vim25:MoveDatastoreFileRequestType" />
         <element name="MoveDatastoreFile_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CopyDatastoreFileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="sourceName" type="xsd:string" />
               <element name="sourceDatacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="destinationName" type="xsd:string" />
               <element name="destinationDatacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="force" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="CopyDatastoreFile_Task"  type="vim25:CopyDatastoreFileRequestType" />
         <element name="CopyDatastoreFile_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DeleteDatastoreFileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="DeleteDatastoreFile_Task"  type="vim25:DeleteDatastoreFileRequestType" />
         <element name="DeleteDatastoreFile_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MakeDirectoryRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="createParentDirectories" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="MakeDirectory"  type="vim25:MakeDirectoryRequestType" />
         <element name="MakeDirectoryResponse">
            <complexType />
         </element>
         <complexType name="ChangeOwnerRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="owner" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="ChangeOwner"  type="vim25:ChangeOwnerRequestType" />
         <element name="ChangeOwnerResponse">
            <complexType />
         </element>
         <complexType name="CreateFolderRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="CreateFolder"  type="vim25:CreateFolderRequestType" />
         <element name="CreateFolderResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MoveIntoFolderRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="list" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="MoveIntoFolder_Task"  type="vim25:MoveIntoFolderRequestType" />
         <element name="MoveIntoFolder_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:VirtualMachineConfigSpec" />
               <element name="pool" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="CreateVM_Task"  type="vim25:CreateVMRequestType" />
         <element name="CreateVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RegisterVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="path" type="xsd:string" />
               <element name="name" type="xsd:string" minOccurs="0" />
               <element name="asTemplate" type="xsd:boolean" />
               <element name="pool" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="RegisterVM_Task"  type="vim25:RegisterVMRequestType" />
         <element name="RegisterVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateClusterRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="spec" type="vim25:ClusterConfigSpec" />
            </sequence>
         </complexType>
         <element name="CreateCluster"  type="vim25:CreateClusterRequestType" />
         <element name="CreateClusterResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateClusterExRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="spec" type="vim25:ClusterConfigSpecEx" />
            </sequence>
         </complexType>
         <element name="CreateClusterEx"  type="vim25:CreateClusterExRequestType" />
         <element name="CreateClusterExResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="AddStandaloneHostRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:HostConnectSpec" />
               <element name="compResSpec" type="vim25:ComputeResourceConfigSpec" minOccurs="0" />
               <element name="addConnected" type="xsd:boolean" />
               <element name="license" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="AddStandaloneHost_Task"  type="vim25:AddStandaloneHostRequestType" />
         <element name="AddStandaloneHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateDatacenterRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="CreateDatacenter"  type="vim25:CreateDatacenterRequestType" />
         <element name="CreateDatacenterResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UnregisterAndDestroyRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="UnregisterAndDestroy_Task"  type="vim25:UnregisterAndDestroyRequestType" />
         <element name="UnregisterAndDestroy_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateDVSRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:DVSCreateSpec" />
            </sequence>
         </complexType>
         <element name="CreateDVS_Task"  type="vim25:CreateDVSRequestType" />
         <element name="CreateDVS_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SetCollectorPageSizeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="maxCount" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="SetCollectorPageSize"  type="vim25:SetCollectorPageSizeRequestType" />
         <element name="SetCollectorPageSizeResponse">
            <complexType />
         </element>
         <complexType name="RewindCollectorRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RewindCollector"  type="vim25:RewindCollectorRequestType" />
         <element name="RewindCollectorResponse">
            <complexType />
         </element>
         <complexType name="ResetCollectorRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ResetCollector"  type="vim25:ResetCollectorRequestType" />
         <element name="ResetCollectorResponse">
            <complexType />
         </element>
         <complexType name="DestroyCollectorRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DestroyCollector"  type="vim25:DestroyCollectorRequestType" />
         <element name="DestroyCollectorResponse">
            <complexType />
         </element>
         <complexType name="HostServiceTicket">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="xsd:string" minOccurs="0" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                     <element name="sslThumbprint" type="xsd:string" minOccurs="0" />
                     <element name="service" type="xsd:string" />
                     <element name="serviceVersion" type="xsd:string" />
                     <element name="sessionId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostSystemConnectionState">
            <restriction base="xsd:string">
               <enumeration value="connected" />
               <enumeration value="notResponding" />
               <enumeration value="disconnected" />
            </restriction>
         </simpleType>
         <simpleType name="HostSystemPowerState">
            <restriction base="xsd:string">
               <enumeration value="poweredOn" />
               <enumeration value="poweredOff" />
               <enumeration value="standBy" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="QueryHostConnectionInfoRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryHostConnectionInfo"  type="vim25:QueryHostConnectionInfoRequestType" />
         <element name="QueryHostConnectionInfoResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostConnectInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateSystemResourcesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="resourceInfo" type="vim25:HostSystemResourceInfo" />
            </sequence>
         </complexType>
         <element name="UpdateSystemResources"  type="vim25:UpdateSystemResourcesRequestType" />
         <element name="UpdateSystemResourcesResponse">
            <complexType />
         </element>
         <complexType name="ReconnectHostRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="cnxSpec" type="vim25:HostConnectSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="ReconnectHost_Task"  type="vim25:ReconnectHostRequestType" />
         <element name="ReconnectHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DisconnectHostRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DisconnectHost_Task"  type="vim25:DisconnectHostRequestType" />
         <element name="DisconnectHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="EnterMaintenanceModeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="timeout" type="xsd:int" />
               <element name="evacuatePoweredOffVms" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="EnterMaintenanceMode_Task"  type="vim25:EnterMaintenanceModeRequestType" />
         <element name="EnterMaintenanceMode_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ExitMaintenanceModeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="timeout" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="ExitMaintenanceMode_Task"  type="vim25:ExitMaintenanceModeRequestType" />
         <element name="ExitMaintenanceMode_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RebootHostRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="force" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="RebootHost_Task"  type="vim25:RebootHostRequestType" />
         <element name="RebootHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ShutdownHostRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="force" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="ShutdownHost_Task"  type="vim25:ShutdownHostRequestType" />
         <element name="ShutdownHost_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PowerDownHostToStandByRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="timeoutSec" type="xsd:int" />
               <element name="evacuatePoweredOffVms" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="PowerDownHostToStandBy_Task"  type="vim25:PowerDownHostToStandByRequestType" />
         <element name="PowerDownHostToStandBy_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PowerUpHostFromStandByRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="timeoutSec" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="PowerUpHostFromStandBy_Task"  type="vim25:PowerUpHostFromStandByRequestType" />
         <element name="PowerUpHostFromStandBy_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryMemoryOverheadRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="memorySize" type="xsd:long" />
               <element name="videoRamSize" type="xsd:int" minOccurs="0" />
               <element name="numVcpus" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="QueryMemoryOverhead"  type="vim25:QueryMemoryOverheadRequestType" />
         <element name="QueryMemoryOverheadResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:long" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryMemoryOverheadExRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vmConfigInfo" type="vim25:VirtualMachineConfigInfo" />
            </sequence>
         </complexType>
         <element name="QueryMemoryOverheadEx"  type="vim25:QueryMemoryOverheadExRequestType" />
         <element name="QueryMemoryOverheadExResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:long" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ReconfigureHostForDASRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ReconfigureHostForDAS_Task"  type="vim25:ReconfigureHostForDASRequestType" />
         <element name="ReconfigureHostForDAS_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateFlagsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="flagInfo" type="vim25:HostFlagInfo" />
            </sequence>
         </complexType>
         <element name="UpdateFlags"  type="vim25:UpdateFlagsRequestType" />
         <element name="UpdateFlagsResponse">
            <complexType />
         </element>
         <complexType name="AcquireCimServicesTicketRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="AcquireCimServicesTicket"  type="vim25:AcquireCimServicesTicketRequestType" />
         <element name="AcquireCimServicesTicketResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostServiceTicket" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateIpmiRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="ipmiInfo" type="vim25:HostIpmiInfo" />
            </sequence>
         </complexType>
         <element name="UpdateIpmi"  type="vim25:UpdateIpmiRequestType" />
         <element name="UpdateIpmiResponse">
            <complexType />
         </element>
         <simpleType name="HttpNfcLeaseState">
            <restriction base="xsd:string">
               <enumeration value="initializing" />
               <enumeration value="ready" />
               <enumeration value="done" />
               <enumeration value="error" />
            </restriction>
         </simpleType>
         <complexType name="HttpNfcLeaseInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="lease" type="vim25:ManagedObjectReference" />
                     <element name="entity" type="vim25:ManagedObjectReference" />
                     <element name="deviceUrl" type="vim25:HttpNfcLeaseDeviceUrl" minOccurs="0" maxOccurs="unbounded" />
                     <element name="totalDiskCapacityInKB" type="xsd:long" />
                     <element name="leaseTimeout" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HttpNfcLeaseDeviceUrl">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="importKey" type="xsd:string" />
                     <element name="url" type="xsd:string" />
                     <element name="sslThumbprint" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHttpNfcLeaseDeviceUrl">
            <sequence>
               <element name="HttpNfcLeaseDeviceUrl" type="vim25:HttpNfcLeaseDeviceUrl" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HttpNfcLeaseCompleteRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="HttpNfcLeaseComplete"  type="vim25:HttpNfcLeaseCompleteRequestType" />
         <element name="HttpNfcLeaseCompleteResponse">
            <complexType />
         </element>
         <complexType name="HttpNfcLeaseAbortRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="fault" type="vim25:LocalizedMethodFault" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="HttpNfcLeaseAbort"  type="vim25:HttpNfcLeaseAbortRequestType" />
         <element name="HttpNfcLeaseAbortResponse">
            <complexType />
         </element>
         <complexType name="HttpNfcLeaseProgressRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="percent" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="HttpNfcLeaseProgress"  type="vim25:HttpNfcLeaseProgressRequestType" />
         <element name="HttpNfcLeaseProgressResponse">
            <complexType />
         </element>
         <complexType name="ImportSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entityConfig" type="vim25:VAppEntityConfigInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfImportSpec">
            <sequence>
               <element name="ImportSpec" type="vim25:ImportSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="InheritablePolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="inherited" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IntPolicy">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                     <element name="value" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="QueryIpPoolsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="dc" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryIpPools"  type="vim25:QueryIpPoolsRequestType" />
         <element name="QueryIpPoolsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:IpPool" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateIpPoolRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="dc" type="vim25:ManagedObjectReference" />
               <element name="pool" type="vim25:IpPool" />
            </sequence>
         </complexType>
         <element name="CreateIpPool"  type="vim25:CreateIpPoolRequestType" />
         <element name="CreateIpPoolResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateIpPoolRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="dc" type="vim25:ManagedObjectReference" />
               <element name="pool" type="vim25:IpPool" />
            </sequence>
         </complexType>
         <element name="UpdateIpPool"  type="vim25:UpdateIpPoolRequestType" />
         <element name="UpdateIpPoolResponse">
            <complexType />
         </element>
         <complexType name="DestroyIpPoolRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="dc" type="vim25:ManagedObjectReference" />
               <element name="id" type="xsd:int" />
               <element name="force" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="DestroyIpPool"  type="vim25:DestroyIpPoolRequestType" />
         <element name="DestroyIpPoolResponse">
            <complexType />
         </element>
         <complexType name="KeyValue">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfKeyValue">
            <sequence>
               <element name="KeyValue" type="vim25:KeyValue" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="LicenseAssignmentManagerLicenseAssignment">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entityId" type="xsd:string" />
                     <element name="scope" type="xsd:string" minOccurs="0" />
                     <element name="entityDisplayName" type="xsd:string" minOccurs="0" />
                     <element name="assignedLicense" type="vim25:LicenseManagerLicenseInfo" />
                     <element name="properties" type="vim25:KeyAnyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfLicenseAssignmentManagerLicenseAssignment">
            <sequence>
               <element name="LicenseAssignmentManagerLicenseAssignment" type="vim25:LicenseAssignmentManagerLicenseAssignment" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="UpdateAssignedLicenseRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="xsd:string" />
               <element name="licenseKey" type="xsd:string" />
               <element name="entityDisplayName" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="UpdateAssignedLicense"  type="vim25:UpdateAssignedLicenseRequestType" />
         <element name="UpdateAssignedLicenseResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:LicenseManagerLicenseInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RemoveAssignedLicenseRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entityId" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RemoveAssignedLicense"  type="vim25:RemoveAssignedLicenseRequestType" />
         <element name="RemoveAssignedLicenseResponse">
            <complexType />
         </element>
         <complexType name="QueryAssignedLicensesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entityId" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryAssignedLicenses"  type="vim25:QueryAssignedLicensesRequestType" />
         <element name="QueryAssignedLicensesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:LicenseAssignmentManagerLicenseAssignment" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="LicenseManagerState">
            <restriction base="xsd:string">
               <enumeration value="initializing" />
               <enumeration value="normal" />
               <enumeration value="marginal" />
               <enumeration value="fault" />
            </restriction>
         </simpleType>
         <simpleType name="LicenseManagerLicenseKey">
            <restriction base="xsd:string">
               <enumeration value="esxFull" />
               <enumeration value="esxVmtn" />
               <enumeration value="esxExpress" />
               <enumeration value="san" />
               <enumeration value="iscsi" />
               <enumeration value="nas" />
               <enumeration value="vsmp" />
               <enumeration value="backup" />
               <enumeration value="vc" />
               <enumeration value="vcExpress" />
               <enumeration value="esxHost" />
               <enumeration value="gsxHost" />
               <enumeration value="serverHost" />
               <enumeration value="drsPower" />
               <enumeration value="vmotion" />
               <enumeration value="drs" />
               <enumeration value="das" />
            </restriction>
         </simpleType>
         <complexType name="LicenseSource">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseServerSource">
            <complexContent>
               <extension base="vim25:LicenseSource">
                  <sequence>
                     <element name="licenseServer" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LocalLicenseSource">
            <complexContent>
               <extension base="vim25:LicenseSource">
                  <sequence>
                     <element name="licenseKeys" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EvaluationLicenseSource">
            <complexContent>
               <extension base="vim25:LicenseSource">
                  <sequence>
                     <element name="remainingHours" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="LicenseFeatureInfoUnit">
            <restriction base="xsd:string">
               <enumeration value="host" />
               <enumeration value="cpuCore" />
               <enumeration value="cpuPackage" />
               <enumeration value="server" />
               <enumeration value="vm" />
            </restriction>
         </simpleType>
         <simpleType name="LicenseFeatureInfoState">
            <restriction base="xsd:string">
               <enumeration value="enabled" />
               <enumeration value="disabled" />
               <enumeration value="optional" />
            </restriction>
         </simpleType>
         <simpleType name="LicenseFeatureInfoSourceRestriction">
            <restriction base="xsd:string">
               <enumeration value="unrestricted" />
               <enumeration value="served" />
               <enumeration value="file" />
            </restriction>
         </simpleType>
         <complexType name="LicenseFeatureInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="featureName" type="xsd:string" />
                     <element name="featureDescription" type="xsd:string" minOccurs="0" />
                     <element name="state" type="vim25:LicenseFeatureInfoState" minOccurs="0" />
                     <element name="costUnit" type="xsd:string" />
                     <element name="sourceRestriction" type="xsd:string" minOccurs="0" />
                     <element name="dependentKey" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="edition" type="xsd:boolean" minOccurs="0" />
                     <element name="expiresOn" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfLicenseFeatureInfo">
            <sequence>
               <element name="LicenseFeatureInfo" type="vim25:LicenseFeatureInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="LicenseReservationInfoState">
            <restriction base="xsd:string">
               <enumeration value="notUsed" />
               <enumeration value="noLicense" />
               <enumeration value="unlicensedUse" />
               <enumeration value="licensed" />
            </restriction>
         </simpleType>
         <complexType name="LicenseReservationInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="state" type="vim25:LicenseReservationInfoState" />
                     <element name="required" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfLicenseReservationInfo">
            <sequence>
               <element name="LicenseReservationInfo" type="vim25:LicenseReservationInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="LicenseAvailabilityInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="feature" type="vim25:LicenseFeatureInfo" />
                     <element name="total" type="xsd:int" />
                     <element name="available" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfLicenseAvailabilityInfo">
            <sequence>
               <element name="LicenseAvailabilityInfo" type="vim25:LicenseAvailabilityInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="LicenseDiagnostics">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="sourceLastChanged" type="xsd:dateTime" />
                     <element name="sourceLost" type="xsd:string" />
                     <element name="sourceLatency" type="xsd:float" />
                     <element name="licenseRequests" type="xsd:string" />
                     <element name="licenseRequestFailures" type="xsd:string" />
                     <element name="licenseFeatureUnknowns" type="xsd:string" />
                     <element name="opState" type="vim25:LicenseManagerState" />
                     <element name="lastStatusUpdate" type="xsd:dateTime" />
                     <element name="opFailureMessage" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseUsageInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="source" type="vim25:LicenseSource" />
                     <element name="sourceAvailable" type="xsd:boolean" />
                     <element name="reservationInfo" type="vim25:LicenseReservationInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="featureInfo" type="vim25:LicenseFeatureInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseManagerEvaluationInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="properties" type="vim25:KeyAnyValue" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseManagerLicenseInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="licenseKey" type="xsd:string" />
                     <element name="editionKey" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="total" type="xsd:int" />
                     <element name="used" type="xsd:int" minOccurs="0" />
                     <element name="costUnit" type="xsd:string" />
                     <element name="properties" type="vim25:KeyAnyValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="labels" type="vim25:KeyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfLicenseManagerLicenseInfo">
            <sequence>
               <element name="LicenseManagerLicenseInfo" type="vim25:LicenseManagerLicenseInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="QuerySupportedFeaturesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QuerySupportedFeatures"  type="vim25:QuerySupportedFeaturesRequestType" />
         <element name="QuerySupportedFeaturesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:LicenseFeatureInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryLicenseSourceAvailabilityRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryLicenseSourceAvailability"  type="vim25:QueryLicenseSourceAvailabilityRequestType" />
         <element name="QueryLicenseSourceAvailabilityResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:LicenseAvailabilityInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryLicenseUsageRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryLicenseUsage"  type="vim25:QueryLicenseUsageRequestType" />
         <element name="QueryLicenseUsageResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:LicenseUsageInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SetLicenseEditionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="featureKey" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="SetLicenseEdition"  type="vim25:SetLicenseEditionRequestType" />
         <element name="SetLicenseEditionResponse">
            <complexType />
         </element>
         <complexType name="CheckLicenseFeatureRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="featureKey" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="CheckLicenseFeature"  type="vim25:CheckLicenseFeatureRequestType" />
         <element name="CheckLicenseFeatureResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <complexType name="EnableFeatureRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="featureKey" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="EnableFeature"  type="vim25:EnableFeatureRequestType" />
         <element name="EnableFeatureResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DisableFeatureRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="featureKey" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="DisableFeature"  type="vim25:DisableFeatureRequestType" />
         <element name="DisableFeatureResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ConfigureLicenseSourceRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="licenseSource" type="vim25:LicenseSource" />
            </sequence>
         </complexType>
         <element name="ConfigureLicenseSource"  type="vim25:ConfigureLicenseSourceRequestType" />
         <element name="ConfigureLicenseSourceResponse">
            <complexType />
         </element>
         <complexType name="UpdateLicenseRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="licenseKey" type="xsd:string" />
               <element name="labels" type="vim25:KeyValue" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="UpdateLicense"  type="vim25:UpdateLicenseRequestType" />
         <element name="UpdateLicenseResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:LicenseManagerLicenseInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="AddLicenseRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="licenseKey" type="xsd:string" />
               <element name="labels" type="vim25:KeyValue" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="AddLicense"  type="vim25:AddLicenseRequestType" />
         <element name="AddLicenseResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:LicenseManagerLicenseInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RemoveLicenseRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="licenseKey" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RemoveLicense"  type="vim25:RemoveLicenseRequestType" />
         <element name="RemoveLicenseResponse">
            <complexType />
         </element>
         <complexType name="DecodeLicenseRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="licenseKey" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="DecodeLicense"  type="vim25:DecodeLicenseRequestType" />
         <element name="DecodeLicenseResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:LicenseManagerLicenseInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateLicenseLabelRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="licenseKey" type="xsd:string" />
               <element name="labelKey" type="xsd:string" />
               <element name="labelValue" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UpdateLicenseLabel"  type="vim25:UpdateLicenseLabelRequestType" />
         <element name="UpdateLicenseLabelResponse">
            <complexType />
         </element>
         <complexType name="RemoveLicenseLabelRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="licenseKey" type="xsd:string" />
               <element name="labelKey" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RemoveLicenseLabel"  type="vim25:RemoveLicenseLabelRequestType" />
         <element name="RemoveLicenseLabelResponse">
            <complexType />
         </element>
         <complexType name="LocalizationManagerMessageCatalog">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="moduleName" type="xsd:string" />
                     <element name="catalogName" type="xsd:string" />
                     <element name="locale" type="xsd:string" />
                     <element name="catalogUri" type="xsd:string" />
                     <element name="lastModified" type="xsd:dateTime" minOccurs="0" />
                     <element name="md5sum" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfLocalizationManagerMessageCatalog">
            <sequence>
               <element name="LocalizationManagerMessageCatalog" type="vim25:LocalizationManagerMessageCatalog" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="LongPolicy">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                     <element name="value" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="ManagedEntityStatus">
            <restriction base="xsd:string">
               <enumeration value="gray" />
               <enumeration value="green" />
               <enumeration value="yellow" />
               <enumeration value="red" />
            </restriction>
         </simpleType>
         <complexType name="ReloadRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="Reload"  type="vim25:ReloadRequestType" />
         <element name="ReloadResponse">
            <complexType />
         </element>
         <complexType name="RenameRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="newName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="Rename_Task"  type="vim25:RenameRequestType" />
         <element name="Rename_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DestroyRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="Destroy_Task"  type="vim25:DestroyRequestType" />
         <element name="Destroy_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MethodDescription">
            <complexContent>
               <extension base="vim25:Description">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NetworkSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="network" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="name" type="xsd:string" />
                     <element name="accessible" type="xsd:boolean" />
                     <element name="ipPoolName" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DestroyNetworkRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DestroyNetwork"  type="vim25:DestroyNetworkRequestType" />
         <element name="DestroyNetworkResponse">
            <complexType />
         </element>
         <complexType name="NumericRange">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="start" type="xsd:int" />
                     <element name="end" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfNumericRange">
            <sequence>
               <element name="NumericRange" type="vim25:NumericRange" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="OvfDeploymentOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="label" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfOvfDeploymentOption">
            <sequence>
               <element name="OvfDeploymentOption" type="vim25:OvfDeploymentOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="OvfManagerCommonParams">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="locale" type="xsd:string" />
                     <element name="deploymentOption" type="xsd:string" />
                     <element name="msgBundle" type="vim25:KeyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OvfValidateHostParams">
            <complexContent>
               <extension base="vim25:OvfManagerCommonParams">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OvfValidateHostResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="downloadSize" type="xsd:long" minOccurs="0" />
                     <element name="flatDeploymentSize" type="xsd:long" minOccurs="0" />
                     <element name="sparseDeploymentSize" type="xsd:long" minOccurs="0" />
                     <element name="error" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                     <element name="warning" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OvfParseDescriptorParams">
            <complexContent>
               <extension base="vim25:OvfManagerCommonParams">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OvfParseDescriptorResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="eula" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="network" type="vim25:OvfNetworkInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipAllocationScheme" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipProtocols" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="property" type="vim25:VAppPropertyInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="productInfo" type="vim25:VAppProductInfo" minOccurs="0" />
                     <element name="annotation" type="xsd:string" />
                     <element name="approximateDownloadSize" type="xsd:long" minOccurs="0" />
                     <element name="approximateFlatDeploymentSize" type="xsd:long" minOccurs="0" />
                     <element name="approximateSparseDeploymentSize" type="xsd:long" minOccurs="0" />
                     <element name="defaultEntityName" type="xsd:string" />
                     <element name="virtualApp" type="xsd:boolean" />
                     <element name="deploymentOption" type="vim25:OvfDeploymentOption" minOccurs="0" maxOccurs="unbounded" />
                     <element name="defaultDeploymentOption" type="xsd:string" />
                     <element name="error" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                     <element name="warning" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OvfNetworkInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfOvfNetworkInfo">
            <sequence>
               <element name="OvfNetworkInfo" type="vim25:OvfNetworkInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="OvfCreateImportSpecParams">
            <complexContent>
               <extension base="vim25:OvfManagerCommonParams">
                  <sequence>
                     <element name="entityName" type="xsd:string" />
                     <element name="hostSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="networkMapping" type="vim25:OvfNetworkMapping" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipAllocationPolicy" type="xsd:string" minOccurs="0" />
                     <element name="ipProtocol" type="xsd:string" minOccurs="0" />
                     <element name="propertyMapping" type="vim25:KeyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OvfNetworkMapping">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="network" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfOvfNetworkMapping">
            <sequence>
               <element name="OvfNetworkMapping" type="vim25:OvfNetworkMapping" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="OvfCreateImportSpecResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="importSpec" type="vim25:ImportSpec" minOccurs="0" />
                     <element name="fileItem" type="vim25:OvfFileItem" minOccurs="0" maxOccurs="unbounded" />
                     <element name="warning" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                     <element name="error" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OvfFileItem">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="deviceId" type="xsd:string" />
                     <element name="path" type="xsd:string" />
                     <element name="compressionMethod" type="xsd:string" minOccurs="0" />
                     <element name="chunkSize" type="xsd:long" minOccurs="0" />
                     <element name="size" type="xsd:long" minOccurs="0" />
                     <element name="cimType" type="xsd:int" />
                     <element name="create" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfOvfFileItem">
            <sequence>
               <element name="OvfFileItem" type="vim25:OvfFileItem" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="OvfCreateDescriptorParams">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ovfFiles" type="vim25:OvfFile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OvfCreateDescriptorResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ovfDescriptor" type="xsd:string" />
                     <element name="error" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                     <element name="warning" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OvfFile">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="deviceId" type="xsd:string" />
                     <element name="path" type="xsd:string" />
                     <element name="compressionMethod" type="xsd:string" minOccurs="0" />
                     <element name="chunkSize" type="xsd:long" minOccurs="0" />
                     <element name="size" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfOvfFile">
            <sequence>
               <element name="OvfFile" type="vim25:OvfFile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ValidateHostRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="ovfDescriptor" type="xsd:string" />
               <element name="host" type="vim25:ManagedObjectReference" />
               <element name="vhp" type="vim25:OvfValidateHostParams" />
            </sequence>
         </complexType>
         <element name="ValidateHost"  type="vim25:ValidateHostRequestType" />
         <element name="ValidateHostResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:OvfValidateHostResult" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ParseDescriptorRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="ovfDescriptor" type="xsd:string" />
               <element name="pdp" type="vim25:OvfParseDescriptorParams" />
            </sequence>
         </complexType>
         <element name="ParseDescriptor"  type="vim25:ParseDescriptorRequestType" />
         <element name="ParseDescriptorResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:OvfParseDescriptorResult" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateImportSpecRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="ovfDescriptor" type="xsd:string" />
               <element name="resourcePool" type="vim25:ManagedObjectReference" />
               <element name="datastore" type="vim25:ManagedObjectReference" />
               <element name="cisp" type="vim25:OvfCreateImportSpecParams" />
            </sequence>
         </complexType>
         <element name="CreateImportSpec"  type="vim25:CreateImportSpecRequestType" />
         <element name="CreateImportSpecResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:OvfCreateImportSpecResult" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateDescriptorRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="obj" type="vim25:ManagedObjectReference" />
               <element name="cdp" type="vim25:OvfCreateDescriptorParams" />
            </sequence>
         </complexType>
         <element name="CreateDescriptor"  type="vim25:CreateDescriptorRequestType" />
         <element name="CreateDescriptorResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:OvfCreateDescriptorResult" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PasswordField">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PerformanceDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="counterType" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="statsType" type="vim25:ElementDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="PerfFormat">
            <restriction base="xsd:string">
               <enumeration value="normal" />
               <enumeration value="csv" />
            </restriction>
         </simpleType>
         <complexType name="PerfProviderSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:ManagedObjectReference" />
                     <element name="currentSupported" type="xsd:boolean" />
                     <element name="summarySupported" type="xsd:boolean" />
                     <element name="refreshRate" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="PerfSummaryType">
            <restriction base="xsd:string">
               <enumeration value="average" />
               <enumeration value="maximum" />
               <enumeration value="minimum" />
               <enumeration value="latest" />
               <enumeration value="summation" />
               <enumeration value="none" />
            </restriction>
         </simpleType>
         <simpleType name="PerfStatsType">
            <restriction base="xsd:string">
               <enumeration value="absolute" />
               <enumeration value="delta" />
               <enumeration value="rate" />
            </restriction>
         </simpleType>
         <simpleType name="PerformanceManagerUnit">
            <restriction base="xsd:string">
               <enumeration value="percent" />
               <enumeration value="kiloBytes" />
               <enumeration value="megaBytes" />
               <enumeration value="megaHertz" />
               <enumeration value="number" />
               <enumeration value="microsecond" />
               <enumeration value="millisecond" />
               <enumeration value="second" />
               <enumeration value="kiloBytesPerSecond" />
               <enumeration value="megaBytesPerSecond" />
            </restriction>
         </simpleType>
         <complexType name="PerfCounterInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="nameInfo" type="vim25:ElementDescription" />
                     <element name="groupInfo" type="vim25:ElementDescription" />
                     <element name="unitInfo" type="vim25:ElementDescription" />
                     <element name="rollupType" type="vim25:PerfSummaryType" />
                     <element name="statsType" type="vim25:PerfStatsType" />
                     <element name="level" type="xsd:int" minOccurs="0" />
                     <element name="associatedCounterId" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfCounterInfo">
            <sequence>
               <element name="PerfCounterInfo" type="vim25:PerfCounterInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfMetricId">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="counterId" type="xsd:int" />
                     <element name="instance" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfMetricId">
            <sequence>
               <element name="PerfMetricId" type="vim25:PerfMetricId" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfQuerySpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:ManagedObjectReference" />
                     <element name="startTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="endTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="maxSample" type="xsd:int" minOccurs="0" />
                     <element name="metricId" type="vim25:PerfMetricId" minOccurs="0" maxOccurs="unbounded" />
                     <element name="intervalId" type="xsd:int" minOccurs="0" />
                     <element name="format" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfQuerySpec">
            <sequence>
               <element name="PerfQuerySpec" type="vim25:PerfQuerySpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfSampleInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="timestamp" type="xsd:dateTime" />
                     <element name="interval" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfSampleInfo">
            <sequence>
               <element name="PerfSampleInfo" type="vim25:PerfSampleInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfMetricSeries">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="vim25:PerfMetricId" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfMetricSeries">
            <sequence>
               <element name="PerfMetricSeries" type="vim25:PerfMetricSeries" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfMetricIntSeries">
            <complexContent>
               <extension base="vim25:PerfMetricSeries">
                  <sequence>
                     <element name="value" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PerfMetricSeriesCSV">
            <complexContent>
               <extension base="vim25:PerfMetricSeries">
                  <sequence>
                     <element name="value" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfMetricSeriesCSV">
            <sequence>
               <element name="PerfMetricSeriesCSV" type="vim25:PerfMetricSeriesCSV" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfEntityMetricBase">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfEntityMetricBase">
            <sequence>
               <element name="PerfEntityMetricBase" type="vim25:PerfEntityMetricBase" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PerfEntityMetric">
            <complexContent>
               <extension base="vim25:PerfEntityMetricBase">
                  <sequence>
                     <element name="sampleInfo" type="vim25:PerfSampleInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="value" type="vim25:PerfMetricSeries" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PerfEntityMetricCSV">
            <complexContent>
               <extension base="vim25:PerfEntityMetricBase">
                  <sequence>
                     <element name="sampleInfoCSV" type="xsd:string" />
                     <element name="value" type="vim25:PerfMetricSeriesCSV" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PerfCompositeMetric">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:PerfEntityMetricBase" minOccurs="0" />
                     <element name="childEntity" type="vim25:PerfEntityMetricBase" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="QueryPerfProviderSummaryRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryPerfProviderSummary"  type="vim25:QueryPerfProviderSummaryRequestType" />
         <element name="QueryPerfProviderSummaryResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:PerfProviderSummary" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryAvailablePerfMetricRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="beginTime" type="xsd:dateTime" minOccurs="0" />
               <element name="endTime" type="xsd:dateTime" minOccurs="0" />
               <element name="intervalId" type="xsd:int" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryAvailablePerfMetric"  type="vim25:QueryAvailablePerfMetricRequestType" />
         <element name="QueryAvailablePerfMetricResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:PerfMetricId" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryPerfCounterRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="counterId" type="xsd:int" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryPerfCounter"  type="vim25:QueryPerfCounterRequestType" />
         <element name="QueryPerfCounterResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:PerfCounterInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryPerfCounterByLevelRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="level" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="QueryPerfCounterByLevel"  type="vim25:QueryPerfCounterByLevelRequestType" />
         <element name="QueryPerfCounterByLevelResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:PerfCounterInfo" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryPerfRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="querySpec" type="vim25:PerfQuerySpec" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryPerf"  type="vim25:QueryPerfRequestType" />
         <element name="QueryPerfResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:PerfEntityMetricBase" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryPerfCompositeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="querySpec" type="vim25:PerfQuerySpec" />
            </sequence>
         </complexType>
         <element name="QueryPerfComposite"  type="vim25:QueryPerfCompositeRequestType" />
         <element name="QueryPerfCompositeResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:PerfCompositeMetric" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreatePerfIntervalRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="intervalId" type="vim25:PerfInterval" />
            </sequence>
         </complexType>
         <element name="CreatePerfInterval"  type="vim25:CreatePerfIntervalRequestType" />
         <element name="CreatePerfIntervalResponse">
            <complexType />
         </element>
         <complexType name="RemovePerfIntervalRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="samplePeriod" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="RemovePerfInterval"  type="vim25:RemovePerfIntervalRequestType" />
         <element name="RemovePerfIntervalResponse">
            <complexType />
         </element>
         <complexType name="UpdatePerfIntervalRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="interval" type="vim25:PerfInterval" />
            </sequence>
         </complexType>
         <element name="UpdatePerfInterval"  type="vim25:UpdatePerfIntervalRequestType" />
         <element name="UpdatePerfIntervalResponse">
            <complexType />
         </element>
         <complexType name="PerfInterval">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="samplingPeriod" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                     <element name="length" type="xsd:int" />
                     <element name="level" type="xsd:int" minOccurs="0" />
                     <element name="enabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPerfInterval">
            <sequence>
               <element name="PerfInterval" type="vim25:PerfInterval" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PosixUserSearchResult">
            <complexContent>
               <extension base="vim25:UserSearchResult">
                  <sequence>
                     <element name="id" type="xsd:int" />
                     <element name="shellAccess" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PrivilegePolicyDef">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="createPrivilege" type="xsd:string" />
                     <element name="readPrivilege" type="xsd:string" />
                     <element name="updatePrivilege" type="xsd:string" />
                     <element name="deletePrivilege" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourceAllocationInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="reservation" type="xsd:long" minOccurs="0" />
                     <element name="expandableReservation" type="xsd:boolean" minOccurs="0" />
                     <element name="limit" type="xsd:long" minOccurs="0" />
                     <element name="shares" type="vim25:SharesInfo" minOccurs="0" />
                     <element name="overheadLimit" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourceConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="changeVersion" type="xsd:string" minOccurs="0" />
                     <element name="lastModified" type="xsd:dateTime" minOccurs="0" />
                     <element name="cpuAllocation" type="vim25:ResourceAllocationInfo" />
                     <element name="memoryAllocation" type="vim25:ResourceAllocationInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfResourceConfigSpec">
            <sequence>
               <element name="ResourceConfigSpec" type="vim25:ResourceConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DatabaseSizeParam">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="inventoryDesc" type="vim25:InventoryDescription" />
                     <element name="perfStatsDesc" type="vim25:PerformanceStatisticsDescription" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="InventoryDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="numHosts" type="xsd:int" />
                     <element name="numVirtualMachines" type="xsd:int" />
                     <element name="numResourcePools" type="xsd:int" minOccurs="0" />
                     <element name="numClusters" type="xsd:int" minOccurs="0" />
                     <element name="numCpuDev" type="xsd:int" minOccurs="0" />
                     <element name="numNetDev" type="xsd:int" minOccurs="0" />
                     <element name="numDiskDev" type="xsd:int" minOccurs="0" />
                     <element name="numvCpuDev" type="xsd:int" minOccurs="0" />
                     <element name="numvNetDev" type="xsd:int" minOccurs="0" />
                     <element name="numvDiskDev" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PerformanceStatisticsDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="intervals" type="vim25:PerfInterval" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatabaseSizeEstimate">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="size" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EstimateDatabaseSizeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="dbSizeParam" type="vim25:DatabaseSizeParam" />
            </sequence>
         </complexType>
         <element name="EstimateDatabaseSize"  type="vim25:EstimateDatabaseSizeRequestType" />
         <element name="EstimateDatabaseSizeResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:DatabaseSizeEstimate" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ResourcePoolResourceUsage">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="reservationUsed" type="xsd:long" />
                     <element name="reservationUsedForVm" type="xsd:long" />
                     <element name="unreservedForPool" type="xsd:long" />
                     <element name="unreservedForVm" type="xsd:long" />
                     <element name="overallUsage" type="xsd:long" />
                     <element name="maxUsage" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolRuntimeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="memory" type="vim25:ResourcePoolResourceUsage" />
                     <element name="cpu" type="vim25:ResourcePoolResourceUsage" />
                     <element name="overallStatus" type="vim25:ManagedEntityStatus" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolQuickStats">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="overallCpuUsage" type="xsd:long" minOccurs="0" />
                     <element name="overallCpuDemand" type="xsd:long" minOccurs="0" />
                     <element name="guestMemoryUsage" type="xsd:long" minOccurs="0" />
                     <element name="hostMemoryUsage" type="xsd:long" minOccurs="0" />
                     <element name="distributedCpuEntitlement" type="xsd:long" minOccurs="0" />
                     <element name="distributedMemoryEntitlement" type="xsd:long" minOccurs="0" />
                     <element name="staticCpuEntitlement" type="xsd:int" minOccurs="0" />
                     <element name="staticMemoryEntitlement" type="xsd:int" minOccurs="0" />
                     <element name="privateMemory" type="xsd:long" minOccurs="0" />
                     <element name="sharedMemory" type="xsd:long" minOccurs="0" />
                     <element name="swappedMemory" type="xsd:long" minOccurs="0" />
                     <element name="balloonedMemory" type="xsd:long" minOccurs="0" />
                     <element name="overheadMemory" type="xsd:long" minOccurs="0" />
                     <element name="consumedOverheadMemory" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="config" type="vim25:ResourceConfigSpec" />
                     <element name="runtime" type="vim25:ResourcePoolRuntimeInfo" />
                     <element name="quickStats" type="vim25:ResourcePoolQuickStats" minOccurs="0" />
                     <element name="configuredMemoryMB" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdateConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" minOccurs="0" />
               <element name="config" type="vim25:ResourceConfigSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="UpdateConfig"  type="vim25:UpdateConfigRequestType" />
         <element name="UpdateConfigResponse">
            <complexType />
         </element>
         <complexType name="MoveIntoResourcePoolRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="list" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="MoveIntoResourcePool"  type="vim25:MoveIntoResourcePoolRequestType" />
         <element name="MoveIntoResourcePoolResponse">
            <complexType />
         </element>
         <complexType name="UpdateChildResourceConfigurationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:ResourceConfigSpec" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="UpdateChildResourceConfiguration"  type="vim25:UpdateChildResourceConfigurationRequestType" />
         <element name="UpdateChildResourceConfigurationResponse">
            <complexType />
         </element>
         <complexType name="CreateResourcePoolRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="spec" type="vim25:ResourceConfigSpec" />
            </sequence>
         </complexType>
         <element name="CreateResourcePool"  type="vim25:CreateResourcePoolRequestType" />
         <element name="CreateResourcePoolResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DestroyChildrenRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DestroyChildren"  type="vim25:DestroyChildrenRequestType" />
         <element name="DestroyChildrenResponse">
            <complexType />
         </element>
         <complexType name="CreateVAppRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="resSpec" type="vim25:ResourceConfigSpec" />
               <element name="configSpec" type="vim25:VAppConfigSpec" />
               <element name="vmFolder" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="CreateVApp"  type="vim25:CreateVAppRequestType" />
         <element name="CreateVAppResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateChildVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:VirtualMachineConfigSpec" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="CreateChildVM_Task"  type="vim25:CreateChildVMRequestType" />
         <element name="CreateChildVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RegisterChildVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="path" type="xsd:string" />
               <element name="name" type="xsd:string" minOccurs="0" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="RegisterChildVM_Task"  type="vim25:RegisterChildVMRequestType" />
         <element name="RegisterChildVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ImportVAppRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:ImportSpec" />
               <element name="folder" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="ImportVApp"  type="vim25:ImportVAppRequestType" />
         <element name="ImportVAppResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FindByUuidRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="uuid" type="xsd:string" />
               <element name="vmSearch" type="xsd:boolean" />
               <element name="instanceUuid" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="FindByUuid"  type="vim25:FindByUuidRequestType" />
         <element name="FindByUuidResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FindByDatastorePathRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datacenter" type="vim25:ManagedObjectReference" />
               <element name="path" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="FindByDatastorePath"  type="vim25:FindByDatastorePathRequestType" />
         <element name="FindByDatastorePathResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FindByDnsNameRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="dnsName" type="xsd:string" />
               <element name="vmSearch" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="FindByDnsName"  type="vim25:FindByDnsNameRequestType" />
         <element name="FindByDnsNameResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FindByIpRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="ip" type="xsd:string" />
               <element name="vmSearch" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="FindByIp"  type="vim25:FindByIpRequestType" />
         <element name="FindByIpResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FindByInventoryPathRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="inventoryPath" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="FindByInventoryPath"  type="vim25:FindByInventoryPathRequestType" />
         <element name="FindByInventoryPathResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FindChildRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="FindChild"  type="vim25:FindChildRequestType" />
         <element name="FindChildResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FindAllByUuidRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="uuid" type="xsd:string" />
               <element name="vmSearch" type="xsd:boolean" />
               <element name="instanceUuid" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="FindAllByUuid"  type="vim25:FindAllByUuidRequestType" />
         <element name="FindAllByUuidResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FindAllByDnsNameRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="dnsName" type="xsd:string" />
               <element name="vmSearch" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="FindAllByDnsName"  type="vim25:FindAllByDnsNameRequestType" />
         <element name="FindAllByDnsNameResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FindAllByIpRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="ip" type="xsd:string" />
               <element name="vmSearch" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="FindAllByIp"  type="vim25:FindAllByIpRequestType" />
         <element name="FindAllByIpResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="ValidateMigrationTestType">
            <restriction base="xsd:string">
               <enumeration value="sourceTests" />
               <enumeration value="compatibilityTests" />
               <enumeration value="diskAccessibilityTests" />
               <enumeration value="resourceTests" />
            </restriction>
         </simpleType>
         <simpleType name="VMotionCompatibilityType">
            <restriction base="xsd:string">
               <enumeration value="cpu" />
               <enumeration value="software" />
            </restriction>
         </simpleType>
         <complexType name="HostVMotionCompatibility">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="compatibility" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVMotionCompatibility">
            <sequence>
               <element name="HostVMotionCompatibility" type="vim25:HostVMotionCompatibility" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProductComponentInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="version" type="xsd:string" />
                     <element name="release" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProductComponentInfo">
            <sequence>
               <element name="ProductComponentInfo" type="vim25:ProductComponentInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CurrentTimeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="CurrentTime"  type="vim25:CurrentTimeRequestType" />
         <element name="CurrentTimeResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:dateTime" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RetrieveServiceContentRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RetrieveServiceContent"  type="vim25:RetrieveServiceContentRequestType" />
         <element name="RetrieveServiceContentResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ServiceContent" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ValidateMigrationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
               <element name="state" type="vim25:VirtualMachinePowerState" minOccurs="0" />
               <element name="testType" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="pool" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="ValidateMigration"  type="vim25:ValidateMigrationRequestType" />
         <element name="ValidateMigrationResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:Event" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryVMotionCompatibilityRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
               <element name="compatibility" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryVMotionCompatibility"  type="vim25:QueryVMotionCompatibilityRequestType" />
         <element name="QueryVMotionCompatibilityResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostVMotionCompatibility" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RetrieveProductComponentsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RetrieveProductComponents"  type="vim25:RetrieveProductComponentsRequestType" />
         <element name="RetrieveProductComponentsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ProductComponentInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ServiceContent">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="rootFolder" type="vim25:ManagedObjectReference" />
                     <element name="propertyCollector" type="vim25:ManagedObjectReference" />
                     <element name="viewManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="about" type="vim25:AboutInfo" />
                     <element name="setting" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="userDirectory" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="sessionManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="authorizationManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="perfManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="scheduledTaskManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="alarmManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="eventManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="taskManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="extensionManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="customizationSpecManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="customFieldsManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="accountManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="diagnosticManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="licenseManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="searchIndex" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="fileManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="virtualDiskManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="virtualizationManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="snmpSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="vmProvisioningChecker" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="vmCompatibilityChecker" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="ovfManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="ipPoolManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="dvSwitchManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="hostProfileManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="clusterProfileManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="complianceManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="localizationManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="SessionManagerLocalTicket">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="userName" type="xsd:string" />
                     <element name="passwordFilePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdateServiceMessageRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="message" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UpdateServiceMessage"  type="vim25:UpdateServiceMessageRequestType" />
         <element name="UpdateServiceMessageResponse">
            <complexType />
         </element>
         <complexType name="LoginRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="userName" type="xsd:string" />
               <element name="password" type="xsd:string" />
               <element name="locale" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="Login"  type="vim25:LoginRequestType" />
         <element name="LoginResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:UserSession" />
               </sequence>
            </complexType>
         </element>
         <complexType name="LoginBySSPIRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="base64Token" type="xsd:string" />
               <element name="locale" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="LoginBySSPI"  type="vim25:LoginBySSPIRequestType" />
         <element name="LoginBySSPIResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:UserSession" />
               </sequence>
            </complexType>
         </element>
         <complexType name="LogoutRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="Logout"  type="vim25:LogoutRequestType" />
         <element name="LogoutResponse">
            <complexType />
         </element>
         <complexType name="AcquireLocalTicketRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="userName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="AcquireLocalTicket"  type="vim25:AcquireLocalTicketRequestType" />
         <element name="AcquireLocalTicketResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:SessionManagerLocalTicket" />
               </sequence>
            </complexType>
         </element>
         <complexType name="TerminateSessionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="sessionId" type="xsd:string" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="TerminateSession"  type="vim25:TerminateSessionRequestType" />
         <element name="TerminateSessionResponse">
            <complexType />
         </element>
         <complexType name="SetLocaleRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="locale" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="SetLocale"  type="vim25:SetLocaleRequestType" />
         <element name="SetLocaleResponse">
            <complexType />
         </element>
         <complexType name="LoginExtensionBySubjectNameRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="extensionKey" type="xsd:string" />
               <element name="locale" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="LoginExtensionBySubjectName"  type="vim25:LoginExtensionBySubjectNameRequestType" />
         <element name="LoginExtensionBySubjectNameResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:UserSession" />
               </sequence>
            </complexType>
         </element>
         <complexType name="LoginExtensionByCertificateRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="extensionKey" type="xsd:string" />
               <element name="locale" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="LoginExtensionByCertificate"  type="vim25:LoginExtensionByCertificateRequestType" />
         <element name="LoginExtensionByCertificateResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:UserSession" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ImpersonateUserRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="userName" type="xsd:string" />
               <element name="locale" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="ImpersonateUser"  type="vim25:ImpersonateUserRequestType" />
         <element name="ImpersonateUserResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:UserSession" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SessionIsActiveRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="sessionID" type="xsd:string" />
               <element name="userName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="SessionIsActive"  type="vim25:SessionIsActiveRequestType" />
         <element name="SessionIsActiveResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <complexType name="AcquireCloneTicketRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="AcquireCloneTicket"  type="vim25:AcquireCloneTicketRequestType" />
         <element name="AcquireCloneTicketResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CloneSessionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="cloneTicket" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="CloneSession"  type="vim25:CloneSessionRequestType" />
         <element name="CloneSessionResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:UserSession" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UserSession">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="userName" type="xsd:string" />
                     <element name="fullName" type="xsd:string" />
                     <element name="loginTime" type="xsd:dateTime" />
                     <element name="lastActiveTime" type="xsd:dateTime" />
                     <element name="locale" type="xsd:string" />
                     <element name="messageLocale" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfUserSession">
            <sequence>
               <element name="UserSession" type="vim25:UserSession" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="SharesLevel">
            <restriction base="xsd:string">
               <enumeration value="low" />
               <enumeration value="normal" />
               <enumeration value="high" />
               <enumeration value="custom" />
            </restriction>
         </simpleType>
         <complexType name="SharesInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="shares" type="xsd:int" />
                     <element name="level" type="vim25:SharesLevel" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="StringPolicy">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                     <element name="value" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="Tag">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfTag">
            <sequence>
               <element name="Tag" type="vim25:Tag" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CancelTaskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="CancelTask"  type="vim25:CancelTaskRequestType" />
         <element name="CancelTaskResponse">
            <complexType />
         </element>
         <complexType name="UpdateProgressRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="percentDone" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="UpdateProgress"  type="vim25:UpdateProgressRequestType" />
         <element name="UpdateProgressResponse">
            <complexType />
         </element>
         <complexType name="SetTaskStateRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="state" type="vim25:TaskInfoState" />
               <element name="result" type="xsd:anyType" minOccurs="0" />
               <element name="fault" type="vim25:LocalizedMethodFault" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="SetTaskState"  type="vim25:SetTaskStateRequestType" />
         <element name="SetTaskStateResponse">
            <complexType />
         </element>
         <complexType name="SetTaskDescriptionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="description" type="vim25:LocalizableMessage" />
            </sequence>
         </complexType>
         <element name="SetTaskDescription"  type="vim25:SetTaskDescriptionRequestType" />
         <element name="SetTaskDescriptionResponse">
            <complexType />
         </element>
         <complexType name="TaskDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="methodInfo" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="state" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="reason" type="vim25:TypeDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="TaskFilterSpecRecursionOption">
            <restriction base="xsd:string">
               <enumeration value="self" />
               <enumeration value="children" />
               <enumeration value="all" />
            </restriction>
         </simpleType>
         <simpleType name="TaskFilterSpecTimeOption">
            <restriction base="xsd:string">
               <enumeration value="queuedTime" />
               <enumeration value="startedTime" />
               <enumeration value="completedTime" />
            </restriction>
         </simpleType>
         <complexType name="TaskFilterSpecByEntity">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:ManagedObjectReference" />
                     <element name="recursion" type="vim25:TaskFilterSpecRecursionOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskFilterSpecByTime">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="timeType" type="vim25:TaskFilterSpecTimeOption" />
                     <element name="beginTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="endTime" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskFilterSpecByUsername">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="systemUser" type="xsd:boolean" />
                     <element name="userList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskFilterSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:TaskFilterSpecByEntity" minOccurs="0" />
                     <element name="time" type="vim25:TaskFilterSpecByTime" minOccurs="0" />
                     <element name="userName" type="vim25:TaskFilterSpecByUsername" minOccurs="0" />
                     <element name="state" type="vim25:TaskInfoState" minOccurs="0" maxOccurs="unbounded" />
                     <element name="alarm" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="scheduledTask" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="eventChainId" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                     <element name="tag" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="parentTaskKey" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="rootTaskKey" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ReadNextTasksRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="maxCount" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="ReadNextTasks"  type="vim25:ReadNextTasksRequestType" />
         <element name="ReadNextTasksResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:TaskInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ReadPreviousTasksRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="maxCount" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="ReadPreviousTasks"  type="vim25:ReadPreviousTasksRequestType" />
         <element name="ReadPreviousTasksResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:TaskInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="TaskInfoState">
            <restriction base="xsd:string">
               <enumeration value="queued" />
               <enumeration value="running" />
               <enumeration value="success" />
               <enumeration value="error" />
            </restriction>
         </simpleType>
         <complexType name="ArrayOfTaskInfoState">
            <sequence>
               <element name="TaskInfoState" type="vim25:TaskInfoState" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="TaskInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="task" type="vim25:ManagedObjectReference" />
                     <element name="description" type="vim25:LocalizableMessage" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="descriptionId" type="xsd:string" />
                     <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="entityName" type="xsd:string" minOccurs="0" />
                     <element name="locked" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="state" type="vim25:TaskInfoState" />
                     <element name="cancelled" type="xsd:boolean" />
                     <element name="cancelable" type="xsd:boolean" />
                     <element name="error" type="vim25:LocalizedMethodFault" minOccurs="0" />
                     <element name="result" type="xsd:anyType" minOccurs="0" />
                     <element name="progress" type="xsd:int" minOccurs="0" />
                     <element name="reason" type="vim25:TaskReason" />
                     <element name="queueTime" type="xsd:dateTime" />
                     <element name="startTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="completeTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="eventChainId" type="xsd:int" />
                     <element name="changeTag" type="xsd:string" minOccurs="0" />
                     <element name="parentTaskKey" type="xsd:string" minOccurs="0" />
                     <element name="rootTaskKey" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfTaskInfo">
            <sequence>
               <element name="TaskInfo" type="vim25:TaskInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CreateCollectorForTasksRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="filter" type="vim25:TaskFilterSpec" />
            </sequence>
         </complexType>
         <element name="CreateCollectorForTasks"  type="vim25:CreateCollectorForTasksRequestType" />
         <element name="CreateCollectorForTasksResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateTaskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="obj" type="vim25:ManagedObjectReference" />
               <element name="taskTypeId" type="xsd:string" />
               <element name="initiatedBy" type="xsd:string" minOccurs="0" />
               <element name="cancelable" type="xsd:boolean" />
               <element name="parentTaskKey" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="CreateTask"  type="vim25:CreateTaskRequestType" />
         <element name="CreateTaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:TaskInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="TaskReason">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskReasonSystem">
            <complexContent>
               <extension base="vim25:TaskReason">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskReasonUser">
            <complexContent>
               <extension base="vim25:TaskReason">
                  <sequence>
                     <element name="userName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskReasonAlarm">
            <complexContent>
               <extension base="vim25:TaskReason">
                  <sequence>
                     <element name="alarmName" type="xsd:string" />
                     <element name="alarm" type="vim25:ManagedObjectReference" />
                     <element name="entityName" type="xsd:string" />
                     <element name="entity" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskReasonSchedule">
            <complexContent>
               <extension base="vim25:TaskReason">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="scheduledTask" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TypeDescription">
            <complexContent>
               <extension base="vim25:Description">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfTypeDescription">
            <sequence>
               <element name="TypeDescription" type="vim25:TypeDescription" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="RetrieveUserGroupsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="domain" type="xsd:string" minOccurs="0" />
               <element name="searchStr" type="xsd:string" />
               <element name="belongsToGroup" type="xsd:string" minOccurs="0" />
               <element name="belongsToUser" type="xsd:string" minOccurs="0" />
               <element name="exactMatch" type="xsd:boolean" />
               <element name="findUsers" type="xsd:boolean" />
               <element name="findGroups" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="RetrieveUserGroups"  type="vim25:RetrieveUserGroupsRequestType" />
         <element name="RetrieveUserGroupsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:UserSearchResult" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UserSearchResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="principal" type="xsd:string" />
                     <element name="fullName" type="xsd:string" minOccurs="0" />
                     <element name="group" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfUserSearchResult">
            <sequence>
               <element name="UserSearchResult" type="vim25:UserSearchResult" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualAppVAppState">
            <restriction base="xsd:string">
               <enumeration value="started" />
               <enumeration value="stopped" />
               <enumeration value="starting" />
               <enumeration value="stopping" />
            </restriction>
         </simpleType>
         <complexType name="VirtualAppSummary">
            <complexContent>
               <extension base="vim25:ResourcePoolSummary">
                  <sequence>
                     <element name="product" type="vim25:VAppProductInfo" minOccurs="0" />
                     <element name="vAppState" type="vim25:VirtualAppVAppState" minOccurs="0" />
                     <element name="installBootRequired" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdateVAppConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:VAppConfigSpec" />
            </sequence>
         </complexType>
         <element name="UpdateVAppConfig"  type="vim25:UpdateVAppConfigRequestType" />
         <element name="UpdateVAppConfigResponse">
            <complexType />
         </element>
         <complexType name="CloneVAppRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="target" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:VAppCloneSpec" />
            </sequence>
         </complexType>
         <element name="CloneVApp_Task"  type="vim25:CloneVAppRequestType" />
         <element name="CloneVApp_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ExportVAppRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ExportVApp"  type="vim25:ExportVAppRequestType" />
         <element name="ExportVAppResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PowerOnVAppRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="PowerOnVApp_Task"  type="vim25:PowerOnVAppRequestType" />
         <element name="PowerOnVApp_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PowerOffVAppRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="force" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="PowerOffVApp_Task"  type="vim25:PowerOffVAppRequestType" />
         <element name="PowerOffVApp_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="unregisterVAppRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="unregisterVApp_Task"  type="vim25:unregisterVAppRequestType" />
         <element name="unregisterVApp_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="VirtualDiskType">
            <restriction base="xsd:string">
               <enumeration value="preallocated" />
               <enumeration value="thin" />
               <enumeration value="rdm" />
               <enumeration value="rdmp" />
               <enumeration value="raw" />
               <enumeration value="sparse2Gb" />
               <enumeration value="thick2Gb" />
               <enumeration value="eagerZeroedThick" />
               <enumeration value="sparseMonolithic" />
               <enumeration value="flatMonolithic" />
               <enumeration value="thick" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualDiskAdapterType">
            <restriction base="xsd:string">
               <enumeration value="ide" />
               <enumeration value="busLogic" />
               <enumeration value="lsiLogic" />
            </restriction>
         </simpleType>
         <complexType name="VirtualDiskSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="diskType" type="xsd:string" />
                     <element name="adapterType" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FileBackedVirtualDiskSpec">
            <complexContent>
               <extension base="vim25:VirtualDiskSpec">
                  <sequence>
                     <element name="capacityKb" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DeviceBackedVirtualDiskSpec">
            <complexContent>
               <extension base="vim25:VirtualDiskSpec">
                  <sequence>
                     <element name="device" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CreateVirtualDiskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="spec" type="vim25:VirtualDiskSpec" />
            </sequence>
         </complexType>
         <element name="CreateVirtualDisk_Task"  type="vim25:CreateVirtualDiskRequestType" />
         <element name="CreateVirtualDisk_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DeleteVirtualDiskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="DeleteVirtualDisk_Task"  type="vim25:DeleteVirtualDiskRequestType" />
         <element name="DeleteVirtualDisk_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MoveVirtualDiskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="sourceName" type="xsd:string" />
               <element name="sourceDatacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="destName" type="xsd:string" />
               <element name="destDatacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="force" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="MoveVirtualDisk_Task"  type="vim25:MoveVirtualDiskRequestType" />
         <element name="MoveVirtualDisk_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CopyVirtualDiskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="sourceName" type="xsd:string" />
               <element name="sourceDatacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="destName" type="xsd:string" />
               <element name="destDatacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="destSpec" type="vim25:VirtualDiskSpec" minOccurs="0" />
               <element name="force" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="CopyVirtualDisk_Task"  type="vim25:CopyVirtualDiskRequestType" />
         <element name="CopyVirtualDisk_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ExtendVirtualDiskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="newCapacityKb" type="xsd:long" />
               <element name="eagerZero" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="ExtendVirtualDisk_Task"  type="vim25:ExtendVirtualDiskRequestType" />
         <element name="ExtendVirtualDisk_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryVirtualDiskFragmentationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryVirtualDiskFragmentation"  type="vim25:QueryVirtualDiskFragmentationRequestType" />
         <element name="QueryVirtualDiskFragmentationResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:int" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DefragmentVirtualDiskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="DefragmentVirtualDisk_Task"  type="vim25:DefragmentVirtualDiskRequestType" />
         <element name="DefragmentVirtualDisk_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ShrinkVirtualDiskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="copy" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="ShrinkVirtualDisk_Task"  type="vim25:ShrinkVirtualDiskRequestType" />
         <element name="ShrinkVirtualDisk_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="InflateVirtualDiskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="InflateVirtualDisk_Task"  type="vim25:InflateVirtualDiskRequestType" />
         <element name="InflateVirtualDisk_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="EagerZeroVirtualDiskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="EagerZeroVirtualDisk_Task"  type="vim25:EagerZeroVirtualDiskRequestType" />
         <element name="EagerZeroVirtualDisk_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ZeroFillVirtualDiskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="ZeroFillVirtualDisk_Task"  type="vim25:ZeroFillVirtualDiskRequestType" />
         <element name="ZeroFillVirtualDisk_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SetVirtualDiskUuidRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="uuid" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="SetVirtualDiskUuid"  type="vim25:SetVirtualDiskUuidRequestType" />
         <element name="SetVirtualDiskUuidResponse">
            <complexType />
         </element>
         <complexType name="QueryVirtualDiskUuidRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryVirtualDiskUuid"  type="vim25:QueryVirtualDiskUuidRequestType" />
         <element name="QueryVirtualDiskUuidResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryVirtualDiskGeometryRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="datacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryVirtualDiskGeometry"  type="vim25:QueryVirtualDiskGeometryRequestType" />
         <element name="QueryVirtualDiskGeometryResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostDiskDimensionsChs" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="VirtualMachinePowerState">
            <restriction base="xsd:string">
               <enumeration value="poweredOff" />
               <enumeration value="poweredOn" />
               <enumeration value="suspended" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineConnectionState">
            <restriction base="xsd:string">
               <enumeration value="connected" />
               <enumeration value="disconnected" />
               <enumeration value="orphaned" />
               <enumeration value="inaccessible" />
               <enumeration value="invalid" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineMovePriority">
            <restriction base="xsd:string">
               <enumeration value="lowPriority" />
               <enumeration value="highPriority" />
               <enumeration value="defaultPriority" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineMksTicket">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ticket" type="xsd:string" />
                     <element name="cfgFile" type="xsd:string" />
                     <element name="host" type="xsd:string" minOccurs="0" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                     <element name="sslThumbprint" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineFaultToleranceState">
            <restriction base="xsd:string">
               <enumeration value="notConfigured" />
               <enumeration value="disabled" />
               <enumeration value="enabled" />
               <enumeration value="needSecondary" />
               <enumeration value="starting" />
               <enumeration value="running" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineRecordReplayState">
            <restriction base="xsd:string">
               <enumeration value="recording" />
               <enumeration value="replaying" />
               <enumeration value="inactive" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineNeedSecondaryReason">
            <restriction base="xsd:string">
               <enumeration value="initializing" />
               <enumeration value="divergence" />
               <enumeration value="lostConnection" />
               <enumeration value="partialHardwareFailure" />
               <enumeration value="userAction" />
               <enumeration value="other" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineDisplayTopology">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="x" type="xsd:int" />
                     <element name="y" type="xsd:int" />
                     <element name="width" type="xsd:int" />
                     <element name="height" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineDisplayTopology">
            <sequence>
               <element name="VirtualMachineDisplayTopology" type="vim25:VirtualMachineDisplayTopology" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DiskChangeExtent">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="start" type="xsd:long" />
                     <element name="length" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDiskChangeExtent">
            <sequence>
               <element name="DiskChangeExtent" type="vim25:DiskChangeExtent" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DiskChangeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="startOffset" type="xsd:long" />
                     <element name="length" type="xsd:long" />
                     <element name="changedArea" type="vim25:DiskChangeExtent" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RefreshStorageInfoRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RefreshStorageInfo"  type="vim25:RefreshStorageInfoRequestType" />
         <element name="RefreshStorageInfoResponse">
            <complexType />
         </element>
         <complexType name="CreateSnapshotRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="description" type="xsd:string" minOccurs="0" />
               <element name="memory" type="xsd:boolean" />
               <element name="quiesce" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="CreateSnapshot_Task"  type="vim25:CreateSnapshotRequestType" />
         <element name="CreateSnapshot_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RevertToCurrentSnapshotRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="suppressPowerOn" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="RevertToCurrentSnapshot_Task"  type="vim25:RevertToCurrentSnapshotRequestType" />
         <element name="RevertToCurrentSnapshot_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RemoveAllSnapshotsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RemoveAllSnapshots_Task"  type="vim25:RemoveAllSnapshotsRequestType" />
         <element name="RemoveAllSnapshots_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ReconfigVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:VirtualMachineConfigSpec" />
            </sequence>
         </complexType>
         <element name="ReconfigVM_Task"  type="vim25:ReconfigVMRequestType" />
         <element name="ReconfigVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpgradeVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="version" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="UpgradeVM_Task"  type="vim25:UpgradeVMRequestType" />
         <element name="UpgradeVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ExtractOvfEnvironmentRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ExtractOvfEnvironment"  type="vim25:ExtractOvfEnvironmentRequestType" />
         <element name="ExtractOvfEnvironmentResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PowerOnVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="PowerOnVM_Task"  type="vim25:PowerOnVMRequestType" />
         <element name="PowerOnVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PowerOffVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="PowerOffVM_Task"  type="vim25:PowerOffVMRequestType" />
         <element name="PowerOffVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SuspendVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="SuspendVM_Task"  type="vim25:SuspendVMRequestType" />
         <element name="SuspendVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ResetVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ResetVM_Task"  type="vim25:ResetVMRequestType" />
         <element name="ResetVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ShutdownGuestRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ShutdownGuest"  type="vim25:ShutdownGuestRequestType" />
         <element name="ShutdownGuestResponse">
            <complexType />
         </element>
         <complexType name="RebootGuestRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RebootGuest"  type="vim25:RebootGuestRequestType" />
         <element name="RebootGuestResponse">
            <complexType />
         </element>
         <complexType name="StandbyGuestRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="StandbyGuest"  type="vim25:StandbyGuestRequestType" />
         <element name="StandbyGuestResponse">
            <complexType />
         </element>
         <complexType name="AnswerVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="questionId" type="xsd:string" />
               <element name="answerChoice" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="AnswerVM"  type="vim25:AnswerVMRequestType" />
         <element name="AnswerVMResponse">
            <complexType />
         </element>
         <complexType name="CustomizeVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:CustomizationSpec" />
            </sequence>
         </complexType>
         <element name="CustomizeVM_Task"  type="vim25:CustomizeVMRequestType" />
         <element name="CustomizeVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CheckCustomizationSpecRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:CustomizationSpec" />
            </sequence>
         </complexType>
         <element name="CheckCustomizationSpec"  type="vim25:CheckCustomizationSpecRequestType" />
         <element name="CheckCustomizationSpecResponse">
            <complexType />
         </element>
         <complexType name="MigrateVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="pool" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="priority" type="vim25:VirtualMachineMovePriority" />
               <element name="state" type="vim25:VirtualMachinePowerState" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="MigrateVM_Task"  type="vim25:MigrateVMRequestType" />
         <element name="MigrateVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RelocateVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:VirtualMachineRelocateSpec" />
               <element name="priority" type="vim25:VirtualMachineMovePriority" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="RelocateVM_Task"  type="vim25:RelocateVMRequestType" />
         <element name="RelocateVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CloneVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="folder" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="spec" type="vim25:VirtualMachineCloneSpec" />
            </sequence>
         </complexType>
         <element name="CloneVM_Task"  type="vim25:CloneVMRequestType" />
         <element name="CloneVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ExportVmRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ExportVm"  type="vim25:ExportVmRequestType" />
         <element name="ExportVmResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MarkAsTemplateRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="MarkAsTemplate"  type="vim25:MarkAsTemplateRequestType" />
         <element name="MarkAsTemplateResponse">
            <complexType />
         </element>
         <complexType name="MarkAsVirtualMachineRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="pool" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="MarkAsVirtualMachine"  type="vim25:MarkAsVirtualMachineRequestType" />
         <element name="MarkAsVirtualMachineResponse">
            <complexType />
         </element>
         <complexType name="UnregisterVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="UnregisterVM"  type="vim25:UnregisterVMRequestType" />
         <element name="UnregisterVMResponse">
            <complexType />
         </element>
         <complexType name="ResetGuestInformationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ResetGuestInformation"  type="vim25:ResetGuestInformationRequestType" />
         <element name="ResetGuestInformationResponse">
            <complexType />
         </element>
         <complexType name="MountToolsInstallerRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="MountToolsInstaller"  type="vim25:MountToolsInstallerRequestType" />
         <element name="MountToolsInstallerResponse">
            <complexType />
         </element>
         <complexType name="UnmountToolsInstallerRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="UnmountToolsInstaller"  type="vim25:UnmountToolsInstallerRequestType" />
         <element name="UnmountToolsInstallerResponse">
            <complexType />
         </element>
         <complexType name="UpgradeToolsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="installerOptions" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="UpgradeTools_Task"  type="vim25:UpgradeToolsRequestType" />
         <element name="UpgradeTools_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="AcquireMksTicketRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="AcquireMksTicket"  type="vim25:AcquireMksTicketRequestType" />
         <element name="AcquireMksTicketResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:VirtualMachineMksTicket" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SetScreenResolutionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="width" type="xsd:int" />
               <element name="height" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="SetScreenResolution"  type="vim25:SetScreenResolutionRequestType" />
         <element name="SetScreenResolutionResponse">
            <complexType />
         </element>
         <complexType name="DefragmentAllDisksRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DefragmentAllDisks"  type="vim25:DefragmentAllDisksRequestType" />
         <element name="DefragmentAllDisksResponse">
            <complexType />
         </element>
         <complexType name="CreateSecondaryVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="CreateSecondaryVM_Task"  type="vim25:CreateSecondaryVMRequestType" />
         <element name="CreateSecondaryVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="TurnOffFaultToleranceForVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="TurnOffFaultToleranceForVM_Task"  type="vim25:TurnOffFaultToleranceForVMRequestType" />
         <element name="TurnOffFaultToleranceForVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="MakePrimaryVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="MakePrimaryVM_Task"  type="vim25:MakePrimaryVMRequestType" />
         <element name="MakePrimaryVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="TerminateFaultTolerantVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="TerminateFaultTolerantVM_Task"  type="vim25:TerminateFaultTolerantVMRequestType" />
         <element name="TerminateFaultTolerantVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DisableSecondaryVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DisableSecondaryVM_Task"  type="vim25:DisableSecondaryVMRequestType" />
         <element name="DisableSecondaryVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="EnableSecondaryVMRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="EnableSecondaryVM_Task"  type="vim25:EnableSecondaryVMRequestType" />
         <element name="EnableSecondaryVM_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SetDisplayTopologyRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="displays" type="vim25:VirtualMachineDisplayTopology" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="SetDisplayTopology"  type="vim25:SetDisplayTopologyRequestType" />
         <element name="SetDisplayTopologyResponse">
            <complexType />
         </element>
         <complexType name="StartRecordingRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="description" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="StartRecording_Task"  type="vim25:StartRecordingRequestType" />
         <element name="StartRecording_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="StopRecordingRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="StopRecording_Task"  type="vim25:StopRecordingRequestType" />
         <element name="StopRecording_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="StartReplayingRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="replaySnapshot" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="StartReplaying_Task"  type="vim25:StartReplayingRequestType" />
         <element name="StartReplaying_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="StopReplayingRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="StopReplaying_Task"  type="vim25:StopReplayingRequestType" />
         <element name="StopReplaying_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PromoteDisksRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="unlink" type="xsd:boolean" />
               <element name="disks" type="vim25:VirtualDisk" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="PromoteDisks_Task"  type="vim25:PromoteDisksRequestType" />
         <element name="PromoteDisks_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateScreenshotRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="CreateScreenshot_Task"  type="vim25:CreateScreenshotRequestType" />
         <element name="CreateScreenshot_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryChangedDiskAreasRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="snapshot" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="deviceKey" type="xsd:int" />
               <element name="startOffset" type="xsd:long" />
               <element name="changeId" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="QueryChangedDiskAreas"  type="vim25:QueryChangedDiskAreasRequestType" />
         <element name="QueryChangedDiskAreasResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:DiskChangeInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryUnownedFilesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryUnownedFiles"  type="vim25:QueryUnownedFilesRequestType" />
         <element name="QueryUnownedFilesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="ActionParameter">
            <restriction base="xsd:string">
               <enumeration value="targetName" />
               <enumeration value="alarmName" />
               <enumeration value="oldStatus" />
               <enumeration value="newStatus" />
               <enumeration value="triggeringSummary" />
               <enumeration value="declaringSummary" />
               <enumeration value="eventDescription" />
               <enumeration value="target" />
               <enumeration value="alarm" />
            </restriction>
         </simpleType>
         <complexType name="Action">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MethodActionArgument">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="value" type="xsd:anyType" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfMethodActionArgument">
            <sequence>
               <element name="MethodActionArgument" type="vim25:MethodActionArgument" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="MethodAction">
            <complexContent>
               <extension base="vim25:Action">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="argument" type="vim25:MethodActionArgument" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="SendEmailAction">
            <complexContent>
               <extension base="vim25:Action">
                  <sequence>
                     <element name="toList" type="xsd:string" />
                     <element name="ccList" type="xsd:string" />
                     <element name="subject" type="xsd:string" />
                     <element name="body" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="SendSNMPAction">
            <complexContent>
               <extension base="vim25:Action">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RunScriptAction">
            <complexContent>
               <extension base="vim25:Action">
                  <sequence>
                     <element name="script" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CreateTaskAction">
            <complexContent>
               <extension base="vim25:Action">
                  <sequence>
                     <element name="taskTypeId" type="xsd:string" />
                     <element name="cancelable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RemoveAlarmRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RemoveAlarm"  type="vim25:RemoveAlarmRequestType" />
         <element name="RemoveAlarmResponse">
            <complexType />
         </element>
         <complexType name="ReconfigureAlarmRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:AlarmSpec" />
            </sequence>
         </complexType>
         <element name="ReconfigureAlarm"  type="vim25:ReconfigureAlarmRequestType" />
         <element name="ReconfigureAlarmResponse">
            <complexType />
         </element>
         <complexType name="AlarmAction">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAlarmAction">
            <sequence>
               <element name="AlarmAction" type="vim25:AlarmAction" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="AlarmTriggeringActionTransitionSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="startState" type="vim25:ManagedEntityStatus" />
                     <element name="finalState" type="vim25:ManagedEntityStatus" />
                     <element name="repeats" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAlarmTriggeringActionTransitionSpec">
            <sequence>
               <element name="AlarmTriggeringActionTransitionSpec" type="vim25:AlarmTriggeringActionTransitionSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="AlarmTriggeringAction">
            <complexContent>
               <extension base="vim25:AlarmAction">
                  <sequence>
                     <element name="action" type="vim25:Action" />
                     <element name="transitionSpecs" type="vim25:AlarmTriggeringActionTransitionSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="green2yellow" type="xsd:boolean" />
                     <element name="yellow2red" type="xsd:boolean" />
                     <element name="red2yellow" type="xsd:boolean" />
                     <element name="yellow2green" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GroupAlarmAction">
            <complexContent>
               <extension base="vim25:AlarmAction">
                  <sequence>
                     <element name="action" type="vim25:AlarmAction" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="expr" type="vim25:TypeDescription" maxOccurs="unbounded" />
                     <element name="stateOperator" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="metricOperator" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="hostSystemConnectionState" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="virtualMachinePowerState" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="datastoreConnectionState" type="vim25:ElementDescription" minOccurs="0" maxOccurs="unbounded" />
                     <element name="hostSystemPowerState" type="vim25:ElementDescription" minOccurs="0" maxOccurs="unbounded" />
                     <element name="virtualMachineGuestHeartbeatStatus" type="vim25:ElementDescription" minOccurs="0" maxOccurs="unbounded" />
                     <element name="entityStatus" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="action" type="vim25:TypeDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmExpression">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAlarmExpression">
            <sequence>
               <element name="AlarmExpression" type="vim25:AlarmExpression" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="AndAlarmExpression">
            <complexContent>
               <extension base="vim25:AlarmExpression">
                  <sequence>
                     <element name="expression" type="vim25:AlarmExpression" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OrAlarmExpression">
            <complexContent>
               <extension base="vim25:AlarmExpression">
                  <sequence>
                     <element name="expression" type="vim25:AlarmExpression" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="StateAlarmOperator">
            <restriction base="xsd:string">
               <enumeration value="isEqual" />
               <enumeration value="isUnequal" />
            </restriction>
         </simpleType>
         <complexType name="StateAlarmExpression">
            <complexContent>
               <extension base="vim25:AlarmExpression">
                  <sequence>
                     <element name="operator" type="vim25:StateAlarmOperator" />
                     <element name="type" type="xsd:string" />
                     <element name="statePath" type="xsd:string" />
                     <element name="yellow" type="xsd:string" minOccurs="0" />
                     <element name="red" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="EventAlarmExpressionComparisonOperator">
            <restriction base="xsd:string">
               <enumeration value="equals" />
               <enumeration value="notEqualTo" />
               <enumeration value="startsWith" />
               <enumeration value="doesNotStartWith" />
               <enumeration value="endsWith" />
               <enumeration value="doesNotEndWith" />
            </restriction>
         </simpleType>
         <complexType name="EventAlarmExpressionComparison">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="attributeName" type="xsd:string" />
                     <element name="operator" type="xsd:string" />
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfEventAlarmExpressionComparison">
            <sequence>
               <element name="EventAlarmExpressionComparison" type="vim25:EventAlarmExpressionComparison" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="EventAlarmExpression">
            <complexContent>
               <extension base="vim25:AlarmExpression">
                  <sequence>
                     <element name="comparisons" type="vim25:EventAlarmExpressionComparison" minOccurs="0" maxOccurs="unbounded" />
                     <element name="eventType" type="xsd:string" />
                     <element name="eventTypeId" type="xsd:string" minOccurs="0" />
                     <element name="objectType" type="xsd:string" minOccurs="0" />
                     <element name="status" type="vim25:ManagedEntityStatus" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="MetricAlarmOperator">
            <restriction base="xsd:string">
               <enumeration value="isAbove" />
               <enumeration value="isBelow" />
            </restriction>
         </simpleType>
         <complexType name="MetricAlarmExpression">
            <complexContent>
               <extension base="vim25:AlarmExpression">
                  <sequence>
                     <element name="operator" type="vim25:MetricAlarmOperator" />
                     <element name="type" type="xsd:string" />
                     <element name="metric" type="vim25:PerfMetricId" />
                     <element name="yellow" type="xsd:int" minOccurs="0" />
                     <element name="yellowInterval" type="xsd:int" minOccurs="0" />
                     <element name="red" type="xsd:int" minOccurs="0" />
                     <element name="redInterval" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmInfo">
            <complexContent>
               <extension base="vim25:AlarmSpec">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="alarm" type="vim25:ManagedObjectReference" />
                     <element name="entity" type="vim25:ManagedObjectReference" />
                     <element name="lastModifiedTime" type="xsd:dateTime" />
                     <element name="lastModifiedUser" type="xsd:string" />
                     <element name="creationEventId" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CreateAlarmRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:AlarmSpec" />
            </sequence>
         </complexType>
         <element name="CreateAlarm"  type="vim25:CreateAlarmRequestType" />
         <element name="CreateAlarmResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="GetAlarmRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="GetAlarm"  type="vim25:GetAlarmRequestType" />
         <element name="GetAlarmResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="AreAlarmActionsEnabledRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="AreAlarmActionsEnabled"  type="vim25:AreAlarmActionsEnabledRequestType" />
         <element name="AreAlarmActionsEnabledResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:boolean" />
               </sequence>
            </complexType>
         </element>
         <complexType name="EnableAlarmActionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="enabled" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="EnableAlarmActions"  type="vim25:EnableAlarmActionsRequestType" />
         <element name="EnableAlarmActionsResponse">
            <complexType />
         </element>
         <complexType name="GetAlarmStateRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="GetAlarmState"  type="vim25:GetAlarmStateRequestType" />
         <element name="GetAlarmStateResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:AlarmState" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="AcknowledgeAlarmRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="alarm" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="AcknowledgeAlarm"  type="vim25:AcknowledgeAlarmRequestType" />
         <element name="AcknowledgeAlarmResponse">
            <complexType />
         </element>
         <complexType name="AlarmSetting">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="toleranceRange" type="xsd:int" />
                     <element name="reportingFrequency" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="enabled" type="xsd:boolean" />
                     <element name="expression" type="vim25:AlarmExpression" />
                     <element name="action" type="vim25:AlarmAction" minOccurs="0" />
                     <element name="actionFrequency" type="xsd:int" minOccurs="0" />
                     <element name="setting" type="vim25:AlarmSetting" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmState">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="entity" type="vim25:ManagedObjectReference" />
                     <element name="alarm" type="vim25:ManagedObjectReference" />
                     <element name="overallStatus" type="vim25:ManagedEntityStatus" />
                     <element name="time" type="xsd:dateTime" />
                     <element name="acknowledged" type="xsd:boolean" minOccurs="0" />
                     <element name="acknowledgedByUser" type="xsd:string" minOccurs="0" />
                     <element name="acknowledgedTime" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAlarmState">
            <sequence>
               <element name="AlarmState" type="vim25:AlarmState" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="ActionType">
            <restriction base="xsd:string">
               <enumeration value="MigrationV1" />
               <enumeration value="VmPowerV1" />
               <enumeration value="HostPowerV1" />
            </restriction>
         </simpleType>
         <complexType name="ClusterAction">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="target" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterAction">
            <sequence>
               <element name="ClusterAction" type="vim25:ClusterAction" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterActionHistory">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="action" type="vim25:ClusterAction" />
                     <element name="time" type="xsd:dateTime" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterActionHistory">
            <sequence>
               <element name="ClusterActionHistory" type="vim25:ClusterActionHistory" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterAffinityRuleSpec">
            <complexContent>
               <extension base="vim25:ClusterRuleInfo">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterAntiAffinityRuleSpec">
            <complexContent>
               <extension base="vim25:ClusterRuleInfo">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterAttemptedVmInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" />
                     <element name="task" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterAttemptedVmInfo">
            <sequence>
               <element name="ClusterAttemptedVmInfo" type="vim25:ClusterAttemptedVmInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="dasConfig" type="vim25:ClusterDasConfigInfo" />
                     <element name="dasVmConfig" type="vim25:ClusterDasVmConfigInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="drsConfig" type="vim25:ClusterDrsConfigInfo" />
                     <element name="drsVmConfig" type="vim25:ClusterDrsVmConfigInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="rule" type="vim25:ClusterRuleInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="DrsBehavior">
            <restriction base="xsd:string">
               <enumeration value="manual" />
               <enumeration value="partiallyAutomated" />
               <enumeration value="fullyAutomated" />
            </restriction>
         </simpleType>
         <complexType name="ClusterDrsConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="enableVmBehaviorOverrides" type="xsd:boolean" minOccurs="0" />
                     <element name="defaultVmBehavior" type="vim25:DrsBehavior" minOccurs="0" />
                     <element name="vmotionRate" type="xsd:int" minOccurs="0" />
                     <element name="option" type="vim25:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDrsVmConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="vim25:ManagedObjectReference" />
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="behavior" type="vim25:DrsBehavior" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDrsVmConfigInfo">
            <sequence>
               <element name="ClusterDrsVmConfigInfo" type="vim25:ClusterDrsVmConfigInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterConfigInfoEx">
            <complexContent>
               <extension base="vim25:ComputeResourceConfigInfo">
                  <sequence>
                     <element name="dasConfig" type="vim25:ClusterDasConfigInfo" />
                     <element name="dasVmConfig" type="vim25:ClusterDasVmConfigInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="drsConfig" type="vim25:ClusterDrsConfigInfo" />
                     <element name="drsVmConfig" type="vim25:ClusterDrsVmConfigInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="rule" type="vim25:ClusterRuleInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dpmConfigInfo" type="vim25:ClusterDpmConfigInfo" minOccurs="0" />
                     <element name="dpmHostConfig" type="vim25:ClusterDpmHostConfigInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="DpmBehavior">
            <restriction base="xsd:string">
               <enumeration value="manual" />
               <enumeration value="automated" />
            </restriction>
         </simpleType>
         <complexType name="ClusterDpmConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="defaultDpmBehavior" type="vim25:DpmBehavior" minOccurs="0" />
                     <element name="hostPowerActionRate" type="xsd:int" minOccurs="0" />
                     <element name="option" type="vim25:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDpmHostConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="vim25:ManagedObjectReference" />
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="behavior" type="vim25:DpmBehavior" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDpmHostConfigInfo">
            <sequence>
               <element name="ClusterDpmHostConfigInfo" type="vim25:ClusterDpmHostConfigInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="dasConfig" type="vim25:ClusterDasConfigInfo" minOccurs="0" />
                     <element name="dasVmConfigSpec" type="vim25:ClusterDasVmConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="drsConfig" type="vim25:ClusterDrsConfigInfo" minOccurs="0" />
                     <element name="drsVmConfigSpec" type="vim25:ClusterDrsVmConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="rulesSpec" type="vim25:ClusterRuleSpec" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDasVmConfigSpec">
            <complexContent>
               <extension base="vim25:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim25:ClusterDasVmConfigInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDasVmConfigSpec">
            <sequence>
               <element name="ClusterDasVmConfigSpec" type="vim25:ClusterDasVmConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterDrsVmConfigSpec">
            <complexContent>
               <extension base="vim25:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim25:ClusterDrsVmConfigInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDrsVmConfigSpec">
            <sequence>
               <element name="ClusterDrsVmConfigSpec" type="vim25:ClusterDrsVmConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterRuleSpec">
            <complexContent>
               <extension base="vim25:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim25:ClusterRuleInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterRuleSpec">
            <sequence>
               <element name="ClusterRuleSpec" type="vim25:ClusterRuleSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterConfigSpecEx">
            <complexContent>
               <extension base="vim25:ComputeResourceConfigSpec">
                  <sequence>
                     <element name="dasConfig" type="vim25:ClusterDasConfigInfo" minOccurs="0" />
                     <element name="dasVmConfigSpec" type="vim25:ClusterDasVmConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="drsConfig" type="vim25:ClusterDrsConfigInfo" minOccurs="0" />
                     <element name="drsVmConfigSpec" type="vim25:ClusterDrsVmConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="rulesSpec" type="vim25:ClusterRuleSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dpmConfig" type="vim25:ClusterDpmConfigInfo" minOccurs="0" />
                     <element name="dpmHostConfigSpec" type="vim25:ClusterDpmHostConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDpmHostConfigSpec">
            <complexContent>
               <extension base="vim25:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim25:ClusterDpmHostConfigInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDpmHostConfigSpec">
            <sequence>
               <element name="ClusterDpmHostConfigSpec" type="vim25:ClusterDpmHostConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterDasAamHostInfo">
            <complexContent>
               <extension base="vim25:ClusterDasHostInfo">
                  <sequence>
                     <element name="hostDasState" type="vim25:ClusterDasAamNodeState" minOccurs="0" maxOccurs="unbounded" />
                     <element name="primaryHosts" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="ClusterDasAamNodeStateDasState">
            <restriction base="xsd:string">
               <enumeration value="uninitialized" />
               <enumeration value="initialized" />
               <enumeration value="configuring" />
               <enumeration value="unconfiguring" />
               <enumeration value="running" />
               <enumeration value="error" />
               <enumeration value="agentShutdown" />
               <enumeration value="nodeFailed" />
            </restriction>
         </simpleType>
         <complexType name="ClusterDasAamNodeState">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="name" type="xsd:string" />
                     <element name="configState" type="xsd:string" />
                     <element name="runtimeState" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDasAamNodeState">
            <sequence>
               <element name="ClusterDasAamNodeState" type="vim25:ClusterDasAamNodeState" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterDasAdmissionControlInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDasAdmissionControlPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDasAdvancedRuntimeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="dasHostInfo" type="vim25:ClusterDasHostInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="ClusterDasConfigInfoServiceState">
            <restriction base="xsd:string">
               <enumeration value="disabled" />
               <enumeration value="enabled" />
            </restriction>
         </simpleType>
         <complexType name="ClusterDasConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="vmMonitoring" type="xsd:string" minOccurs="0" />
                     <element name="hostMonitoring" type="xsd:string" minOccurs="0" />
                     <element name="failoverLevel" type="xsd:int" minOccurs="0" />
                     <element name="admissionControlPolicy" type="vim25:ClusterDasAdmissionControlPolicy" minOccurs="0" />
                     <element name="admissionControlEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="defaultVmSettings" type="vim25:ClusterDasVmSettings" minOccurs="0" />
                     <element name="option" type="vim25:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="numVcpus" type="xsd:int" />
                     <element name="cpuMHz" type="xsd:int" />
                     <element name="memoryMB" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="slots" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots">
            <sequence>
               <element name="ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots" type="vim25:ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterDasFailoverLevelAdvancedRuntimeInfo">
            <complexContent>
               <extension base="vim25:ClusterDasAdvancedRuntimeInfo">
                  <sequence>
                     <element name="slotInfo" type="vim25:ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo" />
                     <element name="totalSlots" type="xsd:int" />
                     <element name="usedSlots" type="xsd:int" />
                     <element name="unreservedSlots" type="xsd:int" />
                     <element name="totalVms" type="xsd:int" />
                     <element name="totalHosts" type="xsd:int" />
                     <element name="totalGoodHosts" type="xsd:int" />
                     <element name="hostSlots" type="vim25:ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDasHostInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDasHostRecommendation">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="drsRating" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="DasVmPriority">
            <restriction base="xsd:string">
               <enumeration value="disabled" />
               <enumeration value="low" />
               <enumeration value="medium" />
               <enumeration value="high" />
            </restriction>
         </simpleType>
         <complexType name="ClusterDasVmConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="vim25:ManagedObjectReference" />
                     <element name="restartPriority" type="vim25:DasVmPriority" minOccurs="0" />
                     <element name="powerOffOnIsolation" type="xsd:boolean" minOccurs="0" />
                     <element name="dasSettings" type="vim25:ClusterDasVmSettings" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDasVmConfigInfo">
            <sequence>
               <element name="ClusterDasVmConfigInfo" type="vim25:ClusterDasVmConfigInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="ClusterDasVmSettingsRestartPriority">
            <restriction base="xsd:string">
               <enumeration value="disabled" />
               <enumeration value="low" />
               <enumeration value="medium" />
               <enumeration value="high" />
               <enumeration value="clusterRestartPriority" />
            </restriction>
         </simpleType>
         <simpleType name="ClusterDasVmSettingsIsolationResponse">
            <restriction base="xsd:string">
               <enumeration value="none" />
               <enumeration value="powerOff" />
               <enumeration value="shutdown" />
               <enumeration value="clusterIsolationResponse" />
            </restriction>
         </simpleType>
         <complexType name="ClusterDasVmSettings">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="restartPriority" type="xsd:string" minOccurs="0" />
                     <element name="isolationResponse" type="xsd:string" minOccurs="0" />
                     <element name="vmToolsMonitoringSettings" type="vim25:ClusterVmToolsMonitoringSettings" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDrsFaultsFaultsByVm">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="fault" type="vim25:LocalizedMethodFault" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDrsFaultsFaultsByVm">
            <sequence>
               <element name="ClusterDrsFaultsFaultsByVm" type="vim25:ClusterDrsFaultsFaultsByVm" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterDrsFaults">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="reason" type="xsd:string" />
                     <element name="faultsByVm" type="vim25:ClusterDrsFaultsFaultsByVm" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDrsFaults">
            <sequence>
               <element name="ClusterDrsFaults" type="vim25:ClusterDrsFaults" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterDrsMigration">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="time" type="xsd:dateTime" />
                     <element name="vm" type="vim25:ManagedObjectReference" />
                     <element name="cpuLoad" type="xsd:int" minOccurs="0" />
                     <element name="memoryLoad" type="xsd:long" minOccurs="0" />
                     <element name="source" type="vim25:ManagedObjectReference" />
                     <element name="sourceCpuLoad" type="xsd:int" minOccurs="0" />
                     <element name="sourceMemoryLoad" type="xsd:long" minOccurs="0" />
                     <element name="destination" type="vim25:ManagedObjectReference" />
                     <element name="destinationCpuLoad" type="xsd:int" minOccurs="0" />
                     <element name="destinationMemoryLoad" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDrsMigration">
            <sequence>
               <element name="ClusterDrsMigration" type="vim25:ClusterDrsMigration" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="DrsRecommendationReasonCode">
            <restriction base="xsd:string">
               <enumeration value="fairnessCpuAvg" />
               <enumeration value="fairnessMemAvg" />
               <enumeration value="jointAffin" />
               <enumeration value="antiAffin" />
               <enumeration value="hostMaint" />
            </restriction>
         </simpleType>
         <complexType name="ClusterDrsRecommendation">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="rating" type="xsd:int" />
                     <element name="reason" type="xsd:string" />
                     <element name="reasonText" type="xsd:string" />
                     <element name="migrationList" type="vim25:ClusterDrsMigration" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterDrsRecommendation">
            <sequence>
               <element name="ClusterDrsRecommendation" type="vim25:ClusterDrsRecommendation" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterFailoverHostAdmissionControlInfoHostStatus">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="status" type="vim25:ManagedEntityStatus" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterFailoverHostAdmissionControlInfoHostStatus">
            <sequence>
               <element name="ClusterFailoverHostAdmissionControlInfoHostStatus" type="vim25:ClusterFailoverHostAdmissionControlInfoHostStatus" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterFailoverHostAdmissionControlInfo">
            <complexContent>
               <extension base="vim25:ClusterDasAdmissionControlInfo">
                  <sequence>
                     <element name="hostStatus" type="vim25:ClusterFailoverHostAdmissionControlInfoHostStatus" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterFailoverHostAdmissionControlPolicy">
            <complexContent>
               <extension base="vim25:ClusterDasAdmissionControlPolicy">
                  <sequence>
                     <element name="failoverHosts" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterFailoverLevelAdmissionControlInfo">
            <complexContent>
               <extension base="vim25:ClusterDasAdmissionControlInfo">
                  <sequence>
                     <element name="currentFailoverLevel" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterFailoverLevelAdmissionControlPolicy">
            <complexContent>
               <extension base="vim25:ClusterDasAdmissionControlPolicy">
                  <sequence>
                     <element name="failoverLevel" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterFailoverResourcesAdmissionControlInfo">
            <complexContent>
               <extension base="vim25:ClusterDasAdmissionControlInfo">
                  <sequence>
                     <element name="currentCpuFailoverResourcesPercent" type="xsd:int" />
                     <element name="currentMemoryFailoverResourcesPercent" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterFailoverResourcesAdmissionControlPolicy">
            <complexContent>
               <extension base="vim25:ClusterDasAdmissionControlPolicy">
                  <sequence>
                     <element name="cpuFailoverResourcesPercent" type="xsd:int" />
                     <element name="memoryFailoverResourcesPercent" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostPowerOperationType">
            <restriction base="xsd:string">
               <enumeration value="powerOn" />
               <enumeration value="powerOff" />
            </restriction>
         </simpleType>
         <complexType name="ClusterHostPowerAction">
            <complexContent>
               <extension base="vim25:ClusterAction">
                  <sequence>
                     <element name="operationType" type="vim25:HostPowerOperationType" />
                     <element name="powerConsumptionWatt" type="xsd:int" minOccurs="0" />
                     <element name="cpuCapacityMHz" type="xsd:int" minOccurs="0" />
                     <element name="memCapacityMB" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterHostRecommendation">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="rating" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterHostRecommendation">
            <sequence>
               <element name="ClusterHostRecommendation" type="vim25:ClusterHostRecommendation" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterInitialPlacementAction">
            <complexContent>
               <extension base="vim25:ClusterAction">
                  <sequence>
                     <element name="targetHost" type="vim25:ManagedObjectReference" />
                     <element name="pool" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterMigrationAction">
            <complexContent>
               <extension base="vim25:ClusterAction">
                  <sequence>
                     <element name="drsMigration" type="vim25:ClusterDrsMigration" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterNotAttemptedVmInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" />
                     <element name="fault" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterNotAttemptedVmInfo">
            <sequence>
               <element name="ClusterNotAttemptedVmInfo" type="vim25:ClusterNotAttemptedVmInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterPowerOnVmResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="attempted" type="vim25:ClusterAttemptedVmInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="notAttempted" type="vim25:ClusterNotAttemptedVmInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="recommendations" type="vim25:ClusterRecommendation" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="RecommendationType">
            <restriction base="xsd:string">
               <enumeration value="V1" />
            </restriction>
         </simpleType>
         <simpleType name="RecommendationReasonCode">
            <restriction base="xsd:string">
               <enumeration value="fairnessCpuAvg" />
               <enumeration value="fairnessMemAvg" />
               <enumeration value="jointAffin" />
               <enumeration value="antiAffin" />
               <enumeration value="hostMaint" />
               <enumeration value="enterStandby" />
               <enumeration value="reservationCpu" />
               <enumeration value="reservationMem" />
               <enumeration value="powerOnVm" />
               <enumeration value="powerSaving" />
               <enumeration value="increaseCapacity" />
               <enumeration value="checkResource" />
               <enumeration value="unreservedCapacity" />
            </restriction>
         </simpleType>
         <complexType name="ClusterRecommendation">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="type" type="xsd:string" />
                     <element name="time" type="xsd:dateTime" />
                     <element name="rating" type="xsd:int" />
                     <element name="reason" type="xsd:string" />
                     <element name="reasonText" type="xsd:string" />
                     <element name="prerequisite" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="action" type="vim25:ClusterAction" minOccurs="0" maxOccurs="unbounded" />
                     <element name="target" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterRecommendation">
            <sequence>
               <element name="ClusterRecommendation" type="vim25:ClusterRecommendation" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterRuleInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" minOccurs="0" />
                     <element name="status" type="vim25:ManagedEntityStatus" minOccurs="0" />
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfClusterRuleInfo">
            <sequence>
               <element name="ClusterRuleInfo" type="vim25:ClusterRuleInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ClusterVmToolsMonitoringSettings">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="clusterSettings" type="xsd:boolean" minOccurs="0" />
                     <element name="failureInterval" type="xsd:int" minOccurs="0" />
                     <element name="minUpTime" type="xsd:int" minOccurs="0" />
                     <element name="maxFailures" type="xsd:int" minOccurs="0" />
                     <element name="maxFailureWindow" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVPortConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="operation" type="xsd:string" />
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="scope" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                     <element name="setting" type="vim25:DVPortSetting" minOccurs="0" />
                     <element name="configVersion" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDVPortConfigSpec">
            <sequence>
               <element name="DVPortConfigSpec" type="vim25:DVPortConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DVPortConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="scope" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                     <element name="setting" type="vim25:DVPortSetting" minOccurs="0" />
                     <element name="configVersion" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSTrafficShapingPolicy">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                     <element name="enabled" type="vim25:BoolPolicy" minOccurs="0" />
                     <element name="averageBandwidth" type="vim25:LongPolicy" minOccurs="0" />
                     <element name="peakBandwidth" type="vim25:LongPolicy" minOccurs="0" />
                     <element name="burstSize" type="vim25:LongPolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSVendorSpecificConfig">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                     <element name="keyValue" type="vim25:DistributedVirtualSwitchKeyedOpaqueBlob" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVPortSetting">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="blocked" type="vim25:BoolPolicy" minOccurs="0" />
                     <element name="inShapingPolicy" type="vim25:DVSTrafficShapingPolicy" minOccurs="0" />
                     <element name="outShapingPolicy" type="vim25:DVSTrafficShapingPolicy" minOccurs="0" />
                     <element name="vendorSpecificConfig" type="vim25:DVSVendorSpecificConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVPortStatus">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="linkUp" type="xsd:boolean" />
                     <element name="blocked" type="xsd:boolean" />
                     <element name="vlanIds" type="vim25:NumericRange" minOccurs="0" maxOccurs="unbounded" />
                     <element name="trunkingMode" type="xsd:boolean" minOccurs="0" />
                     <element name="mtu" type="xsd:int" minOccurs="0" />
                     <element name="linkPeer" type="xsd:string" minOccurs="0" />
                     <element name="macAddress" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVPortState">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="runtimeInfo" type="vim25:DVPortStatus" minOccurs="0" />
                     <element name="stats" type="vim25:DistributedVirtualSwitchPortStatistics" />
                     <element name="vendorSpecificState" type="vim25:DistributedVirtualSwitchKeyedOpaqueBlob" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DistributedVirtualPort">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="config" type="vim25:DVPortConfigInfo" />
                     <element name="dvsUuid" type="xsd:string" />
                     <element name="portgroupKey" type="xsd:string" minOccurs="0" />
                     <element name="proxyHost" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="connectee" type="vim25:DistributedVirtualSwitchPortConnectee" minOccurs="0" />
                     <element name="conflict" type="xsd:boolean" />
                     <element name="conflictPortKey" type="xsd:string" minOccurs="0" />
                     <element name="state" type="vim25:DVPortState" minOccurs="0" />
                     <element name="connectionCookie" type="xsd:int" minOccurs="0" />
                     <element name="lastStatusChange" type="xsd:dateTime" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDistributedVirtualPort">
            <sequence>
               <element name="DistributedVirtualPort" type="vim25:DistributedVirtualPort" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="DistributedVirtualPortgroupPortgroupType">
            <restriction base="xsd:string">
               <enumeration value="earlyBinding" />
               <enumeration value="lateBinding" />
               <enumeration value="ephemeral" />
            </restriction>
         </simpleType>
         <complexType name="DVPortgroupPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="blockOverrideAllowed" type="xsd:boolean" />
                     <element name="shapingOverrideAllowed" type="xsd:boolean" />
                     <element name="vendorConfigOverrideAllowed" type="xsd:boolean" />
                     <element name="livePortMovingAllowed" type="xsd:boolean" />
                     <element name="portConfigResetAtDisconnect" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="DistributedVirtualPortgroupMetaTagName">
            <restriction base="xsd:string">
               <enumeration value="dvsName" />
               <enumeration value="portgroupName" />
               <enumeration value="portIndex" />
            </restriction>
         </simpleType>
         <complexType name="DVPortgroupConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="configVersion" type="xsd:string" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="numPorts" type="xsd:int" minOccurs="0" />
                     <element name="portNameFormat" type="xsd:string" minOccurs="0" />
                     <element name="defaultPortConfig" type="vim25:DVPortSetting" minOccurs="0" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                     <element name="type" type="xsd:string" minOccurs="0" />
                     <element name="scope" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="policy" type="vim25:DVPortgroupPolicy" minOccurs="0" />
                     <element name="vendorSpecificConfig" type="vim25:DistributedVirtualSwitchKeyedOpaqueBlob" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDVPortgroupConfigSpec">
            <sequence>
               <element name="DVPortgroupConfigSpec" type="vim25:DVPortgroupConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DVPortgroupConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="numPorts" type="xsd:int" />
                     <element name="distributedVirtualSwitch" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="defaultPortConfig" type="vim25:DVPortSetting" minOccurs="0" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                     <element name="type" type="xsd:string" />
                     <element name="policy" type="vim25:DVPortgroupPolicy" />
                     <element name="portNameFormat" type="xsd:string" minOccurs="0" />
                     <element name="scope" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vendorSpecificConfig" type="vim25:DistributedVirtualSwitchKeyedOpaqueBlob" minOccurs="0" maxOccurs="unbounded" />
                     <element name="configVersion" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ReconfigureDVPortgroupRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:DVPortgroupConfigSpec" />
            </sequence>
         </complexType>
         <element name="ReconfigureDVPortgroup_Task"  type="vim25:ReconfigureDVPortgroupRequestType" />
         <element name="ReconfigureDVPortgroup_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DistributedVirtualPortgroupInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="switchName" type="xsd:string" />
                     <element name="switchUuid" type="xsd:string" />
                     <element name="portgroupName" type="xsd:string" />
                     <element name="portgroupKey" type="xsd:string" />
                     <element name="portgroupType" type="xsd:string" />
                     <element name="uplinkPortgroup" type="xsd:boolean" />
                     <element name="portgroup" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDistributedVirtualPortgroupInfo">
            <sequence>
               <element name="DistributedVirtualPortgroupInfo" type="vim25:DistributedVirtualPortgroupInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DistributedVirtualSwitchInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="switchName" type="xsd:string" />
                     <element name="switchUuid" type="xsd:string" />
                     <element name="distributedVirtualSwitch" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDistributedVirtualSwitchInfo">
            <sequence>
               <element name="DistributedVirtualSwitchInfo" type="vim25:DistributedVirtualSwitchInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DVSManagerDvsConfigTarget">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="distributedVirtualPortgroup" type="vim25:DistributedVirtualPortgroupInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="distributedVirtualSwitch" type="vim25:DistributedVirtualSwitchInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="QueryAvailableDvsSpecRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryAvailableDvsSpec"  type="vim25:QueryAvailableDvsSpecRequestType" />
         <element name="QueryAvailableDvsSpecResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:DistributedVirtualSwitchProductSpec" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryCompatibleHostForNewDvsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="container" type="vim25:ManagedObjectReference" />
               <element name="recursive" type="xsd:boolean" />
               <element name="switchProductSpec" type="vim25:DistributedVirtualSwitchProductSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryCompatibleHostForNewDvs"  type="vim25:QueryCompatibleHostForNewDvsRequestType" />
         <element name="QueryCompatibleHostForNewDvsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryCompatibleHostForExistingDvsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="container" type="vim25:ManagedObjectReference" />
               <element name="recursive" type="xsd:boolean" />
               <element name="dvs" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryCompatibleHostForExistingDvs"  type="vim25:QueryCompatibleHostForExistingDvsRequestType" />
         <element name="QueryCompatibleHostForExistingDvsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryDvsCompatibleHostSpecRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="switchProductSpec" type="vim25:DistributedVirtualSwitchProductSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryDvsCompatibleHostSpec"  type="vim25:QueryDvsCompatibleHostSpecRequestType" />
         <element name="QueryDvsCompatibleHostSpecResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:DistributedVirtualSwitchHostProductSpec" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryDvsByUuidRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="uuid" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="QueryDvsByUuid"  type="vim25:QueryDvsByUuidRequestType" />
         <element name="QueryDvsByUuidResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryDvsConfigTargetRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="dvs" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryDvsConfigTarget"  type="vim25:QueryDvsConfigTargetRequestType" />
         <element name="QueryDvsConfigTargetResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:DVSManagerDvsConfigTarget" />
               </sequence>
            </complexType>
         </element>
         <simpleType name="DistributedVirtualSwitchHostMemberHostComponentState">
            <restriction base="xsd:string">
               <enumeration value="up" />
               <enumeration value="pending" />
               <enumeration value="outOfSync" />
               <enumeration value="warning" />
               <enumeration value="disconnected" />
               <enumeration value="down" />
            </restriction>
         </simpleType>
         <complexType name="DistributedVirtualSwitchHostMemberConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="operation" type="xsd:string" />
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="backing" type="vim25:DistributedVirtualSwitchHostMemberBacking" minOccurs="0" />
                     <element name="maxProxySwitchPorts" type="xsd:int" minOccurs="0" />
                     <element name="vendorSpecificConfig" type="vim25:DistributedVirtualSwitchKeyedOpaqueBlob" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDistributedVirtualSwitchHostMemberConfigSpec">
            <sequence>
               <element name="DistributedVirtualSwitchHostMemberConfigSpec" type="vim25:DistributedVirtualSwitchHostMemberConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DistributedVirtualSwitchHostMemberPnicSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="pnicDevice" type="xsd:string" />
                     <element name="uplinkPortKey" type="xsd:string" minOccurs="0" />
                     <element name="uplinkPortgroupKey" type="xsd:string" minOccurs="0" />
                     <element name="connectionCookie" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDistributedVirtualSwitchHostMemberPnicSpec">
            <sequence>
               <element name="DistributedVirtualSwitchHostMemberPnicSpec" type="vim25:DistributedVirtualSwitchHostMemberPnicSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DistributedVirtualSwitchHostMemberBacking">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DistributedVirtualSwitchHostMemberPnicBacking">
            <complexContent>
               <extension base="vim25:DistributedVirtualSwitchHostMemberBacking">
                  <sequence>
                     <element name="pnicSpec" type="vim25:DistributedVirtualSwitchHostMemberPnicSpec" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DistributedVirtualSwitchHostMemberConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="maxProxySwitchPorts" type="xsd:int" />
                     <element name="vendorSpecificConfig" type="vim25:DistributedVirtualSwitchKeyedOpaqueBlob" minOccurs="0" maxOccurs="unbounded" />
                     <element name="backing" type="vim25:DistributedVirtualSwitchHostMemberBacking" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DistributedVirtualSwitchHostMember">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="config" type="vim25:DistributedVirtualSwitchHostMemberConfigInfo" />
                     <element name="productInfo" type="vim25:DistributedVirtualSwitchProductSpec" minOccurs="0" />
                     <element name="uplinkPortKey" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="status" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDistributedVirtualSwitchHostMember">
            <sequence>
               <element name="DistributedVirtualSwitchHostMember" type="vim25:DistributedVirtualSwitchHostMember" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DistributedVirtualSwitchHostProductSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="productLineId" type="xsd:string" minOccurs="0" />
                     <element name="version" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDistributedVirtualSwitchHostProductSpec">
            <sequence>
               <element name="DistributedVirtualSwitchHostProductSpec" type="vim25:DistributedVirtualSwitchHostProductSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DistributedVirtualSwitchKeyedOpaqueBlob">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="opaqueData" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDistributedVirtualSwitchKeyedOpaqueBlob">
            <sequence>
               <element name="DistributedVirtualSwitchKeyedOpaqueBlob" type="vim25:DistributedVirtualSwitchKeyedOpaqueBlob" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="DistributedVirtualSwitchPortConnecteeConnecteeType">
            <restriction base="xsd:string">
               <enumeration value="pnic" />
               <enumeration value="vmVnic" />
               <enumeration value="hostConsoleVnic" />
               <enumeration value="hostVmkVnic" />
            </restriction>
         </simpleType>
         <complexType name="DistributedVirtualSwitchPortConnectee">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="connectedEntity" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="nicKey" type="xsd:string" minOccurs="0" />
                     <element name="type" type="xsd:string" minOccurs="0" />
                     <element name="addressHint" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DistributedVirtualSwitchPortConnection">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="switchUuid" type="xsd:string" />
                     <element name="portgroupKey" type="xsd:string" minOccurs="0" />
                     <element name="portKey" type="xsd:string" minOccurs="0" />
                     <element name="connectionCookie" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DistributedVirtualSwitchPortCriteria">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="connected" type="xsd:boolean" minOccurs="0" />
                     <element name="active" type="xsd:boolean" minOccurs="0" />
                     <element name="uplinkPort" type="xsd:boolean" minOccurs="0" />
                     <element name="scope" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="portgroupKey" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="inside" type="xsd:boolean" minOccurs="0" />
                     <element name="portKey" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DistributedVirtualSwitchPortStatistics">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="packetsInMulticast" type="xsd:long" />
                     <element name="packetsOutMulticast" type="xsd:long" />
                     <element name="bytesInMulticast" type="xsd:long" />
                     <element name="bytesOutMulticast" type="xsd:long" />
                     <element name="packetsInUnicast" type="xsd:long" />
                     <element name="packetsOutUnicast" type="xsd:long" />
                     <element name="bytesInUnicast" type="xsd:long" />
                     <element name="bytesOutUnicast" type="xsd:long" />
                     <element name="packetsInBroadcast" type="xsd:long" />
                     <element name="packetsOutBroadcast" type="xsd:long" />
                     <element name="bytesInBroadcast" type="xsd:long" />
                     <element name="bytesOutBroadcast" type="xsd:long" />
                     <element name="packetsInDropped" type="xsd:long" />
                     <element name="packetsOutDropped" type="xsd:long" />
                     <element name="packetsInException" type="xsd:long" />
                     <element name="packetsOutException" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DistributedVirtualSwitchProductSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="vendor" type="xsd:string" minOccurs="0" />
                     <element name="version" type="xsd:string" minOccurs="0" />
                     <element name="build" type="xsd:string" minOccurs="0" />
                     <element name="forwardingClass" type="xsd:string" minOccurs="0" />
                     <element name="bundleId" type="xsd:string" minOccurs="0" />
                     <element name="bundleUrl" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDistributedVirtualSwitchProductSpec">
            <sequence>
               <element name="DistributedVirtualSwitchProductSpec" type="vim25:DistributedVirtualSwitchProductSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VMwareDVSConfigInfo">
            <complexContent>
               <extension base="vim25:DVSConfigInfo">
                  <sequence>
                     <element name="pvlanConfig" type="vim25:VMwareDVSPvlanMapEntry" minOccurs="0" maxOccurs="unbounded" />
                     <element name="maxMtu" type="xsd:int" />
                     <element name="linkDiscoveryProtocolConfig" type="vim25:LinkDiscoveryProtocolConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VMwareDVSConfigSpec">
            <complexContent>
               <extension base="vim25:DVSConfigSpec">
                  <sequence>
                     <element name="pvlanConfigSpec" type="vim25:VMwareDVSPvlanConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="maxMtu" type="xsd:int" minOccurs="0" />
                     <element name="linkDiscoveryProtocolConfig" type="vim25:LinkDiscoveryProtocolConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VMwareUplinkPortOrderPolicy">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                     <element name="activeUplinkPort" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="standbyUplinkPort" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSFailureCriteria">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                     <element name="checkSpeed" type="vim25:StringPolicy" minOccurs="0" />
                     <element name="speed" type="vim25:IntPolicy" minOccurs="0" />
                     <element name="checkDuplex" type="vim25:BoolPolicy" minOccurs="0" />
                     <element name="fullDuplex" type="vim25:BoolPolicy" minOccurs="0" />
                     <element name="checkErrorPercent" type="vim25:BoolPolicy" minOccurs="0" />
                     <element name="percentage" type="vim25:IntPolicy" minOccurs="0" />
                     <element name="checkBeacon" type="vim25:BoolPolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmwareUplinkPortTeamingPolicy">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                     <element name="policy" type="vim25:StringPolicy" minOccurs="0" />
                     <element name="reversePolicy" type="vim25:BoolPolicy" minOccurs="0" />
                     <element name="notifySwitches" type="vim25:BoolPolicy" minOccurs="0" />
                     <element name="rollingOrder" type="vim25:BoolPolicy" minOccurs="0" />
                     <element name="failureCriteria" type="vim25:DVSFailureCriteria" minOccurs="0" />
                     <element name="uplinkPortOrder" type="vim25:VMwareUplinkPortOrderPolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmwareDistributedVirtualSwitchVlanSpec">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmwareDistributedVirtualSwitchPvlanSpec">
            <complexContent>
               <extension base="vim25:VmwareDistributedVirtualSwitchVlanSpec">
                  <sequence>
                     <element name="pvlanId" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmwareDistributedVirtualSwitchVlanIdSpec">
            <complexContent>
               <extension base="vim25:VmwareDistributedVirtualSwitchVlanSpec">
                  <sequence>
                     <element name="vlanId" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmwareDistributedVirtualSwitchTrunkVlanSpec">
            <complexContent>
               <extension base="vim25:VmwareDistributedVirtualSwitchVlanSpec">
                  <sequence>
                     <element name="vlanId" type="vim25:NumericRange" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVSSecurityPolicy">
            <complexContent>
               <extension base="vim25:InheritablePolicy">
                  <sequence>
                     <element name="allowPromiscuous" type="vim25:BoolPolicy" minOccurs="0" />
                     <element name="macChanges" type="vim25:BoolPolicy" minOccurs="0" />
                     <element name="forgedTransmits" type="vim25:BoolPolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VMwareDVSPortSetting">
            <complexContent>
               <extension base="vim25:DVPortSetting">
                  <sequence>
                     <element name="vlan" type="vim25:VmwareDistributedVirtualSwitchVlanSpec" minOccurs="0" />
                     <element name="qosTag" type="vim25:IntPolicy" minOccurs="0" />
                     <element name="uplinkTeamingPolicy" type="vim25:VmwareUplinkPortTeamingPolicy" minOccurs="0" />
                     <element name="securityPolicy" type="vim25:DVSSecurityPolicy" minOccurs="0" />
                     <element name="txUplink" type="vim25:BoolPolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VMwareDVSPortgroupPolicy">
            <complexContent>
               <extension base="vim25:DVPortgroupPolicy">
                  <sequence>
                     <element name="vlanOverrideAllowed" type="xsd:boolean" />
                     <element name="uplinkTeamingOverrideAllowed" type="xsd:boolean" />
                     <element name="securityPolicyOverrideAllowed" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VmwareDistributedVirtualSwitchPvlanPortType">
            <restriction base="xsd:string">
               <enumeration value="promiscuous" />
               <enumeration value="isolated" />
               <enumeration value="community" />
            </restriction>
         </simpleType>
         <complexType name="VMwareDVSPvlanConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="pvlanEntry" type="vim25:VMwareDVSPvlanMapEntry" />
                     <element name="operation" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVMwareDVSPvlanConfigSpec">
            <sequence>
               <element name="VMwareDVSPvlanConfigSpec" type="vim25:VMwareDVSPvlanConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VMwareDVSPvlanMapEntry">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="primaryVlanId" type="xsd:int" />
                     <element name="secondaryVlanId" type="xsd:int" />
                     <element name="pvlanType" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVMwareDVSPvlanMapEntry">
            <sequence>
               <element name="VMwareDVSPvlanMapEntry" type="vim25:VMwareDVSPvlanMapEntry" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="EventEventSeverity">
            <restriction base="xsd:string">
               <enumeration value="error" />
               <enumeration value="warning" />
               <enumeration value="info" />
               <enumeration value="user" />
            </restriction>
         </simpleType>
         <complexType name="Event">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="chainId" type="xsd:int" />
                     <element name="createdTime" type="xsd:dateTime" />
                     <element name="userName" type="xsd:string" />
                     <element name="datacenter" type="vim25:DatacenterEventArgument" minOccurs="0" />
                     <element name="computeResource" type="vim25:ComputeResourceEventArgument" minOccurs="0" />
                     <element name="host" type="vim25:HostEventArgument" minOccurs="0" />
                     <element name="vm" type="vim25:VmEventArgument" minOccurs="0" />
                     <element name="ds" type="vim25:DatastoreEventArgument" minOccurs="0" />
                     <element name="net" type="vim25:NetworkEventArgument" minOccurs="0" />
                     <element name="dvs" type="vim25:DvsEventArgument" minOccurs="0" />
                     <element name="fullFormattedMessage" type="xsd:string" minOccurs="0" />
                     <element name="changeTag" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfEvent">
            <sequence>
               <element name="Event" type="vim25:Event" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="EventEx">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="eventTypeId" type="xsd:string" />
                     <element name="severity" type="xsd:string" minOccurs="0" />
                     <element name="message" type="xsd:string" minOccurs="0" />
                     <element name="arguments" type="vim25:KeyAnyValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="objectId" type="xsd:string" minOccurs="0" />
                     <element name="objectType" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="message" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralHostInfoEvent">
            <complexContent>
               <extension base="vim25:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralHostWarningEvent">
            <complexContent>
               <extension base="vim25:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralHostErrorEvent">
            <complexContent>
               <extension base="vim25:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralVmInfoEvent">
            <complexContent>
               <extension base="vim25:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralVmWarningEvent">
            <complexContent>
               <extension base="vim25:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralVmErrorEvent">
            <complexContent>
               <extension base="vim25:GeneralEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GeneralUserEvent">
            <complexContent>
               <extension base="vim25:GeneralEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ExtendedEventPair">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfExtendedEventPair">
            <sequence>
               <element name="ExtendedEventPair" type="vim25:ExtendedEventPair" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ExtendedEvent">
            <complexContent>
               <extension base="vim25:GeneralEvent">
                  <sequence>
                     <element name="eventTypeId" type="xsd:string" />
                     <element name="managedObject" type="vim25:ManagedObjectReference" />
                     <element name="data" type="vim25:ExtendedEventPair" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HealthStatusChangedEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="componentId" type="xsd:string" />
                     <element name="oldStatus" type="xsd:string" />
                     <element name="newStatus" type="xsd:string" />
                     <element name="componentName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInventoryUnreadableEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatacenterEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatacenterCreatedEvent">
            <complexContent>
               <extension base="vim25:DatacenterEvent">
                  <sequence>
                     <element name="parent" type="vim25:FolderEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatacenterRenamedEvent">
            <complexContent>
               <extension base="vim25:DatacenterEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="SessionEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ServerStartedSessionEvent">
            <complexContent>
               <extension base="vim25:SessionEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserLoginSessionEvent">
            <complexContent>
               <extension base="vim25:SessionEvent">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                     <element name="locale" type="xsd:string" />
                     <element name="sessionId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserLogoutSessionEvent">
            <complexContent>
               <extension base="vim25:SessionEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="BadUsernameSessionEvent">
            <complexContent>
               <extension base="vim25:SessionEvent">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlreadyAuthenticatedSessionEvent">
            <complexContent>
               <extension base="vim25:SessionEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NoAccessUserEvent">
            <complexContent>
               <extension base="vim25:SessionEvent">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="SessionTerminatedEvent">
            <complexContent>
               <extension base="vim25:SessionEvent">
                  <sequence>
                     <element name="sessionId" type="xsd:string" />
                     <element name="terminatedUsername" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GlobalMessageChangedEvent">
            <complexContent>
               <extension base="vim25:SessionEvent">
                  <sequence>
                     <element name="message" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpgradeEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="message" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="InfoUpgradeEvent">
            <complexContent>
               <extension base="vim25:UpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="WarningUpgradeEvent">
            <complexContent>
               <extension base="vim25:UpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ErrorUpgradeEvent">
            <complexContent>
               <extension base="vim25:UpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserUpgradeEvent">
            <complexContent>
               <extension base="vim25:UpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConnectedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostDisconnectedEventReasonCode">
            <restriction base="xsd:string">
               <enumeration value="sslThumbprintVerifyFailed" />
               <enumeration value="licenseExpired" />
               <enumeration value="agentUpgrade" />
               <enumeration value="userRequest" />
               <enumeration value="insufficientLicenses" />
            </restriction>
         </simpleType>
         <complexType name="HostDisconnectedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostSyncFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConnectionLostEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostReconnectionFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedNoConnectionEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedBadUsernameEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedBadVersionEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedAlreadyManagedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="serverName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedNoLicenseEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedNetworkErrorEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostRemovedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedCcagentUpgradeEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedBadCcagentEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedAccountFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedNoAccessEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostShutdownEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="reason" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedNotFoundEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCnxFailedTimeoutEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostUpgradeFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EnteringMaintenanceModeEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EnteredMaintenanceModeEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ExitMaintenanceModeEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CanceledHostOperationEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TimedOutHostOperationEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasEnabledEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasDisabledEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasEnablingEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasDisablingEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostDasErrorEventHostDasErrorReason">
            <restriction base="xsd:string">
               <enumeration value="configFailed" />
               <enumeration value="timeout" />
               <enumeration value="communicationInitFailed" />
               <enumeration value="healthCheckScriptFailed" />
               <enumeration value="agentFailed" />
               <enumeration value="agentShutdown" />
               <enumeration value="other" />
            </restriction>
         </simpleType>
         <complexType name="HostDasErrorEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="message" type="xsd:string" minOccurs="0" />
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDasOkEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VcAgentUpgradedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VcAgentUninstalledEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VcAgentUpgradeFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VcAgentUninstallFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostAddedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostAddFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="hostname" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpChangedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="oldIP" type="xsd:string" />
                     <element name="newIP" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EnteringStandbyModeEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsEnteringStandbyModeEvent">
            <complexContent>
               <extension base="vim25:EnteringStandbyModeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EnteredStandbyModeEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsEnteredStandbyModeEvent">
            <complexContent>
               <extension base="vim25:EnteredStandbyModeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ExitingStandbyModeEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsExitingStandbyModeEvent">
            <complexContent>
               <extension base="vim25:ExitingStandbyModeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ExitedStandbyModeEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsExitedStandbyModeEvent">
            <complexContent>
               <extension base="vim25:ExitedStandbyModeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ExitStandbyModeFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsExitStandbyModeFailedEvent">
            <complexContent>
               <extension base="vim25:ExitStandbyModeFailedEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdatedAgentBeingRestartedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AccountCreatedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="spec" type="vim25:HostAccountSpec" />
                     <element name="group" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AccountRemovedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="account" type="xsd:string" />
                     <element name="group" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserPasswordChanged">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="userLogin" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AccountUpdatedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="spec" type="vim25:HostAccountSpec" />
                     <element name="group" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserAssignedToGroup">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="userLogin" type="xsd:string" />
                     <element name="group" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserUnassignedFromGroup">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="userLogin" type="xsd:string" />
                     <element name="group" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastorePrincipalConfigured">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="datastorePrincipal" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VMFSDatastoreCreatedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim25:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NASDatastoreCreatedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim25:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LocalDatastoreCreatedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim25:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VMFSDatastoreExtendedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim25:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VMFSDatastoreExpandedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim25:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreRemovedOnHostEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim25:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreRenamedOnHostEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DuplicateIpDetectedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="duplicateIP" type="xsd:string" />
                     <element name="macAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreDiscoveredEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="datastore" type="vim25:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsResourceConfigureFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsResourceConfigureSyncedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostGetShortNameFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostShortNameToIpFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="shortName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpToShortNameFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostPrimaryAgentNotShortNameEvent">
            <complexContent>
               <extension base="vim25:HostDasEvent">
                  <sequence>
                     <element name="primaryAgent" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNotInClusterEvent">
            <complexContent>
               <extension base="vim25:HostDasEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIsolationIpPingFailedEvent">
            <complexContent>
               <extension base="vim25:HostDasEvent">
                  <sequence>
                     <element name="isolationIp" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpInconsistentEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                     <element name="ipAddress2" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostUserWorldSwapNotEnabledEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNonCompliantEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCompliantEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostComplianceCheckedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="profile" type="vim25:ProfileEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterComplianceCheckedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                     <element name="profile" type="vim25:ProfileEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="profile" type="vim25:ProfileEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileCreatedEvent">
            <complexContent>
               <extension base="vim25:ProfileEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileRemovedEvent">
            <complexContent>
               <extension base="vim25:ProfileEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileAssociatedEvent">
            <complexContent>
               <extension base="vim25:ProfileEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileDissociatedEvent">
            <complexContent>
               <extension base="vim25:ProfileEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConfigAppliedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileReferenceHostChangedEvent">
            <complexContent>
               <extension base="vim25:ProfileEvent">
                  <sequence>
                     <element name="referenceHost" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileChangedEvent">
            <complexContent>
               <extension base="vim25:ProfileEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostProfileAppliedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="profile" type="vim25:ProfileEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostShortNameInconsistentEvent">
            <complexContent>
               <extension base="vim25:HostDasEvent">
                  <sequence>
                     <element name="shortName" type="xsd:string" />
                     <element name="shortName2" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNoRedundantManagementNetworkEvent">
            <complexContent>
               <extension base="vim25:HostDasEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNoAvailableNetworksEvent">
            <complexContent>
               <extension base="vim25:HostDasEvent">
                  <sequence>
                     <element name="ips" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostExtraNetworksEvent">
            <complexContent>
               <extension base="vim25:HostDasEvent">
                  <sequence>
                     <element name="ips" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNoHAEnabledPortGroupsEvent">
            <complexContent>
               <extension base="vim25:HostDasEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostMissingNetworksEvent">
            <complexContent>
               <extension base="vim25:HostDasEvent">
                  <sequence>
                     <element name="ips" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VnicPortArgument">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vnic" type="xsd:string" />
                     <element name="port" type="vim25:DistributedVirtualSwitchPortConnection" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVnicPortArgument">
            <sequence>
               <element name="VnicPortArgument" type="vim25:VnicPortArgument" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVnicConnectedToCustomizedDVPortEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="vnic" type="vim25:VnicPortArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GhostDvsProxySwitchDetectedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="switchUuid" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="GhostDvsProxySwitchRemovedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="switchUuid" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="template" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmPoweredOffEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmPoweredOnEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSuspendedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmStartingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmStoppingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSuspendingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmResumingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDisconnectedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRemoteConsoleConnectedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRemoteConsoleDisconnectedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiscoveredEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmOrphanedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingCreatedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="configSpec" type="vim25:VirtualMachineConfigSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmCreatedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmStartRecordingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmEndRecordingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmStartReplayingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmEndReplayingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRegisteredEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmAutoRenameEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingHotMigratedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="destHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmResettingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmStaticMacConflictEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="conflictedVm" type="vim25:VmEventArgument" />
                     <element name="mac" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMacConflictEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="conflictedVm" type="vim25:VmEventArgument" />
                     <element name="mac" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingDeployedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="srcTemplate" type="vim25:VmEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDeployFailedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="destDatastore" type="vim25:EntityEventArgument" />
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDeployedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="srcTemplate" type="vim25:VmEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMacChangedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="adapter" type="xsd:string" />
                     <element name="oldMac" type="xsd:string" />
                     <element name="newMac" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMacAssignedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="adapter" type="xsd:string" />
                     <element name="mac" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUuidConflictEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="conflictedVm" type="vim25:VmEventArgument" />
                     <element name="uuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmInstanceUuidConflictEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="conflictedVm" type="vim25:VmEventArgument" />
                     <element name="instanceUuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingMigratedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="destHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedMigrateEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="destHost" type="vim25:HostEventArgument" />
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMigratedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="sourceHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUnsupportedStartingEvent">
            <complexContent>
               <extension base="vim25:VmStartingEvent">
                  <sequence>
                     <element name="guestId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsVmMigratedEvent">
            <complexContent>
               <extension base="vim25:VmMigratedEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsVmPoweredOnEvent">
            <complexContent>
               <extension base="vim25:VmPoweredOnEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRelocateSpecEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingRelocatedEvent">
            <complexContent>
               <extension base="vim25:VmRelocateSpecEvent">
                  <sequence>
                     <element name="destHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRelocatedEvent">
            <complexContent>
               <extension base="vim25:VmRelocateSpecEvent">
                  <sequence>
                     <element name="sourceHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRelocateFailedEvent">
            <complexContent>
               <extension base="vim25:VmRelocateSpecEvent">
                  <sequence>
                     <element name="destHost" type="vim25:HostEventArgument" />
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmEmigratingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmCloneEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmBeingClonedEvent">
            <complexContent>
               <extension base="vim25:VmCloneEvent">
                  <sequence>
                     <element name="destFolder" type="vim25:FolderEventArgument" />
                     <element name="destName" type="xsd:string" />
                     <element name="destHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmCloneFailedEvent">
            <complexContent>
               <extension base="vim25:VmCloneEvent">
                  <sequence>
                     <element name="destFolder" type="vim25:FolderEventArgument" />
                     <element name="destName" type="xsd:string" />
                     <element name="destHost" type="vim25:HostEventArgument" />
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmClonedEvent">
            <complexContent>
               <extension base="vim25:VmCloneEvent">
                  <sequence>
                     <element name="sourceVm" type="vim25:VmEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmResourceReallocatedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRenamedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDateRolledBackEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmNoNetworkAccessEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="destHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiskFailedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="disk" type="xsd:string" />
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToPowerOnEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToPowerOffEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToSuspendEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToResetEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToShutdownGuestEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToRebootGuestEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedToStandbyGuestEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRemovedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmGuestShutdownEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmGuestRebootEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmGuestStandbyEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUpgradingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="version" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUpgradeCompleteEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="version" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUpgradeFailedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRestartedOnAlternateHostEvent">
            <complexContent>
               <extension base="vim25:VmPoweredOnEvent">
                  <sequence>
                     <element name="sourceHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmReconfiguredEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="configSpec" type="vim25:VirtualMachineConfigSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMessageEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="message" type="xsd:string" />
                     <element name="messageInfo" type="vim25:VirtualMachineMessage" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMessageWarningEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="message" type="xsd:string" />
                     <element name="messageInfo" type="vim25:VirtualMachineMessage" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMessageErrorEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="message" type="xsd:string" />
                     <element name="messageInfo" type="vim25:VirtualMachineMessage" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConfigMissingEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmPowerOffOnIsolationEvent">
            <complexContent>
               <extension base="vim25:VmPoweredOffEvent">
                  <sequence>
                     <element name="isolatedHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VmShutdownOnIsolationEventOperation">
            <restriction base="xsd:string">
               <enumeration value="shutdown" />
               <enumeration value="poweredOff" />
            </restriction>
         </simpleType>
         <complexType name="VmShutdownOnIsolationEvent">
            <complexContent>
               <extension base="vim25:VmPoweredOffEvent">
                  <sequence>
                     <element name="isolatedHost" type="vim25:HostEventArgument" />
                     <element name="shutdownResult" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailoverFailed">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDasBeingResetEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDasResetFailedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMaxRestartCountReached">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmMaxFTRestartCountReached">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDasBeingResetWithScreenshotEvent">
            <complexContent>
               <extension base="vim25:VmDasBeingResetEvent">
                  <sequence>
                     <element name="screenshotFilePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NotEnoughResourcesToStartVmEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUuidAssignedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="uuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmInstanceUuidAssignedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="instanceUuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmUuidChangedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="oldUuid" type="xsd:string" />
                     <element name="newUuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmInstanceUuidChangedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="oldInstanceUuid" type="xsd:string" />
                     <element name="newInstanceUuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmWwnConflictEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="conflictedVms" type="vim25:VmEventArgument" minOccurs="0" maxOccurs="unbounded" />
                     <element name="conflictedHosts" type="vim25:HostEventArgument" minOccurs="0" maxOccurs="unbounded" />
                     <element name="wwn" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmAcquiredMksTicketEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostWwnConflictEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="conflictedVms" type="vim25:VmEventArgument" minOccurs="0" maxOccurs="unbounded" />
                     <element name="conflictedHosts" type="vim25:HostEventArgument" minOccurs="0" maxOccurs="unbounded" />
                     <element name="wwn" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmWwnAssignedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="nodeWwns" type="xsd:long" maxOccurs="unbounded" />
                     <element name="portWwns" type="xsd:long" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmWwnChangedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="oldNodeWwns" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                     <element name="oldPortWwns" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                     <element name="newNodeWwns" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                     <element name="newPortWwns" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSecondaryAddedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFaultToleranceTurnedOffEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFaultToleranceStateChangedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="oldState" type="vim25:VirtualMachineFaultToleranceState" />
                     <element name="newState" type="vim25:VirtualMachineFaultToleranceState" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSecondaryDisabledEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSecondaryDisabledBySystemEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSecondaryEnabledEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmStartingSecondaryEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSecondaryStartedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedUpdatingSecondaryConfig">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VmFailedStartingSecondaryEventFailureReason">
            <restriction base="xsd:string">
               <enumeration value="incompatibleHost" />
               <enumeration value="loginFailed" />
               <enumeration value="registerVmFailed" />
               <enumeration value="migrateFailed" />
            </restriction>
         </simpleType>
         <complexType name="VmFailedStartingSecondaryEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmTimedoutStartingSecondaryEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="timeout" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmNoCompatibleHostForSecondaryEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmPrimaryFailoverEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFaultToleranceVmTerminatedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostWwnChangedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="oldNodeWwns" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                     <element name="oldPortWwns" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                     <element name="newNodeWwns" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                     <element name="newPortWwns" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostAdminDisableEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostAdminEnableEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostEnableAdminFailedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                     <element name="permissions" type="vim25:Permission" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedRelayoutOnVmfs2DatastoreEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmFailedRelayoutEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRelayoutSuccessfulEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmRelayoutUpToDateEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConnectedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmPoweringOnWithCustomizedDVPortEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="vnic" type="vim25:VnicPortArgument" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDasUpdateErrorEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NoMaintenanceModeDrsRecommendationForVM">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDasUpdateOkEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="scheduledTask" type="vim25:ScheduledTaskEventArgument" />
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskCreatedEvent">
            <complexContent>
               <extension base="vim25:ScheduledTaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskStartedEvent">
            <complexContent>
               <extension base="vim25:ScheduledTaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskRemovedEvent">
            <complexContent>
               <extension base="vim25:ScheduledTaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskReconfiguredEvent">
            <complexContent>
               <extension base="vim25:ScheduledTaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskCompletedEvent">
            <complexContent>
               <extension base="vim25:ScheduledTaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskFailedEvent">
            <complexContent>
               <extension base="vim25:ScheduledTaskEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskEmailCompletedEvent">
            <complexContent>
               <extension base="vim25:ScheduledTaskEvent">
                  <sequence>
                     <element name="to" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskEmailFailedEvent">
            <complexContent>
               <extension base="vim25:ScheduledTaskEvent">
                  <sequence>
                     <element name="to" type="xsd:string" />
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="alarm" type="vim25:AlarmEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmCreatedEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmStatusChangedEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="source" type="vim25:ManagedEntityEventArgument" />
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                     <element name="from" type="xsd:string" />
                     <element name="to" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmActionTriggeredEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="source" type="vim25:ManagedEntityEventArgument" />
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmEmailCompletedEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                     <element name="to" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmEmailFailedEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                     <element name="to" type="xsd:string" />
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmSnmpCompletedEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmSnmpFailedEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmScriptCompleteEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                     <element name="script" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmScriptFailedEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                     <element name="script" type="xsd:string" />
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmRemovedEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmReconfiguredEvent">
            <complexContent>
               <extension base="vim25:AlarmEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldDefEvent">
            <complexContent>
               <extension base="vim25:CustomFieldEvent">
                  <sequence>
                     <element name="fieldKey" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldDefAddedEvent">
            <complexContent>
               <extension base="vim25:CustomFieldDefEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldDefRemovedEvent">
            <complexContent>
               <extension base="vim25:CustomFieldDefEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldDefRenamedEvent">
            <complexContent>
               <extension base="vim25:CustomFieldDefEvent">
                  <sequence>
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomFieldValueChangedEvent">
            <complexContent>
               <extension base="vim25:CustomFieldEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                     <element name="fieldKey" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AuthorizationEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PermissionEvent">
            <complexContent>
               <extension base="vim25:AuthorizationEvent">
                  <sequence>
                     <element name="entity" type="vim25:ManagedEntityEventArgument" />
                     <element name="principal" type="xsd:string" />
                     <element name="group" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PermissionAddedEvent">
            <complexContent>
               <extension base="vim25:PermissionEvent">
                  <sequence>
                     <element name="role" type="vim25:RoleEventArgument" />
                     <element name="propagate" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PermissionUpdatedEvent">
            <complexContent>
               <extension base="vim25:PermissionEvent">
                  <sequence>
                     <element name="role" type="vim25:RoleEventArgument" />
                     <element name="propagate" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PermissionRemovedEvent">
            <complexContent>
               <extension base="vim25:PermissionEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RoleEvent">
            <complexContent>
               <extension base="vim25:AuthorizationEvent">
                  <sequence>
                     <element name="role" type="vim25:RoleEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RoleAddedEvent">
            <complexContent>
               <extension base="vim25:RoleEvent">
                  <sequence>
                     <element name="privilegeList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RoleUpdatedEvent">
            <complexContent>
               <extension base="vim25:RoleEvent">
                  <sequence>
                     <element name="privilegeList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RoleRemovedEvent">
            <complexContent>
               <extension base="vim25:RoleEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="datastore" type="vim25:DatastoreEventArgument" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreDestroyedEvent">
            <complexContent>
               <extension base="vim25:DatastoreEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreRenamedEvent">
            <complexContent>
               <extension base="vim25:DatastoreEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreCapacityIncreasedEvent">
            <complexContent>
               <extension base="vim25:DatastoreEvent">
                  <sequence>
                     <element name="oldCapacity" type="xsd:long" />
                     <element name="newCapacity" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreDuplicatedEvent">
            <complexContent>
               <extension base="vim25:DatastoreEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreFileEvent">
            <complexContent>
               <extension base="vim25:DatastoreEvent">
                  <sequence>
                     <element name="targetFile" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreFileCopiedEvent">
            <complexContent>
               <extension base="vim25:DatastoreFileEvent">
                  <sequence>
                     <element name="sourceDatastore" type="vim25:DatastoreEventArgument" />
                     <element name="sourceFile" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreFileMovedEvent">
            <complexContent>
               <extension base="vim25:DatastoreFileEvent">
                  <sequence>
                     <element name="sourceDatastore" type="vim25:DatastoreEventArgument" />
                     <element name="sourceFile" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatastoreFileDeletedEvent">
            <complexContent>
               <extension base="vim25:DatastoreFileEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="info" type="vim25:TaskInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TaskTimeoutEvent">
            <complexContent>
               <extension base="vim25:TaskEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ServerLicenseExpiredEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                     <element name="product" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostLicenseExpiredEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VMotionLicenseExpiredEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NoLicenseEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                     <element name="feature" type="vim25:LicenseFeatureInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseServerUnavailableEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                     <element name="licenseServer" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseServerAvailableEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                     <element name="licenseServer" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseExpiredEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="feature" type="vim25:LicenseFeatureInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="InvalidEditionEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                     <element name="feature" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInventoryFullEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                     <element name="capacity" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseRestrictedEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IncorrectHostInformationEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UnlicensedVirtualMachinesEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                     <element name="unlicensed" type="xsd:int" />
                     <element name="available" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UnlicensedVirtualMachinesFoundEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                     <element name="available" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AllVirtualMachinesLicensedEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LicenseNonComplianceEvent">
            <complexContent>
               <extension base="vim25:LicenseEvent">
                  <sequence>
                     <element name="url" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="fault" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationWarningEvent">
            <complexContent>
               <extension base="vim25:MigrationEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationErrorEvent">
            <complexContent>
               <extension base="vim25:MigrationEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationHostWarningEvent">
            <complexContent>
               <extension base="vim25:MigrationEvent">
                  <sequence>
                     <element name="dstHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationHostErrorEvent">
            <complexContent>
               <extension base="vim25:MigrationEvent">
                  <sequence>
                     <element name="dstHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationResourceWarningEvent">
            <complexContent>
               <extension base="vim25:MigrationEvent">
                  <sequence>
                     <element name="dstPool" type="vim25:ResourcePoolEventArgument" />
                     <element name="dstHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MigrationResourceErrorEvent">
            <complexContent>
               <extension base="vim25:MigrationEvent">
                  <sequence>
                     <element name="dstPool" type="vim25:ResourcePoolEventArgument" />
                     <element name="dstHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasEnabledEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasDisabledEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasAdmissionControlDisabledEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasAdmissionControlEnabledEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasHostFailedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                     <element name="failedHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasHostIsolatedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                     <element name="isolatedHost" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasClusterIsolatedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasAgentUnavailableEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DasAgentFoundEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="InsufficientFailoverResourcesEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FailoverLevelRestored">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterOvercommittedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostOvercommittedEvent">
            <complexContent>
               <extension base="vim25:ClusterOvercommittedEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterStatusChangedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                     <element name="oldStatus" type="xsd:string" />
                     <element name="newStatus" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostStatusChangedEvent">
            <complexContent>
               <extension base="vim25:ClusterStatusChangedEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterCreatedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                     <element name="parent" type="vim25:FolderEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterDestroyedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsEnabledEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                     <element name="behavior" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsDisabledEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterReconfiguredEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostMonitoringStateChangedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                     <element name="state" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmHealthMonitoringStateChangedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                     <element name="state" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="resourcePool" type="vim25:ResourcePoolEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolCreatedEvent">
            <complexContent>
               <extension base="vim25:ResourcePoolEvent">
                  <sequence>
                     <element name="parent" type="vim25:ResourcePoolEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolDestroyedEvent">
            <complexContent>
               <extension base="vim25:ResourcePoolEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolMovedEvent">
            <complexContent>
               <extension base="vim25:ResourcePoolEvent">
                  <sequence>
                     <element name="oldParent" type="vim25:ResourcePoolEventArgument" />
                     <element name="newParent" type="vim25:ResourcePoolEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolReconfiguredEvent">
            <complexContent>
               <extension base="vim25:ResourcePoolEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourceViolatedEvent">
            <complexContent>
               <extension base="vim25:ResourcePoolEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmResourcePoolMovedEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="oldParent" type="vim25:ResourcePoolEventArgument" />
                     <element name="newParent" type="vim25:ResourcePoolEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateUpgradeEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="legacyTemplate" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateBeingUpgradedEvent">
            <complexContent>
               <extension base="vim25:TemplateUpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateUpgradeFailedEvent">
            <complexContent>
               <extension base="vim25:TemplateUpgradeEvent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateUpgradedEvent">
            <complexContent>
               <extension base="vim25:TemplateUpgradeEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationEvent">
            <complexContent>
               <extension base="vim25:VmEvent">
                  <sequence>
                     <element name="logLocation" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationStartedEvent">
            <complexContent>
               <extension base="vim25:CustomizationEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationSucceeded">
            <complexContent>
               <extension base="vim25:CustomizationEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationFailed">
            <complexContent>
               <extension base="vim25:CustomizationEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationUnknownFailure">
            <complexContent>
               <extension base="vim25:CustomizationFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationSysprepFailed">
            <complexContent>
               <extension base="vim25:CustomizationFailed">
                  <sequence>
                     <element name="sysprepVersion" type="xsd:string" />
                     <element name="systemVersion" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationLinuxIdentityFailed">
            <complexContent>
               <extension base="vim25:CustomizationFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationNetworkSetupFailed">
            <complexContent>
               <extension base="vim25:CustomizationFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LockerMisconfiguredEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="datastore" type="vim25:DatastoreEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LockerReconfiguredEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                     <element name="oldDatastore" type="vim25:DatastoreEventArgument" minOccurs="0" />
                     <element name="newDatastore" type="vim25:DatastoreEventArgument" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NoDatastoresConfiguredEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AdminPasswordNotChangedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VimAccountPasswordChangedEvent">
            <complexContent>
               <extension base="vim25:HostEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsCreatedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="parent" type="vim25:FolderEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsRenamedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsReconfiguredEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="configSpec" type="vim25:DVSConfigSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsUpgradeAvailableEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="productInfo" type="vim25:DistributedVirtualSwitchProductSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsUpgradeInProgressEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="productInfo" type="vim25:DistributedVirtualSwitchProductSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsUpgradeRejectedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="productInfo" type="vim25:DistributedVirtualSwitchProductSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsUpgradedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="productInfo" type="vim25:DistributedVirtualSwitchProductSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsHostJoinedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="hostJoined" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsHostLeftEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="hostLeft" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsOutOfSyncHostArgument">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="outOfSyncHost" type="vim25:HostEventArgument" />
                     <element name="configParamters" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDvsOutOfSyncHostArgument">
            <sequence>
               <element name="DvsOutOfSyncHostArgument" type="vim25:DvsOutOfSyncHostArgument" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="OutOfSyncDvsHost">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="hostOutOfSync" type="vim25:DvsOutOfSyncHostArgument" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsHostWentOutOfSyncEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="hostOutOfSync" type="vim25:DvsOutOfSyncHostArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsHostBackInSyncEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="hostBackInSync" type="vim25:HostEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortCreatedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortReconfiguredEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortDeletedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortConnectedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" />
                     <element name="connectee" type="vim25:DistributedVirtualSwitchPortConnectee" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortDisconnectedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" />
                     <element name="connectee" type="vim25:DistributedVirtualSwitchPortConnectee" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortLinkUpEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortLinkDownEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortJoinPortgroupEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" />
                     <element name="portgroupKey" type="xsd:string" />
                     <element name="portgroupName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortLeavePortgroupEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" />
                     <element name="portgroupKey" type="xsd:string" />
                     <element name="portgroupName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortBlockedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsPortUnblockedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="portKey" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsDestroyedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsMergedEvent">
            <complexContent>
               <extension base="vim25:DvsEvent">
                  <sequence>
                     <element name="sourceDvs" type="vim25:DvsEventArgument" />
                     <element name="destinationDvs" type="vim25:DvsEventArgument" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVPortgroupEvent">
            <complexContent>
               <extension base="vim25:Event">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVPortgroupCreatedEvent">
            <complexContent>
               <extension base="vim25:DVPortgroupEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVPortgroupRenamedEvent">
            <complexContent>
               <extension base="vim25:DVPortgroupEvent">
                  <sequence>
                     <element name="oldName" type="xsd:string" />
                     <element name="newName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVPortgroupReconfiguredEvent">
            <complexContent>
               <extension base="vim25:DVPortgroupEvent">
                  <sequence>
                     <element name="configSpec" type="vim25:DVPortgroupConfigSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DVPortgroupDestroyedEvent">
            <complexContent>
               <extension base="vim25:DVPortgroupEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsInvocationFailedEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DrsRecoveredFromFailureEvent">
            <complexContent>
               <extension base="vim25:ClusterEvent">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EventArgument">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RoleEventArgument">
            <complexContent>
               <extension base="vim25:EventArgument">
                  <sequence>
                     <element name="roleId" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EntityEventArgument">
            <complexContent>
               <extension base="vim25:EventArgument">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ManagedEntityEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="entity" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FolderEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="folder" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DatacenterEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="datacenter" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ComputeResourceEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="computeResource" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ResourcePoolEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="resourcePool" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostEventArgument">
            <sequence>
               <element name="HostEventArgument" type="vim25:HostEventArgument" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VmEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVmEventArgument">
            <sequence>
               <element name="VmEventArgument" type="vim25:VmEventArgument" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DatastoreEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="datastore" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NetworkEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="network" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AlarmEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="alarm" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="scheduledTask" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileEventArgument">
            <complexContent>
               <extension base="vim25:EventArgument">
                  <sequence>
                     <element name="profile" type="vim25:ManagedObjectReference" />
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsEventArgument">
            <complexContent>
               <extension base="vim25:EntityEventArgument">
                  <sequence>
                     <element name="dvs" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="EventCategory">
            <restriction base="xsd:string">
               <enumeration value="info" />
               <enumeration value="warning" />
               <enumeration value="error" />
               <enumeration value="user" />
            </restriction>
         </simpleType>
         <complexType name="EventArgDesc">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="type" type="xsd:string" />
                     <element name="description" type="vim25:ElementDescription" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfEventArgDesc">
            <sequence>
               <element name="EventArgDesc" type="vim25:EventArgDesc" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="EventDescriptionEventDetail">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                     <element name="category" type="xsd:string" />
                     <element name="formatOnDatacenter" type="xsd:string" />
                     <element name="formatOnComputeResource" type="xsd:string" />
                     <element name="formatOnHost" type="xsd:string" />
                     <element name="formatOnVm" type="xsd:string" />
                     <element name="fullFormat" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfEventDescriptionEventDetail">
            <sequence>
               <element name="EventDescriptionEventDetail" type="vim25:EventDescriptionEventDetail" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="EventDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="category" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="eventInfo" type="vim25:EventDescriptionEventDetail" maxOccurs="unbounded" />
                     <element name="enumeratedTypes" type="vim25:EnumDescription" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="EventFilterSpecRecursionOption">
            <restriction base="xsd:string">
               <enumeration value="self" />
               <enumeration value="children" />
               <enumeration value="all" />
            </restriction>
         </simpleType>
         <complexType name="EventFilterSpecByEntity">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:ManagedObjectReference" />
                     <element name="recursion" type="vim25:EventFilterSpecRecursionOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EventFilterSpecByTime">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="beginTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="endTime" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EventFilterSpecByUsername">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="systemUser" type="xsd:boolean" />
                     <element name="userList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EventFilterSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:EventFilterSpecByEntity" minOccurs="0" />
                     <element name="time" type="vim25:EventFilterSpecByTime" minOccurs="0" />
                     <element name="userName" type="vim25:EventFilterSpecByUsername" minOccurs="0" />
                     <element name="eventChainId" type="xsd:int" minOccurs="0" />
                     <element name="alarm" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="scheduledTask" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="disableFullMessage" type="xsd:boolean" minOccurs="0" />
                     <element name="category" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="type" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="tag" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="eventTypeId" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ReadNextEventsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="maxCount" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="ReadNextEvents"  type="vim25:ReadNextEventsRequestType" />
         <element name="ReadNextEventsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:Event" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ReadPreviousEventsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="maxCount" type="xsd:int" />
            </sequence>
         </complexType>
         <element name="ReadPreviousEvents"  type="vim25:ReadPreviousEventsRequestType" />
         <element name="ReadPreviousEventsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:Event" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RetrieveArgumentDescriptionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="eventTypeId" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RetrieveArgumentDescription"  type="vim25:RetrieveArgumentDescriptionRequestType" />
         <element name="RetrieveArgumentDescriptionResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:EventArgDesc" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateCollectorForEventsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="filter" type="vim25:EventFilterSpec" />
            </sequence>
         </complexType>
         <element name="CreateCollectorForEvents"  type="vim25:CreateCollectorForEventsRequestType" />
         <element name="CreateCollectorForEventsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="LogUserEventRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="msg" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="LogUserEvent"  type="vim25:LogUserEventRequestType" />
         <element name="LogUserEventResponse">
            <complexType />
         </element>
         <complexType name="QueryEventsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="filter" type="vim25:EventFilterSpec" />
            </sequence>
         </complexType>
         <element name="QueryEvents"  type="vim25:QueryEventsRequestType" />
         <element name="QueryEventsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:Event" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="PostEventRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="eventToPost" type="vim25:Event" />
               <element name="taskInfo" type="vim25:TaskInfo" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="PostEvent"  type="vim25:PostEventRequestType" />
         <element name="PostEventResponse">
            <complexType />
         </element>
         <complexType name="AdminDisabled">
            <complexContent>
               <extension base="vim25:HostConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AdminDisabledFault" type="vim25:AdminDisabled"/>
         <complexType name="AdminNotDisabled">
            <complexContent>
               <extension base="vim25:HostConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AdminNotDisabledFault" type="vim25:AdminNotDisabled"/>
         <simpleType name="AffinityType">
            <restriction base="xsd:string">
               <enumeration value="memory" />
               <enumeration value="cpu" />
            </restriction>
         </simpleType>
         <complexType name="AffinityConfigured">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="configuredAffinity" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AffinityConfiguredFault" type="vim25:AffinityConfigured"/>
         <simpleType name="AgentInstallFailedReason">
            <restriction base="xsd:string">
               <enumeration value="NotEnoughSpaceOnDevice" />
               <enumeration value="PrepareToUpgradeFailed" />
               <enumeration value="AgentNotRunning" />
               <enumeration value="AgentNotReachable" />
               <enumeration value="InstallTimedout" />
               <enumeration value="SignatureVerificationFailed" />
               <enumeration value="AgentUploadFailed" />
               <enumeration value="AgentUploadTimedout" />
               <enumeration value="UnknownInstallerError" />
            </restriction>
         </simpleType>
         <complexType name="AgentInstallFailed">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                     <element name="reason" type="xsd:string" minOccurs="0" />
                     <element name="statusCode" type="xsd:int" minOccurs="0" />
                     <element name="installerOutput" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AgentInstallFailedFault" type="vim25:AgentInstallFailed"/>
         <complexType name="AlreadyBeingManaged">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AlreadyBeingManagedFault" type="vim25:AlreadyBeingManaged"/>
         <complexType name="AlreadyConnected">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AlreadyConnectedFault" type="vim25:AlreadyConnected"/>
         <complexType name="AlreadyExists">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AlreadyExistsFault" type="vim25:AlreadyExists"/>
         <complexType name="AlreadyUpgraded">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AlreadyUpgradedFault" type="vim25:AlreadyUpgraded"/>
         <complexType name="ApplicationQuiesceFault">
            <complexContent>
               <extension base="vim25:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ApplicationQuiesceFaultFault" type="vim25:ApplicationQuiesceFault"/>
         <complexType name="AuthMinimumAdminPermission">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="AuthMinimumAdminPermissionFault" type="vim25:AuthMinimumAdminPermission"/>
         <complexType name="CannotAccessFile">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessFileFault" type="vim25:CannotAccessFile"/>
         <complexType name="CannotAccessLocalSource">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessLocalSourceFault" type="vim25:CannotAccessLocalSource"/>
         <complexType name="CannotAccessNetwork">
            <complexContent>
               <extension base="vim25:CannotAccessVmDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessNetworkFault" type="vim25:CannotAccessNetwork"/>
         <complexType name="CannotAccessVmComponent">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessVmComponentFault" type="vim25:CannotAccessVmComponent"/>
         <complexType name="CannotAccessVmConfig">
            <complexContent>
               <extension base="vim25:CannotAccessVmComponent">
                  <sequence>
                     <element name="reason" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessVmConfigFault" type="vim25:CannotAccessVmConfig"/>
         <complexType name="CannotAccessVmDevice">
            <complexContent>
               <extension base="vim25:CannotAccessVmComponent">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="backing" type="xsd:string" />
                     <element name="connected" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessVmDeviceFault" type="vim25:CannotAccessVmDevice"/>
         <complexType name="CannotAccessVmDisk">
            <complexContent>
               <extension base="vim25:CannotAccessVmDevice">
                  <sequence>
                     <element name="fault" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAccessVmDiskFault" type="vim25:CannotAccessVmDisk"/>
         <complexType name="CannotAddHostWithFTVmAsStandalone">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAddHostWithFTVmAsStandaloneFault" type="vim25:CannotAddHostWithFTVmAsStandalone"/>
         <complexType name="CannotAddHostWithFTVmToDifferentCluster">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAddHostWithFTVmToDifferentClusterFault" type="vim25:CannotAddHostWithFTVmToDifferentCluster"/>
         <complexType name="CannotAddHostWithFTVmToNonHACluster">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotAddHostWithFTVmToNonHAClusterFault" type="vim25:CannotAddHostWithFTVmToNonHACluster"/>
         <complexType name="CannotCreateFile">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotCreateFileFault" type="vim25:CannotCreateFile"/>
         <complexType name="CannotDecryptPasswords">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotDecryptPasswordsFault" type="vim25:CannotDecryptPasswords"/>
         <complexType name="CannotDeleteFile">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotDeleteFileFault" type="vim25:CannotDeleteFile"/>
         <complexType name="CannotDisableSnapshot">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotDisableSnapshotFault" type="vim25:CannotDisableSnapshot"/>
         <complexType name="CannotDisconnectHostWithFaultToleranceVm">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="hostName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotDisconnectHostWithFaultToleranceVmFault" type="vim25:CannotDisconnectHostWithFaultToleranceVm"/>
         <complexType name="CannotModifyConfigCpuRequirements">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotModifyConfigCpuRequirementsFault" type="vim25:CannotModifyConfigCpuRequirements"/>
         <simpleType name="CannotMoveFaultToleranceVmMoveType">
            <restriction base="xsd:string">
               <enumeration value="resourcePool" />
               <enumeration value="cluster" />
            </restriction>
         </simpleType>
         <complexType name="CannotMoveFaultToleranceVm">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="moveType" type="xsd:string" />
                     <element name="vmName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotMoveFaultToleranceVmFault" type="vim25:CannotMoveFaultToleranceVm"/>
         <complexType name="CannotMoveHostWithFaultToleranceVm">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CannotMoveHostWithFaultToleranceVmFault" type="vim25:CannotMoveHostWithFaultToleranceVm"/>
         <complexType name="CloneFromSnapshotNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CloneFromSnapshotNotSupportedFault" type="vim25:CloneFromSnapshotNotSupported"/>
         <complexType name="ConcurrentAccess">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ConcurrentAccessFault" type="vim25:ConcurrentAccess"/>
         <complexType name="ConnectedIso">
            <complexContent>
               <extension base="vim25:OvfExport">
                  <sequence>
                     <element name="cdrom" type="vim25:VirtualCdrom" />
                     <element name="filename" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ConnectedIsoFault" type="vim25:ConnectedIso"/>
         <complexType name="CpuCompatibilityUnknown">
            <complexContent>
               <extension base="vim25:CpuIncompatible">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CpuCompatibilityUnknownFault" type="vim25:CpuCompatibilityUnknown"/>
         <complexType name="CpuHotPlugNotSupported">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CpuHotPlugNotSupportedFault" type="vim25:CpuHotPlugNotSupported"/>
         <complexType name="CpuIncompatible">
            <complexContent>
               <extension base="vim25:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="level" type="xsd:int" />
                     <element name="registerName" type="xsd:string" />
                     <element name="registerBits" type="xsd:string" minOccurs="0" />
                     <element name="desiredBits" type="xsd:string" minOccurs="0" />
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CpuIncompatibleFault" type="vim25:CpuIncompatible"/>
         <complexType name="CpuIncompatible1ECX">
            <complexContent>
               <extension base="vim25:CpuIncompatible">
                  <sequence>
                     <element name="sse3" type="xsd:boolean" />
                     <element name="ssse3" type="xsd:boolean" />
                     <element name="sse41" type="xsd:boolean" />
                     <element name="sse42" type="xsd:boolean" />
                     <element name="other" type="xsd:boolean" />
                     <element name="otherOnly" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CpuIncompatible1ECXFault" type="vim25:CpuIncompatible1ECX"/>
         <complexType name="CpuIncompatible81EDX">
            <complexContent>
               <extension base="vim25:CpuIncompatible">
                  <sequence>
                     <element name="nx" type="xsd:boolean" />
                     <element name="ffxsr" type="xsd:boolean" />
                     <element name="rdtscp" type="xsd:boolean" />
                     <element name="lm" type="xsd:boolean" />
                     <element name="other" type="xsd:boolean" />
                     <element name="otherOnly" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CpuIncompatible81EDXFault" type="vim25:CpuIncompatible81EDX"/>
         <complexType name="CustomizationFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CustomizationFaultFault" type="vim25:CustomizationFault"/>
         <complexType name="CustomizationPending">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="CustomizationPendingFault" type="vim25:CustomizationPending"/>
         <simpleType name="DasConfigFaultDasConfigFaultReason">
            <restriction base="xsd:string">
               <enumeration value="HostNetworkMisconfiguration" />
               <enumeration value="HostMisconfiguration" />
               <enumeration value="InsufficientPrivileges" />
               <enumeration value="NoPrimaryAgentAvailable" />
               <enumeration value="Other" />
            </restriction>
         </simpleType>
         <complexType name="DasConfigFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="reason" type="xsd:string" minOccurs="0" />
                     <element name="output" type="xsd:string" minOccurs="0" />
                     <element name="event" type="vim25:Event" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DasConfigFaultFault" type="vim25:DasConfigFault"/>
         <complexType name="DatabaseError">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DatabaseErrorFault" type="vim25:DatabaseError"/>
         <complexType name="DatacenterMismatchArgument">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="entity" type="vim25:ManagedObjectReference" />
                     <element name="inputDatacenter" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDatacenterMismatchArgument">
            <sequence>
               <element name="DatacenterMismatchArgument" type="vim25:DatacenterMismatchArgument" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DatacenterMismatch">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="invalidArgument" type="vim25:DatacenterMismatchArgument" maxOccurs="unbounded" />
                     <element name="expectedDatacenter" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DatacenterMismatchFault" type="vim25:DatacenterMismatch"/>
         <complexType name="DatastoreNotWritableOnHost">
            <complexContent>
               <extension base="vim25:InvalidDatastore">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DatastoreNotWritableOnHostFault" type="vim25:DatastoreNotWritableOnHost"/>
         <complexType name="DestinationSwitchFull">
            <complexContent>
               <extension base="vim25:CannotAccessNetwork">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DestinationSwitchFullFault" type="vim25:DestinationSwitchFull"/>
         <complexType name="DeviceBackingNotSupported">
            <complexContent>
               <extension base="vim25:DeviceNotSupported">
                  <sequence>
                     <element name="backing" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DeviceBackingNotSupportedFault" type="vim25:DeviceBackingNotSupported"/>
         <complexType name="DeviceControllerNotSupported">
            <complexContent>
               <extension base="vim25:DeviceNotSupported">
                  <sequence>
                     <element name="controller" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DeviceControllerNotSupportedFault" type="vim25:DeviceControllerNotSupported"/>
         <complexType name="DeviceHotPlugNotSupported">
            <complexContent>
               <extension base="vim25:InvalidDeviceSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DeviceHotPlugNotSupportedFault" type="vim25:DeviceHotPlugNotSupported"/>
         <complexType name="DeviceNotFound">
            <complexContent>
               <extension base="vim25:InvalidDeviceSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DeviceNotFoundFault" type="vim25:DeviceNotFound"/>
         <simpleType name="DeviceNotSupportedReason">
            <restriction base="xsd:string">
               <enumeration value="host" />
               <enumeration value="guest" />
            </restriction>
         </simpleType>
         <complexType name="DeviceNotSupported">
            <complexContent>
               <extension base="vim25:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DeviceNotSupportedFault" type="vim25:DeviceNotSupported"/>
         <complexType name="DeviceUnsupportedForVmPlatform">
            <complexContent>
               <extension base="vim25:InvalidDeviceSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DeviceUnsupportedForVmPlatformFault" type="vim25:DeviceUnsupportedForVmPlatform"/>
         <complexType name="DeviceUnsupportedForVmVersion">
            <complexContent>
               <extension base="vim25:InvalidDeviceSpec">
                  <sequence>
                     <element name="currentVersion" type="xsd:string" />
                     <element name="expectedVersion" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DeviceUnsupportedForVmVersionFault" type="vim25:DeviceUnsupportedForVmVersion"/>
         <complexType name="DisableAdminNotSupported">
            <complexContent>
               <extension base="vim25:HostConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DisableAdminNotSupportedFault" type="vim25:DisableAdminNotSupported"/>
         <complexType name="DisallowedDiskModeChange">
            <complexContent>
               <extension base="vim25:InvalidDeviceSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DisallowedDiskModeChangeFault" type="vim25:DisallowedDiskModeChange"/>
         <complexType name="DisallowedMigrationDeviceAttached">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="fault" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DisallowedMigrationDeviceAttachedFault" type="vim25:DisallowedMigrationDeviceAttached"/>
         <complexType name="DisallowedOperationOnFailoverHost">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="hostname" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DisallowedOperationOnFailoverHostFault" type="vim25:DisallowedOperationOnFailoverHost"/>
         <complexType name="DiskMoveTypeNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DiskMoveTypeNotSupportedFault" type="vim25:DiskMoveTypeNotSupported"/>
         <complexType name="DiskNotSupported">
            <complexContent>
               <extension base="vim25:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="disk" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DiskNotSupportedFault" type="vim25:DiskNotSupported"/>
         <complexType name="DrsDisabledOnVm">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DrsDisabledOnVmFault" type="vim25:DrsDisabledOnVm"/>
         <complexType name="DrsVmotionIncompatibleFault">
            <complexContent>
               <extension base="vim25:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DrsVmotionIncompatibleFaultFault" type="vim25:DrsVmotionIncompatibleFault"/>
         <complexType name="DuplicateName">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="object" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DuplicateNameFault" type="vim25:DuplicateName"/>
         <complexType name="DvsFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DvsFaultFault" type="vim25:DvsFault"/>
         <complexType name="DvsNotAuthorized">
            <complexContent>
               <extension base="vim25:DvsFault">
                  <sequence>
                     <element name="sessionExtensionKey" type="xsd:string" minOccurs="0" />
                     <element name="dvsExtensionKey" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DvsNotAuthorizedFault" type="vim25:DvsNotAuthorized"/>
         <complexType name="DvsOperationBulkFaultFaultOnHost">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="fault" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDvsOperationBulkFaultFaultOnHost">
            <sequence>
               <element name="DvsOperationBulkFaultFaultOnHost" type="vim25:DvsOperationBulkFaultFaultOnHost" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DvsOperationBulkFault">
            <complexContent>
               <extension base="vim25:DvsFault">
                  <sequence>
                     <element name="hostFault" type="vim25:DvsOperationBulkFaultFaultOnHost" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DvsOperationBulkFaultFault" type="vim25:DvsOperationBulkFault"/>
         <complexType name="DvsScopeViolated">
            <complexContent>
               <extension base="vim25:DvsFault">
                  <sequence>
                     <element name="scope" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
                     <element name="entity" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="DvsScopeViolatedFault" type="vim25:DvsScopeViolated"/>
         <complexType name="EVCAdmissionFailed">
            <complexContent>
               <extension base="vim25:NotSupportedHostInCluster">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EVCAdmissionFailedFault" type="vim25:EVCAdmissionFailed"/>
         <complexType name="EVCAdmissionFailedCPUFeaturesForMode">
            <complexContent>
               <extension base="vim25:EVCAdmissionFailed">
                  <sequence>
                     <element name="currentEVCModeKey" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EVCAdmissionFailedCPUFeaturesForModeFault" type="vim25:EVCAdmissionFailedCPUFeaturesForMode"/>
         <complexType name="EVCAdmissionFailedCPUModel">
            <complexContent>
               <extension base="vim25:EVCAdmissionFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EVCAdmissionFailedCPUModelFault" type="vim25:EVCAdmissionFailedCPUModel"/>
         <complexType name="EVCAdmissionFailedCPUModelForMode">
            <complexContent>
               <extension base="vim25:EVCAdmissionFailed">
                  <sequence>
                     <element name="currentEVCModeKey" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EVCAdmissionFailedCPUModelForModeFault" type="vim25:EVCAdmissionFailedCPUModelForMode"/>
         <complexType name="EVCAdmissionFailedCPUVendor">
            <complexContent>
               <extension base="vim25:EVCAdmissionFailed">
                  <sequence>
                     <element name="clusterCPUVendor" type="xsd:string" />
                     <element name="hostCPUVendor" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EVCAdmissionFailedCPUVendorFault" type="vim25:EVCAdmissionFailedCPUVendor"/>
         <complexType name="EVCAdmissionFailedCPUVendorUnknown">
            <complexContent>
               <extension base="vim25:EVCAdmissionFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EVCAdmissionFailedCPUVendorUnknownFault" type="vim25:EVCAdmissionFailedCPUVendorUnknown"/>
         <complexType name="EVCAdmissionFailedHostDisconnected">
            <complexContent>
               <extension base="vim25:EVCAdmissionFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EVCAdmissionFailedHostDisconnectedFault" type="vim25:EVCAdmissionFailedHostDisconnected"/>
         <complexType name="EVCAdmissionFailedHostSoftware">
            <complexContent>
               <extension base="vim25:EVCAdmissionFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EVCAdmissionFailedHostSoftwareFault" type="vim25:EVCAdmissionFailedHostSoftware"/>
         <complexType name="EVCAdmissionFailedHostSoftwareForMode">
            <complexContent>
               <extension base="vim25:EVCAdmissionFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EVCAdmissionFailedHostSoftwareForModeFault" type="vim25:EVCAdmissionFailedHostSoftwareForMode"/>
         <complexType name="EVCAdmissionFailedVmActive">
            <complexContent>
               <extension base="vim25:EVCAdmissionFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EVCAdmissionFailedVmActiveFault" type="vim25:EVCAdmissionFailedVmActive"/>
         <complexType name="EightHostLimitViolated">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="EightHostLimitViolatedFault" type="vim25:EightHostLimitViolated"/>
         <complexType name="ExpiredAddonLicense">
            <complexContent>
               <extension base="vim25:ExpiredFeatureLicense">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ExpiredAddonLicenseFault" type="vim25:ExpiredAddonLicense"/>
         <complexType name="ExpiredEditionLicense">
            <complexContent>
               <extension base="vim25:ExpiredFeatureLicense">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ExpiredEditionLicenseFault" type="vim25:ExpiredEditionLicense"/>
         <complexType name="ExpiredFeatureLicense">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                     <element name="feature" type="xsd:string" />
                     <element name="count" type="xsd:int" />
                     <element name="expirationDate" type="xsd:dateTime" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ExpiredFeatureLicenseFault" type="vim25:ExpiredFeatureLicense"/>
         <complexType name="ExtendedFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="faultTypeId" type="xsd:string" />
                     <element name="data" type="vim25:KeyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ExtendedFaultFault" type="vim25:ExtendedFault"/>
         <complexType name="FaultToleranceAntiAffinityViolated">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="hostName" type="xsd:string" />
                     <element name="host" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FaultToleranceAntiAffinityViolatedFault" type="vim25:FaultToleranceAntiAffinityViolated"/>
         <complexType name="FaultToleranceCpuIncompatible">
            <complexContent>
               <extension base="vim25:CpuIncompatible">
                  <sequence>
                     <element name="model" type="xsd:boolean" />
                     <element name="family" type="xsd:boolean" />
                     <element name="stepping" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FaultToleranceCpuIncompatibleFault" type="vim25:FaultToleranceCpuIncompatible"/>
         <complexType name="FaultToleranceNotLicensed">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="hostName" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FaultToleranceNotLicensedFault" type="vim25:FaultToleranceNotLicensed"/>
         <complexType name="FaultToleranceNotSameBuild">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="build" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FaultToleranceNotSameBuildFault" type="vim25:FaultToleranceNotSameBuild"/>
         <complexType name="FaultTolerancePrimaryPowerOnNotAttempted">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="secondaryVm" type="vim25:ManagedObjectReference" />
                     <element name="primaryVm" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FaultTolerancePrimaryPowerOnNotAttemptedFault" type="vim25:FaultTolerancePrimaryPowerOnNotAttempted"/>
         <complexType name="FileAlreadyExists">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileAlreadyExistsFault" type="vim25:FileAlreadyExists"/>
         <complexType name="FileBackedPortNotSupported">
            <complexContent>
               <extension base="vim25:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileBackedPortNotSupportedFault" type="vim25:FileBackedPortNotSupported"/>
         <complexType name="FileFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="file" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileFaultFault" type="vim25:FileFault"/>
         <complexType name="FileLocked">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileLockedFault" type="vim25:FileLocked"/>
         <complexType name="FileNotFound">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileNotFoundFault" type="vim25:FileNotFound"/>
         <complexType name="FileNotWritable">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileNotWritableFault" type="vim25:FileNotWritable"/>
         <complexType name="FileTooLarge">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                     <element name="datastore" type="xsd:string" />
                     <element name="fileSize" type="xsd:long" />
                     <element name="maxFileSize" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FileTooLargeFault" type="vim25:FileTooLarge"/>
         <complexType name="FilesystemQuiesceFault">
            <complexContent>
               <extension base="vim25:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FilesystemQuiesceFaultFault" type="vim25:FilesystemQuiesceFault"/>
         <simpleType name="FtIssuesOnHostHostSelectionType">
            <restriction base="xsd:string">
               <enumeration value="user" />
               <enumeration value="vc" />
               <enumeration value="drs" />
            </restriction>
         </simpleType>
         <complexType name="FtIssuesOnHost">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="hostName" type="xsd:string" />
                     <element name="errors" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FtIssuesOnHostFault" type="vim25:FtIssuesOnHost"/>
         <complexType name="FullStorageVMotionNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFeatureNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="FullStorageVMotionNotSupportedFault" type="vim25:FullStorageVMotionNotSupported"/>
         <complexType name="GenericDrsFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="hostFaults" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="GenericDrsFaultFault" type="vim25:GenericDrsFault"/>
         <complexType name="GenericVmConfigFault">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                     <element name="reason" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="GenericVmConfigFaultFault" type="vim25:GenericVmConfigFault"/>
         <complexType name="HAErrorsAtDest">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HAErrorsAtDestFault" type="vim25:HAErrorsAtDest"/>
         <complexType name="HostConfigFailed">
            <complexContent>
               <extension base="vim25:HostConfigFault">
                  <sequence>
                     <element name="failure" type="vim25:LocalizedMethodFault" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostConfigFailedFault" type="vim25:HostConfigFailed"/>
         <complexType name="HostConfigFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostConfigFaultFault" type="vim25:HostConfigFault"/>
         <complexType name="HostConnectFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostConnectFaultFault" type="vim25:HostConnectFault"/>
         <simpleType name="HostIncompatibleForFaultToleranceReason">
            <restriction base="xsd:string">
               <enumeration value="product" />
               <enumeration value="processor" />
            </restriction>
         </simpleType>
         <complexType name="HostIncompatibleForFaultTolerance">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="hostName" type="xsd:string" minOccurs="0" />
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostIncompatibleForFaultToleranceFault" type="vim25:HostIncompatibleForFaultTolerance"/>
         <simpleType name="HostIncompatibleForRecordReplayReason">
            <restriction base="xsd:string">
               <enumeration value="product" />
               <enumeration value="processor" />
            </restriction>
         </simpleType>
         <complexType name="HostIncompatibleForRecordReplay">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="hostName" type="xsd:string" minOccurs="0" />
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostIncompatibleForRecordReplayFault" type="vim25:HostIncompatibleForRecordReplay"/>
         <complexType name="HostInventoryFull">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                     <element name="capacity" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostInventoryFullFault" type="vim25:HostInventoryFull"/>
         <complexType name="HostPowerOpFailed">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HostPowerOpFailedFault" type="vim25:HostPowerOpFailed"/>
         <complexType name="HotSnapshotMoveNotSupported">
            <complexContent>
               <extension base="vim25:SnapshotCopyNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="HotSnapshotMoveNotSupportedFault" type="vim25:HotSnapshotMoveNotSupported"/>
         <complexType name="IDEDiskNotSupported">
            <complexContent>
               <extension base="vim25:DiskNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IDEDiskNotSupportedFault" type="vim25:IDEDiskNotSupported"/>
         <complexType name="InUseFeatureManipulationDisallowed">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InUseFeatureManipulationDisallowedFault" type="vim25:InUseFeatureManipulationDisallowed"/>
         <complexType name="InaccessibleDatastore">
            <complexContent>
               <extension base="vim25:InvalidDatastore">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InaccessibleDatastoreFault" type="vim25:InaccessibleDatastore"/>
         <complexType name="IncompatibleDefaultDevice">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="device" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IncompatibleDefaultDeviceFault" type="vim25:IncompatibleDefaultDevice"/>
         <complexType name="IncompatibleHostForFtSecondary">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="error" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IncompatibleHostForFtSecondaryFault" type="vim25:IncompatibleHostForFtSecondary"/>
         <complexType name="IncompatibleSetting">
            <complexContent>
               <extension base="vim25:InvalidArgument">
                  <sequence>
                     <element name="conflictingProperty" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IncompatibleSettingFault" type="vim25:IncompatibleSetting"/>
         <complexType name="IncorrectFileType">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IncorrectFileTypeFault" type="vim25:IncorrectFileType"/>
         <complexType name="IncorrectHostInformation">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IncorrectHostInformationFault" type="vim25:IncorrectHostInformation"/>
         <complexType name="IndependentDiskVMotionNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFeatureNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IndependentDiskVMotionNotSupportedFault" type="vim25:IndependentDiskVMotionNotSupported"/>
         <complexType name="InsufficientCpuResourcesFault">
            <complexContent>
               <extension base="vim25:InsufficientResourcesFault">
                  <sequence>
                     <element name="unreserved" type="xsd:long" />
                     <element name="requested" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientCpuResourcesFaultFault" type="vim25:InsufficientCpuResourcesFault"/>
         <complexType name="InsufficientFailoverResourcesFault">
            <complexContent>
               <extension base="vim25:InsufficientResourcesFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientFailoverResourcesFaultFault" type="vim25:InsufficientFailoverResourcesFault"/>
         <complexType name="InsufficientHostCapacityFault">
            <complexContent>
               <extension base="vim25:InsufficientResourcesFault">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientHostCapacityFaultFault" type="vim25:InsufficientHostCapacityFault"/>
         <complexType name="InsufficientHostCpuCapacityFault">
            <complexContent>
               <extension base="vim25:InsufficientHostCapacityFault">
                  <sequence>
                     <element name="unreserved" type="xsd:long" />
                     <element name="requested" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientHostCpuCapacityFaultFault" type="vim25:InsufficientHostCpuCapacityFault"/>
         <complexType name="InsufficientHostMemoryCapacityFault">
            <complexContent>
               <extension base="vim25:InsufficientHostCapacityFault">
                  <sequence>
                     <element name="unreserved" type="xsd:long" />
                     <element name="requested" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientHostMemoryCapacityFaultFault" type="vim25:InsufficientHostMemoryCapacityFault"/>
         <complexType name="InsufficientMemoryResourcesFault">
            <complexContent>
               <extension base="vim25:InsufficientResourcesFault">
                  <sequence>
                     <element name="unreserved" type="xsd:long" />
                     <element name="requested" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientMemoryResourcesFaultFault" type="vim25:InsufficientMemoryResourcesFault"/>
         <complexType name="InsufficientPerCpuCapacity">
            <complexContent>
               <extension base="vim25:InsufficientHostCapacityFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientPerCpuCapacityFault" type="vim25:InsufficientPerCpuCapacity"/>
         <complexType name="InsufficientResourcesFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientResourcesFaultFault" type="vim25:InsufficientResourcesFault"/>
         <complexType name="InsufficientStandbyCpuResource">
            <complexContent>
               <extension base="vim25:InsufficientStandbyResource">
                  <sequence>
                     <element name="available" type="xsd:long" />
                     <element name="requested" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientStandbyCpuResourceFault" type="vim25:InsufficientStandbyCpuResource"/>
         <complexType name="InsufficientStandbyMemoryResource">
            <complexContent>
               <extension base="vim25:InsufficientStandbyResource">
                  <sequence>
                     <element name="available" type="xsd:long" />
                     <element name="requested" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientStandbyMemoryResourceFault" type="vim25:InsufficientStandbyMemoryResource"/>
         <complexType name="InsufficientStandbyResource">
            <complexContent>
               <extension base="vim25:InsufficientResourcesFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InsufficientStandbyResourceFault" type="vim25:InsufficientStandbyResource"/>
         <complexType name="InvalidAffinitySettingFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidAffinitySettingFaultFault" type="vim25:InvalidAffinitySettingFault"/>
         <complexType name="InvalidBmcRole">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidBmcRoleFault" type="vim25:InvalidBmcRole"/>
         <complexType name="InvalidBundle">
            <complexContent>
               <extension base="vim25:PlatformConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidBundleFault" type="vim25:InvalidBundle"/>
         <complexType name="InvalidClientCertificate">
            <complexContent>
               <extension base="vim25:InvalidLogin">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidClientCertificateFault" type="vim25:InvalidClientCertificate"/>
         <complexType name="InvalidController">
            <complexContent>
               <extension base="vim25:InvalidDeviceSpec">
                  <sequence>
                     <element name="controllerKey" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidControllerFault" type="vim25:InvalidController"/>
         <complexType name="InvalidDatastore">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="datastore" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDatastoreFault" type="vim25:InvalidDatastore"/>
         <complexType name="InvalidDatastorePath">
            <complexContent>
               <extension base="vim25:InvalidDatastore">
                  <sequence>
                     <element name="datastorePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDatastorePathFault" type="vim25:InvalidDatastorePath"/>
         <complexType name="InvalidDeviceBacking">
            <complexContent>
               <extension base="vim25:InvalidDeviceSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDeviceBackingFault" type="vim25:InvalidDeviceBacking"/>
         <complexType name="InvalidDeviceOperation">
            <complexContent>
               <extension base="vim25:InvalidDeviceSpec">
                  <sequence>
                     <element name="badOp" type="vim25:VirtualDeviceConfigSpecOperation" minOccurs="0" />
                     <element name="badFileOp" type="vim25:VirtualDeviceConfigSpecFileOperation" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDeviceOperationFault" type="vim25:InvalidDeviceOperation"/>
         <complexType name="InvalidDeviceSpec">
            <complexContent>
               <extension base="vim25:InvalidVmConfig">
                  <sequence>
                     <element name="deviceIndex" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDeviceSpecFault" type="vim25:InvalidDeviceSpec"/>
         <complexType name="InvalidDiskFormat">
            <complexContent>
               <extension base="vim25:InvalidFormat">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDiskFormatFault" type="vim25:InvalidDiskFormat"/>
         <complexType name="InvalidDrsBehaviorForFtVm">
            <complexContent>
               <extension base="vim25:InvalidArgument">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" />
                     <element name="vmName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidDrsBehaviorForFtVmFault" type="vim25:InvalidDrsBehaviorForFtVm"/>
         <complexType name="InvalidEditionLicense">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                     <element name="feature" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidEditionLicenseFault" type="vim25:InvalidEditionLicense"/>
         <complexType name="InvalidEvent">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidEventFault" type="vim25:InvalidEvent"/>
         <complexType name="InvalidFolder">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="target" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidFolderFault" type="vim25:InvalidFolder"/>
         <complexType name="InvalidFormat">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidFormatFault" type="vim25:InvalidFormat"/>
         <complexType name="InvalidHostState">
            <complexContent>
               <extension base="vim25:InvalidState">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidHostStateFault" type="vim25:InvalidHostState"/>
         <complexType name="InvalidIndexArgument">
            <complexContent>
               <extension base="vim25:InvalidArgument">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidIndexArgumentFault" type="vim25:InvalidIndexArgument"/>
         <complexType name="InvalidIpmiLoginInfo">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidIpmiLoginInfoFault" type="vim25:InvalidIpmiLoginInfo"/>
         <complexType name="InvalidIpmiMacAddress">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="userProvidedMacAddress" type="xsd:string" />
                     <element name="observedMacAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidIpmiMacAddressFault" type="vim25:InvalidIpmiMacAddress"/>
         <complexType name="InvalidLicense">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="licenseContent" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidLicenseFault" type="vim25:InvalidLicense"/>
         <complexType name="InvalidLocale">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidLocaleFault" type="vim25:InvalidLocale"/>
         <complexType name="InvalidLogin">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidLoginFault" type="vim25:InvalidLogin"/>
         <complexType name="InvalidName">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidNameFault" type="vim25:InvalidName"/>
         <complexType name="InvalidNasCredentials">
            <complexContent>
               <extension base="vim25:NasConfigFault">
                  <sequence>
                     <element name="userName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidNasCredentialsFault" type="vim25:InvalidNasCredentials"/>
         <complexType name="InvalidNetworkInType">
            <complexContent>
               <extension base="vim25:VAppPropertyFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidNetworkInTypeFault" type="vim25:InvalidNetworkInType"/>
         <complexType name="InvalidNetworkResource">
            <complexContent>
               <extension base="vim25:NasConfigFault">
                  <sequence>
                     <element name="remoteHost" type="xsd:string" />
                     <element name="remotePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidNetworkResourceFault" type="vim25:InvalidNetworkResource"/>
         <complexType name="InvalidOperationOnSecondaryVm">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="instanceUuid" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidOperationOnSecondaryVmFault" type="vim25:InvalidOperationOnSecondaryVm"/>
         <complexType name="InvalidPowerState">
            <complexContent>
               <extension base="vim25:InvalidState">
                  <sequence>
                     <element name="requestedState" type="vim25:VirtualMachinePowerState" minOccurs="0" />
                     <element name="existingState" type="vim25:VirtualMachinePowerState" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidPowerStateFault" type="vim25:InvalidPowerState"/>
         <complexType name="InvalidPrivilege">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="privilege" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidPrivilegeFault" type="vim25:InvalidPrivilege"/>
         <complexType name="InvalidPropertyType">
            <complexContent>
               <extension base="vim25:VAppPropertyFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidPropertyTypeFault" type="vim25:InvalidPropertyType"/>
         <complexType name="InvalidPropertyValue">
            <complexContent>
               <extension base="vim25:VAppPropertyFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidPropertyValueFault" type="vim25:InvalidPropertyValue"/>
         <complexType name="InvalidResourcePoolStructureFault">
            <complexContent>
               <extension base="vim25:InsufficientResourcesFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidResourcePoolStructureFaultFault" type="vim25:InvalidResourcePoolStructureFault"/>
         <complexType name="InvalidSnapshotFormat">
            <complexContent>
               <extension base="vim25:InvalidFormat">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidSnapshotFormatFault" type="vim25:InvalidSnapshotFormat"/>
         <complexType name="InvalidState">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidStateFault" type="vim25:InvalidState"/>
         <complexType name="InvalidVmConfig">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                     <element name="property" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InvalidVmConfigFault" type="vim25:InvalidVmConfig"/>
         <complexType name="InventoryHasStandardAloneHosts">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                     <element name="hosts" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="InventoryHasStandardAloneHostsFault" type="vim25:InventoryHasStandardAloneHosts"/>
         <complexType name="IpHostnameGeneratorError">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="IpHostnameGeneratorErrorFault" type="vim25:IpHostnameGeneratorError"/>
         <complexType name="LegacyNetworkInterfaceInUse">
            <complexContent>
               <extension base="vim25:CannotAccessNetwork">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LegacyNetworkInterfaceInUseFault" type="vim25:LegacyNetworkInterfaceInUse"/>
         <simpleType name="LicenseAssignmentFailedReason">
            <restriction base="xsd:string">
               <enumeration value="keyEntityMismatch" />
               <enumeration value="downgradeDisallowed" />
               <enumeration value="inventoryNotManageableByVirtualCenter" />
               <enumeration value="hostsUnmanageableByVirtualCenterWithoutLicenseServer" />
            </restriction>
         </simpleType>
         <complexType name="LicenseAssignmentFailed">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                     <element name="reason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LicenseAssignmentFailedFault" type="vim25:LicenseAssignmentFailed"/>
         <complexType name="LicenseDowngradeDisallowed">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                     <element name="edition" type="xsd:string" />
                     <element name="entityId" type="xsd:string" />
                     <element name="features" type="vim25:KeyAnyValue" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LicenseDowngradeDisallowedFault" type="vim25:LicenseDowngradeDisallowed"/>
         <complexType name="LicenseEntityNotFound">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="entityId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LicenseEntityNotFoundFault" type="vim25:LicenseEntityNotFound"/>
         <complexType name="LicenseExpired">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                     <element name="licenseKey" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LicenseExpiredFault" type="vim25:LicenseExpired"/>
         <complexType name="LicenseKeyEntityMismatch">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LicenseKeyEntityMismatchFault" type="vim25:LicenseKeyEntityMismatch"/>
         <complexType name="LicenseRestricted">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LicenseRestrictedFault" type="vim25:LicenseRestricted"/>
         <complexType name="LicenseServerUnavailable">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="licenseServer" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LicenseServerUnavailableFault" type="vim25:LicenseServerUnavailable"/>
         <complexType name="LicenseSourceUnavailable">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                     <element name="licenseSource" type="vim25:LicenseSource" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LicenseSourceUnavailableFault" type="vim25:LicenseSourceUnavailable"/>
         <complexType name="LimitExceeded">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="property" type="xsd:string" minOccurs="0" />
                     <element name="limit" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LimitExceededFault" type="vim25:LimitExceeded"/>
         <complexType name="LinuxVolumeNotClean">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LinuxVolumeNotCleanFault" type="vim25:LinuxVolumeNotClean"/>
         <complexType name="LogBundlingFailed">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="LogBundlingFailedFault" type="vim25:LogBundlingFailed"/>
         <complexType name="MaintenanceModeFileMove">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MaintenanceModeFileMoveFault" type="vim25:MaintenanceModeFileMove"/>
         <complexType name="MemoryHotPlugNotSupported">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MemoryHotPlugNotSupportedFault" type="vim25:MemoryHotPlugNotSupported"/>
         <complexType name="MemorySizeNotRecommended">
            <complexContent>
               <extension base="vim25:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="memorySizeMB" type="xsd:int" />
                     <element name="minMemorySizeMB" type="xsd:int" />
                     <element name="maxMemorySizeMB" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MemorySizeNotRecommendedFault" type="vim25:MemorySizeNotRecommended"/>
         <complexType name="MemorySizeNotSupported">
            <complexContent>
               <extension base="vim25:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="memorySizeMB" type="xsd:int" />
                     <element name="minMemorySizeMB" type="xsd:int" />
                     <element name="maxMemorySizeMB" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MemorySizeNotSupportedFault" type="vim25:MemorySizeNotSupported"/>
         <complexType name="MemorySnapshotOnIndependentDisk">
            <complexContent>
               <extension base="vim25:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MemorySnapshotOnIndependentDiskFault" type="vim25:MemorySnapshotOnIndependentDisk"/>
         <complexType name="MethodDisabled">
            <complexContent>
               <extension base="vim25:RuntimeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MethodDisabledFault" type="vim25:MethodDisabled"/>
         <complexType name="MigrationDisabled">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MigrationDisabledFault" type="vim25:MigrationDisabled"/>
         <complexType name="MigrationFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MigrationFaultFault" type="vim25:MigrationFault"/>
         <complexType name="MigrationFeatureNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="atSourceHost" type="xsd:boolean" />
                     <element name="failedHostName" type="xsd:string" />
                     <element name="failedHost" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MigrationFeatureNotSupportedFault" type="vim25:MigrationFeatureNotSupported"/>
         <complexType name="MigrationNotReady">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="reason" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MigrationNotReadyFault" type="vim25:MigrationNotReady"/>
         <complexType name="MismatchedBundle">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="bundleUuid" type="xsd:string" />
                     <element name="hostUuid" type="xsd:string" />
                     <element name="bundleBuildNumber" type="xsd:int" />
                     <element name="hostBuildNumber" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MismatchedBundleFault" type="vim25:MismatchedBundle"/>
         <complexType name="MismatchedNetworkPolicies">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="backing" type="xsd:string" />
                     <element name="connected" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MismatchedNetworkPoliciesFault" type="vim25:MismatchedNetworkPolicies"/>
         <complexType name="MismatchedVMotionNetworkNames">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="sourceNetwork" type="xsd:string" />
                     <element name="destNetwork" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MismatchedVMotionNetworkNamesFault" type="vim25:MismatchedVMotionNetworkNames"/>
         <complexType name="MissingBmcSupport">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MissingBmcSupportFault" type="vim25:MissingBmcSupport"/>
         <complexType name="MissingController">
            <complexContent>
               <extension base="vim25:InvalidDeviceSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MissingControllerFault" type="vim25:MissingController"/>
         <complexType name="MissingLinuxCustResources">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MissingLinuxCustResourcesFault" type="vim25:MissingLinuxCustResources"/>
         <complexType name="MissingNetworkIpConfig">
            <complexContent>
               <extension base="vim25:VAppPropertyFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MissingNetworkIpConfigFault" type="vim25:MissingNetworkIpConfig"/>
         <complexType name="MissingPowerOffConfiguration">
            <complexContent>
               <extension base="vim25:VAppConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MissingPowerOffConfigurationFault" type="vim25:MissingPowerOffConfiguration"/>
         <complexType name="MissingPowerOnConfiguration">
            <complexContent>
               <extension base="vim25:VAppConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MissingPowerOnConfigurationFault" type="vim25:MissingPowerOnConfiguration"/>
         <complexType name="MissingWindowsCustResources">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MissingWindowsCustResourcesFault" type="vim25:MissingWindowsCustResources"/>
         <complexType name="MountError">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" />
                     <element name="diskIndex" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MountErrorFault" type="vim25:MountError"/>
         <complexType name="MultipleCertificatesVerifyFaultThumbprintData">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="port" type="xsd:int" />
                     <element name="thumbprint" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfMultipleCertificatesVerifyFaultThumbprintData">
            <sequence>
               <element name="MultipleCertificatesVerifyFaultThumbprintData" type="vim25:MultipleCertificatesVerifyFaultThumbprintData" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="MultipleCertificatesVerifyFault">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                     <element name="thumbprintData" type="vim25:MultipleCertificatesVerifyFaultThumbprintData" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MultipleCertificatesVerifyFaultFault" type="vim25:MultipleCertificatesVerifyFault"/>
         <complexType name="MultipleSnapshotsNotSupported">
            <complexContent>
               <extension base="vim25:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="MultipleSnapshotsNotSupportedFault" type="vim25:MultipleSnapshotsNotSupported"/>
         <complexType name="NasConfigFault">
            <complexContent>
               <extension base="vim25:HostConfigFault">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NasConfigFaultFault" type="vim25:NasConfigFault"/>
         <complexType name="NasConnectionLimitReached">
            <complexContent>
               <extension base="vim25:NasConfigFault">
                  <sequence>
                     <element name="remoteHost" type="xsd:string" />
                     <element name="remotePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NasConnectionLimitReachedFault" type="vim25:NasConnectionLimitReached"/>
         <complexType name="NasSessionCredentialConflict">
            <complexContent>
               <extension base="vim25:NasConfigFault">
                  <sequence>
                     <element name="remoteHost" type="xsd:string" />
                     <element name="remotePath" type="xsd:string" />
                     <element name="userName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NasSessionCredentialConflictFault" type="vim25:NasSessionCredentialConflict"/>
         <complexType name="NasVolumeNotMounted">
            <complexContent>
               <extension base="vim25:NasConfigFault">
                  <sequence>
                     <element name="remoteHost" type="xsd:string" />
                     <element name="remotePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NasVolumeNotMountedFault" type="vim25:NasVolumeNotMounted"/>
         <complexType name="NetworkCopyFault">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NetworkCopyFaultFault" type="vim25:NetworkCopyFault"/>
         <complexType name="NetworkInaccessible">
            <complexContent>
               <extension base="vim25:NasConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NetworkInaccessibleFault" type="vim25:NetworkInaccessible"/>
         <complexType name="NetworksMayNotBeTheSame">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NetworksMayNotBeTheSameFault" type="vim25:NetworksMayNotBeTheSame"/>
         <complexType name="NicSettingMismatch">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                     <element name="numberOfNicsInSpec" type="xsd:int" />
                     <element name="numberOfNicsInVM" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NicSettingMismatchFault" type="vim25:NicSettingMismatch"/>
         <complexType name="NoActiveHostInCluster">
            <complexContent>
               <extension base="vim25:InvalidState">
                  <sequence>
                     <element name="computeResource" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoActiveHostInClusterFault" type="vim25:NoActiveHostInCluster"/>
         <complexType name="NoAvailableIp">
            <complexContent>
               <extension base="vim25:VAppPropertyFault">
                  <sequence>
                     <element name="network" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoAvailableIpFault" type="vim25:NoAvailableIp"/>
         <complexType name="NoClientCertificate">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoClientCertificateFault" type="vim25:NoClientCertificate"/>
         <complexType name="NoCompatibleHost">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="error" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoCompatibleHostFault" type="vim25:NoCompatibleHost"/>
         <complexType name="NoDiskFound">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoDiskFoundFault" type="vim25:NoDiskFound"/>
         <complexType name="NoDiskSpace">
            <complexContent>
               <extension base="vim25:FileFault">
                  <sequence>
                     <element name="datastore" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoDiskSpaceFault" type="vim25:NoDiskSpace"/>
         <complexType name="NoDisksToCustomize">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoDisksToCustomizeFault" type="vim25:NoDisksToCustomize"/>
         <complexType name="NoGateway">
            <complexContent>
               <extension base="vim25:HostConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoGatewayFault" type="vim25:NoGateway"/>
         <complexType name="NoGuestHeartbeat">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoGuestHeartbeatFault" type="vim25:NoGuestHeartbeat"/>
         <complexType name="NoHost">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoHostFault" type="vim25:NoHost"/>
         <complexType name="NoHostSuitableForFtSecondary">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" />
                     <element name="vmName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoHostSuitableForFtSecondaryFault" type="vim25:NoHostSuitableForFtSecondary"/>
         <complexType name="NoLicenseServerConfigured">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoLicenseServerConfiguredFault" type="vim25:NoLicenseServerConfigured"/>
         <complexType name="NoPeerHostFound">
            <complexContent>
               <extension base="vim25:HostPowerOpFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoPeerHostFoundFault" type="vim25:NoPeerHostFound"/>
         <complexType name="NoPermission">
            <complexContent>
               <extension base="vim25:SecurityError">
                  <sequence>
                     <element name="object" type="vim25:ManagedObjectReference" />
                     <element name="privilegeId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoPermissionFault" type="vim25:NoPermission"/>
         <complexType name="NoPermissionOnHost">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoPermissionOnHostFault" type="vim25:NoPermissionOnHost"/>
         <complexType name="NoPermissionOnNasVolume">
            <complexContent>
               <extension base="vim25:NasConfigFault">
                  <sequence>
                     <element name="userName" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoPermissionOnNasVolumeFault" type="vim25:NoPermissionOnNasVolume"/>
         <complexType name="NoSubjectName">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoSubjectNameFault" type="vim25:NoSubjectName"/>
         <complexType name="NoVcManagedIpConfigured">
            <complexContent>
               <extension base="vim25:VAppPropertyFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoVcManagedIpConfiguredFault" type="vim25:NoVcManagedIpConfigured"/>
         <complexType name="NoVirtualNic">
            <complexContent>
               <extension base="vim25:HostConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoVirtualNicFault" type="vim25:NoVirtualNic"/>
         <complexType name="NoVmInVApp">
            <complexContent>
               <extension base="vim25:VAppConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NoVmInVAppFault" type="vim25:NoVmInVApp"/>
         <complexType name="NonHomeRDMVMotionNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFeatureNotSupported">
                  <sequence>
                     <element name="device" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NonHomeRDMVMotionNotSupportedFault" type="vim25:NonHomeRDMVMotionNotSupported"/>
         <complexType name="NonPersistentDisksNotSupported">
            <complexContent>
               <extension base="vim25:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NonPersistentDisksNotSupportedFault" type="vim25:NonPersistentDisksNotSupported"/>
         <complexType name="NotAuthenticated">
            <complexContent>
               <extension base="vim25:NoPermission">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotAuthenticatedFault" type="vim25:NotAuthenticated"/>
         <complexType name="NotEnoughCpus">
            <complexContent>
               <extension base="vim25:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="numCpuDest" type="xsd:int" />
                     <element name="numCpuVm" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotEnoughCpusFault" type="vim25:NotEnoughCpus"/>
         <complexType name="NotEnoughLogicalCpus">
            <complexContent>
               <extension base="vim25:NotEnoughCpus">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotEnoughLogicalCpusFault" type="vim25:NotEnoughLogicalCpus"/>
         <complexType name="NotFound">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotFoundFault" type="vim25:NotFound"/>
         <complexType name="NotSupportedHost">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                     <element name="productName" type="xsd:string" minOccurs="0" />
                     <element name="productVersion" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotSupportedHostFault" type="vim25:NotSupportedHost"/>
         <complexType name="NotSupportedHostInCluster">
            <complexContent>
               <extension base="vim25:NotSupportedHost">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotSupportedHostInClusterFault" type="vim25:NotSupportedHostInCluster"/>
         <complexType name="NotUserConfigurableProperty">
            <complexContent>
               <extension base="vim25:VAppPropertyFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NotUserConfigurablePropertyFault" type="vim25:NotUserConfigurableProperty"/>
         <simpleType name="NumVirtualCpusIncompatibleReason">
            <restriction base="xsd:string">
               <enumeration value="recordReplay" />
               <enumeration value="faultTolerance" />
            </restriction>
         </simpleType>
         <complexType name="NumVirtualCpusIncompatible">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                     <element name="reason" type="xsd:string" />
                     <element name="numCpu" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NumVirtualCpusIncompatibleFault" type="vim25:NumVirtualCpusIncompatible"/>
         <complexType name="NumVirtualCpusNotSupported">
            <complexContent>
               <extension base="vim25:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="maxSupportedVcpusDest" type="xsd:int" />
                     <element name="numCpuVm" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="NumVirtualCpusNotSupportedFault" type="vim25:NumVirtualCpusNotSupported"/>
         <complexType name="OutOfBounds">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="argumentName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OutOfBoundsFault" type="vim25:OutOfBounds"/>
         <complexType name="OvfAttribute">
            <complexContent>
               <extension base="vim25:OvfInvalidPackage">
                  <sequence>
                     <element name="elementName" type="xsd:string" />
                     <element name="attributeName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfAttributeFault" type="vim25:OvfAttribute"/>
         <complexType name="OvfConnectedDevice">
            <complexContent>
               <extension base="vim25:OvfHardwareExport">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfConnectedDeviceFault" type="vim25:OvfConnectedDevice"/>
         <complexType name="OvfConnectedDeviceFloppy">
            <complexContent>
               <extension base="vim25:OvfConnectedDevice">
                  <sequence>
                     <element name="filename" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfConnectedDeviceFloppyFault" type="vim25:OvfConnectedDeviceFloppy"/>
         <complexType name="OvfConnectedDeviceIso">
            <complexContent>
               <extension base="vim25:OvfConnectedDevice">
                  <sequence>
                     <element name="filename" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfConnectedDeviceIsoFault" type="vim25:OvfConnectedDeviceIso"/>
         <complexType name="OvfDiskMappingNotFound">
            <complexContent>
               <extension base="vim25:OvfSystemFault">
                  <sequence>
                     <element name="diskName" type="xsd:string" />
                     <element name="vmName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfDiskMappingNotFoundFault" type="vim25:OvfDiskMappingNotFound"/>
         <complexType name="OvfDuplicateElement">
            <complexContent>
               <extension base="vim25:OvfElement">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfDuplicateElementFault" type="vim25:OvfDuplicateElement"/>
         <complexType name="OvfDuplicatedElementBoundary">
            <complexContent>
               <extension base="vim25:OvfElement">
                  <sequence>
                     <element name="boundary" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfDuplicatedElementBoundaryFault" type="vim25:OvfDuplicatedElementBoundary"/>
         <complexType name="OvfElement">
            <complexContent>
               <extension base="vim25:OvfInvalidPackage">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfElementFault" type="vim25:OvfElement"/>
         <complexType name="OvfElementInvalidValue">
            <complexContent>
               <extension base="vim25:OvfElement">
                  <sequence>
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfElementInvalidValueFault" type="vim25:OvfElementInvalidValue"/>
         <complexType name="OvfExport">
            <complexContent>
               <extension base="vim25:OvfFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfExportFault" type="vim25:OvfExport"/>
         <complexType name="OvfFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfFaultFault" type="vim25:OvfFault"/>
         <complexType name="OvfHardwareCheck">
            <complexContent>
               <extension base="vim25:OvfImport">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfHardwareCheckFault" type="vim25:OvfHardwareCheck"/>
         <complexType name="OvfHardwareExport">
            <complexContent>
               <extension base="vim25:OvfExport">
                  <sequence>
                     <element name="device" type="vim25:VirtualDevice" minOccurs="0" />
                     <element name="vmPath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfHardwareExportFault" type="vim25:OvfHardwareExport"/>
         <complexType name="OvfHostValueNotParsed">
            <complexContent>
               <extension base="vim25:OvfSystemFault">
                  <sequence>
                     <element name="property" type="xsd:string" />
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfHostValueNotParsedFault" type="vim25:OvfHostValueNotParsed"/>
         <complexType name="OvfImport">
            <complexContent>
               <extension base="vim25:OvfFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfImportFault" type="vim25:OvfImport"/>
         <complexType name="OvfInvalidPackage">
            <complexContent>
               <extension base="vim25:OvfFault">
                  <sequence>
                     <element name="lineNumber" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfInvalidPackageFault" type="vim25:OvfInvalidPackage"/>
         <complexType name="OvfInvalidValue">
            <complexContent>
               <extension base="vim25:OvfAttribute">
                  <sequence>
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfInvalidValueFault" type="vim25:OvfInvalidValue"/>
         <complexType name="OvfInvalidValueConfiguration">
            <complexContent>
               <extension base="vim25:OvfInvalidValue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfInvalidValueConfigurationFault" type="vim25:OvfInvalidValueConfiguration"/>
         <complexType name="OvfInvalidValueEmpty">
            <complexContent>
               <extension base="vim25:OvfInvalidValue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfInvalidValueEmptyFault" type="vim25:OvfInvalidValueEmpty"/>
         <complexType name="OvfInvalidValueFormatMalformed">
            <complexContent>
               <extension base="vim25:OvfInvalidValue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfInvalidValueFormatMalformedFault" type="vim25:OvfInvalidValueFormatMalformed"/>
         <complexType name="OvfInvalidValueReference">
            <complexContent>
               <extension base="vim25:OvfInvalidValue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfInvalidValueReferenceFault" type="vim25:OvfInvalidValueReference"/>
         <complexType name="OvfInvalidVmName">
            <complexContent>
               <extension base="vim25:OvfUnsupportedPackage">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfInvalidVmNameFault" type="vim25:OvfInvalidVmName"/>
         <complexType name="OvfMappedOsId">
            <complexContent>
               <extension base="vim25:OvfImport">
                  <sequence>
                     <element name="ovfId" type="xsd:int" />
                     <element name="ovfDescription" type="xsd:string" />
                     <element name="targetDescription" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfMappedOsIdFault" type="vim25:OvfMappedOsId"/>
         <complexType name="OvfMissingAttribute">
            <complexContent>
               <extension base="vim25:OvfAttribute">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfMissingAttributeFault" type="vim25:OvfMissingAttribute"/>
         <complexType name="OvfMissingElement">
            <complexContent>
               <extension base="vim25:OvfElement">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfMissingElementFault" type="vim25:OvfMissingElement"/>
         <complexType name="OvfMissingElementNormalBoundary">
            <complexContent>
               <extension base="vim25:OvfMissingElement">
                  <sequence>
                     <element name="boundary" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfMissingElementNormalBoundaryFault" type="vim25:OvfMissingElementNormalBoundary"/>
         <complexType name="OvfMissingHardware">
            <complexContent>
               <extension base="vim25:OvfImport">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="resourceType" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfMissingHardwareFault" type="vim25:OvfMissingHardware"/>
         <complexType name="OvfNoHostNic">
            <complexContent>
               <extension base="vim25:OvfUnsupportedPackage">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfNoHostNicFault" type="vim25:OvfNoHostNic"/>
         <complexType name="OvfNoSupportedHardwareFamily">
            <complexContent>
               <extension base="vim25:OvfUnsupportedPackage">
                  <sequence>
                     <element name="version" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfNoSupportedHardwareFamilyFault" type="vim25:OvfNoSupportedHardwareFamily"/>
         <complexType name="OvfProperty">
            <complexContent>
               <extension base="vim25:OvfInvalidPackage">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfPropertyFault" type="vim25:OvfProperty"/>
         <complexType name="OvfPropertyExport">
            <complexContent>
               <extension base="vim25:OvfExport">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfPropertyExportFault" type="vim25:OvfPropertyExport"/>
         <complexType name="OvfPropertyNetwork">
            <complexContent>
               <extension base="vim25:OvfProperty">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfPropertyNetworkFault" type="vim25:OvfPropertyNetwork"/>
         <complexType name="OvfPropertyQualifier">
            <complexContent>
               <extension base="vim25:OvfProperty">
                  <sequence>
                     <element name="qualifier" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfPropertyQualifierFault" type="vim25:OvfPropertyQualifier"/>
         <complexType name="OvfPropertyQualifierDuplicate">
            <complexContent>
               <extension base="vim25:OvfProperty">
                  <sequence>
                     <element name="qualifier" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfPropertyQualifierDuplicateFault" type="vim25:OvfPropertyQualifierDuplicate"/>
         <complexType name="OvfPropertyQualifierIgnored">
            <complexContent>
               <extension base="vim25:OvfProperty">
                  <sequence>
                     <element name="qualifier" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfPropertyQualifierIgnoredFault" type="vim25:OvfPropertyQualifierIgnored"/>
         <complexType name="OvfPropertyType">
            <complexContent>
               <extension base="vim25:OvfProperty">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfPropertyTypeFault" type="vim25:OvfPropertyType"/>
         <complexType name="OvfPropertyValue">
            <complexContent>
               <extension base="vim25:OvfProperty">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfPropertyValueFault" type="vim25:OvfPropertyValue"/>
         <complexType name="OvfSystemFault">
            <complexContent>
               <extension base="vim25:OvfFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfSystemFaultFault" type="vim25:OvfSystemFault"/>
         <complexType name="OvfToXmlUnsupportedElement">
            <complexContent>
               <extension base="vim25:OvfSystemFault">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfToXmlUnsupportedElementFault" type="vim25:OvfToXmlUnsupportedElement"/>
         <complexType name="OvfUnableToExportDisk">
            <complexContent>
               <extension base="vim25:OvfHardwareExport">
                  <sequence>
                     <element name="diskName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnableToExportDiskFault" type="vim25:OvfUnableToExportDisk"/>
         <complexType name="OvfUnexpectedElement">
            <complexContent>
               <extension base="vim25:OvfElement">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnexpectedElementFault" type="vim25:OvfUnexpectedElement"/>
         <complexType name="OvfUnknownDevice">
            <complexContent>
               <extension base="vim25:OvfSystemFault">
                  <sequence>
                     <element name="device" type="vim25:VirtualDevice" minOccurs="0" />
                     <element name="vmName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnknownDeviceFault" type="vim25:OvfUnknownDevice"/>
         <complexType name="OvfUnknownDeviceBacking">
            <complexContent>
               <extension base="vim25:OvfHardwareExport">
                  <sequence>
                     <element name="backing" type="vim25:VirtualDeviceBackingInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnknownDeviceBackingFault" type="vim25:OvfUnknownDeviceBacking"/>
         <complexType name="OvfUnknownEntity">
            <complexContent>
               <extension base="vim25:OvfSystemFault">
                  <sequence>
                     <element name="lineNumber" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnknownEntityFault" type="vim25:OvfUnknownEntity"/>
         <complexType name="OvfUnsupportedAttribute">
            <complexContent>
               <extension base="vim25:OvfUnsupportedPackage">
                  <sequence>
                     <element name="elementName" type="xsd:string" />
                     <element name="attributeName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedAttributeFault" type="vim25:OvfUnsupportedAttribute"/>
         <complexType name="OvfUnsupportedAttributeValue">
            <complexContent>
               <extension base="vim25:OvfUnsupportedAttribute">
                  <sequence>
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedAttributeValueFault" type="vim25:OvfUnsupportedAttributeValue"/>
         <complexType name="OvfUnsupportedDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:OvfSystemFault">
                  <sequence>
                     <element name="elementName" type="xsd:string" minOccurs="0" />
                     <element name="instanceId" type="xsd:string" minOccurs="0" />
                     <element name="deviceName" type="xsd:string" />
                     <element name="backingName" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedDeviceBackingInfoFault" type="vim25:OvfUnsupportedDeviceBackingInfo"/>
         <complexType name="OvfUnsupportedDeviceBackingOption">
            <complexContent>
               <extension base="vim25:OvfSystemFault">
                  <sequence>
                     <element name="elementName" type="xsd:string" minOccurs="0" />
                     <element name="instanceId" type="xsd:string" minOccurs="0" />
                     <element name="deviceName" type="xsd:string" />
                     <element name="backingName" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedDeviceBackingOptionFault" type="vim25:OvfUnsupportedDeviceBackingOption"/>
         <complexType name="OvfUnsupportedDeviceExport">
            <complexContent>
               <extension base="vim25:OvfHardwareExport">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedDeviceExportFault" type="vim25:OvfUnsupportedDeviceExport"/>
         <complexType name="OvfUnsupportedElement">
            <complexContent>
               <extension base="vim25:OvfUnsupportedPackage">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedElementFault" type="vim25:OvfUnsupportedElement"/>
         <complexType name="OvfUnsupportedElementValue">
            <complexContent>
               <extension base="vim25:OvfUnsupportedElement">
                  <sequence>
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedElementValueFault" type="vim25:OvfUnsupportedElementValue"/>
         <complexType name="OvfUnsupportedPackage">
            <complexContent>
               <extension base="vim25:OvfFault">
                  <sequence>
                     <element name="lineNumber" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedPackageFault" type="vim25:OvfUnsupportedPackage"/>
         <complexType name="OvfUnsupportedSection">
            <complexContent>
               <extension base="vim25:OvfUnsupportedElement">
                  <sequence>
                     <element name="info" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedSectionFault" type="vim25:OvfUnsupportedSection"/>
         <complexType name="OvfUnsupportedSubType">
            <complexContent>
               <extension base="vim25:OvfUnsupportedPackage">
                  <sequence>
                     <element name="elementName" type="xsd:string" />
                     <element name="instanceId" type="xsd:string" />
                     <element name="deviceType" type="xsd:int" />
                     <element name="deviceSubType" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedSubTypeFault" type="vim25:OvfUnsupportedSubType"/>
         <complexType name="OvfUnsupportedType">
            <complexContent>
               <extension base="vim25:OvfUnsupportedPackage">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="instanceId" type="xsd:string" />
                     <element name="deviceType" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfUnsupportedTypeFault" type="vim25:OvfUnsupportedType"/>
         <complexType name="OvfWrongElement">
            <complexContent>
               <extension base="vim25:OvfElement">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfWrongElementFault" type="vim25:OvfWrongElement"/>
         <complexType name="OvfWrongNamespace">
            <complexContent>
               <extension base="vim25:OvfInvalidPackage">
                  <sequence>
                     <element name="namespaceName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfWrongNamespaceFault" type="vim25:OvfWrongNamespace"/>
         <complexType name="OvfXmlFormat">
            <complexContent>
               <extension base="vim25:OvfInvalidPackage">
                  <sequence>
                     <element name="description" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="OvfXmlFormatFault" type="vim25:OvfXmlFormat"/>
         <complexType name="PatchAlreadyInstalled">
            <complexContent>
               <extension base="vim25:PatchNotApplicable">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PatchAlreadyInstalledFault" type="vim25:PatchAlreadyInstalled"/>
         <complexType name="PatchBinariesNotFound">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="patchID" type="xsd:string" />
                     <element name="binary" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PatchBinariesNotFoundFault" type="vim25:PatchBinariesNotFound"/>
         <complexType name="PatchInstallFailed">
            <complexContent>
               <extension base="vim25:PlatformConfigFault">
                  <sequence>
                     <element name="rolledBack" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PatchInstallFailedFault" type="vim25:PatchInstallFailed"/>
         <complexType name="PatchIntegrityError">
            <complexContent>
               <extension base="vim25:PlatformConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PatchIntegrityErrorFault" type="vim25:PatchIntegrityError"/>
         <complexType name="PatchMetadataCorrupted">
            <complexContent>
               <extension base="vim25:PatchMetadataInvalid">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PatchMetadataCorruptedFault" type="vim25:PatchMetadataCorrupted"/>
         <complexType name="PatchMetadataInvalid">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="patchID" type="xsd:string" />
                     <element name="metaData" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PatchMetadataInvalidFault" type="vim25:PatchMetadataInvalid"/>
         <complexType name="PatchMetadataNotFound">
            <complexContent>
               <extension base="vim25:PatchMetadataInvalid">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PatchMetadataNotFoundFault" type="vim25:PatchMetadataNotFound"/>
         <complexType name="PatchMissingDependencies">
            <complexContent>
               <extension base="vim25:PatchNotApplicable">
                  <sequence>
                     <element name="prerequisitePatch" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="prerequisiteLib" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PatchMissingDependenciesFault" type="vim25:PatchMissingDependencies"/>
         <complexType name="PatchNotApplicable">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="patchID" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PatchNotApplicableFault" type="vim25:PatchNotApplicable"/>
         <complexType name="PatchSuperseded">
            <complexContent>
               <extension base="vim25:PatchNotApplicable">
                  <sequence>
                     <element name="supersede" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PatchSupersededFault" type="vim25:PatchSuperseded"/>
         <complexType name="PhysCompatRDMNotSupported">
            <complexContent>
               <extension base="vim25:RDMNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PhysCompatRDMNotSupportedFault" type="vim25:PhysCompatRDMNotSupported"/>
         <complexType name="PlatformConfigFault">
            <complexContent>
               <extension base="vim25:HostConfigFault">
                  <sequence>
                     <element name="text" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PlatformConfigFaultFault" type="vim25:PlatformConfigFault"/>
         <complexType name="PowerOnFtSecondaryFailed">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" />
                     <element name="vmName" type="xsd:string" />
                     <element name="hostSelectionBy" type="vim25:FtIssuesOnHostHostSelectionType" />
                     <element name="hostErrors" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                     <element name="rootCause" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PowerOnFtSecondaryFailedFault" type="vim25:PowerOnFtSecondaryFailed"/>
         <complexType name="PowerOnFtSecondaryTimedout">
            <complexContent>
               <extension base="vim25:Timedout">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" />
                     <element name="vmName" type="xsd:string" />
                     <element name="timeout" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="PowerOnFtSecondaryTimedoutFault" type="vim25:PowerOnFtSecondaryTimedout"/>
         <complexType name="ProfileUpdateFailedUpdateFailure">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="profilePath" type="vim25:ProfilePropertyPath" />
                     <element name="errMsg" type="vim25:LocalizableMessage" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfileUpdateFailedUpdateFailure">
            <sequence>
               <element name="ProfileUpdateFailedUpdateFailure" type="vim25:ProfileUpdateFailedUpdateFailure" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProfileUpdateFailed">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="failure" type="vim25:ProfileUpdateFailedUpdateFailure" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ProfileUpdateFailedFault" type="vim25:ProfileUpdateFailed"/>
         <complexType name="RDMConversionNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="device" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RDMConversionNotSupportedFault" type="vim25:RDMConversionNotSupported"/>
         <complexType name="RDMNotPreserved">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="device" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RDMNotPreservedFault" type="vim25:RDMNotPreserved"/>
         <complexType name="RDMNotSupported">
            <complexContent>
               <extension base="vim25:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RDMNotSupportedFault" type="vim25:RDMNotSupported"/>
         <complexType name="RDMNotSupportedOnDatastore">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="datastore" type="vim25:ManagedObjectReference" />
                     <element name="datastoreName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RDMNotSupportedOnDatastoreFault" type="vim25:RDMNotSupportedOnDatastore"/>
         <complexType name="RDMPointsToInaccessibleDisk">
            <complexContent>
               <extension base="vim25:CannotAccessVmDisk">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RDMPointsToInaccessibleDiskFault" type="vim25:RDMPointsToInaccessibleDisk"/>
         <complexType name="RawDiskNotSupported">
            <complexContent>
               <extension base="vim25:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RawDiskNotSupportedFault" type="vim25:RawDiskNotSupported"/>
         <complexType name="ReadOnlyDisksWithLegacyDestination">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="roDiskCount" type="xsd:int" />
                     <element name="timeoutDanger" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ReadOnlyDisksWithLegacyDestinationFault" type="vim25:ReadOnlyDisksWithLegacyDestination"/>
         <complexType name="RebootRequired">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="patch" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RebootRequiredFault" type="vim25:RebootRequired"/>
         <complexType name="RecordReplayDisabled">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RecordReplayDisabledFault" type="vim25:RecordReplayDisabled"/>
         <complexType name="RemoteDeviceNotSupported">
            <complexContent>
               <extension base="vim25:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RemoteDeviceNotSupportedFault" type="vim25:RemoteDeviceNotSupported"/>
         <complexType name="RemoveFailed">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RemoveFailedFault" type="vim25:RemoveFailed"/>
         <complexType name="ResourceInUse">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="type" type="xsd:string" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ResourceInUseFault" type="vim25:ResourceInUse"/>
         <complexType name="ResourceNotAvailable">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="containerType" type="xsd:string" minOccurs="0" />
                     <element name="containerName" type="xsd:string" minOccurs="0" />
                     <element name="type" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ResourceNotAvailableFault" type="vim25:ResourceNotAvailable"/>
         <complexType name="RestrictedVersion">
            <complexContent>
               <extension base="vim25:SecurityError">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RestrictedVersionFault" type="vim25:RestrictedVersion"/>
         <complexType name="RuleViolation">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="rule" type="vim25:ClusterRuleInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="RuleViolationFault" type="vim25:RuleViolation"/>
         <complexType name="SSLDisabledFault">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SSLDisabledFaultFault" type="vim25:SSLDisabledFault"/>
         <complexType name="SSLVerifyFault">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                     <element name="selfSigned" type="xsd:boolean" />
                     <element name="thumbprint" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SSLVerifyFaultFault" type="vim25:SSLVerifyFault"/>
         <complexType name="SSPIChallenge">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="base64Token" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SSPIChallengeFault" type="vim25:SSPIChallenge"/>
         <complexType name="SecondaryVmAlreadyDisabled">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="instanceUuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SecondaryVmAlreadyDisabledFault" type="vim25:SecondaryVmAlreadyDisabled"/>
         <complexType name="SecondaryVmAlreadyEnabled">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="instanceUuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SecondaryVmAlreadyEnabledFault" type="vim25:SecondaryVmAlreadyEnabled"/>
         <complexType name="SecondaryVmAlreadyRegistered">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="instanceUuid" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SecondaryVmAlreadyRegisteredFault" type="vim25:SecondaryVmAlreadyRegistered"/>
         <complexType name="SecondaryVmNotRegistered">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="instanceUuid" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SecondaryVmNotRegisteredFault" type="vim25:SecondaryVmNotRegistered"/>
         <complexType name="SharedBusControllerNotSupported">
            <complexContent>
               <extension base="vim25:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SharedBusControllerNotSupportedFault" type="vim25:SharedBusControllerNotSupported"/>
         <complexType name="SnapshotCloneNotSupported">
            <complexContent>
               <extension base="vim25:SnapshotCopyNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotCloneNotSupportedFault" type="vim25:SnapshotCloneNotSupported"/>
         <complexType name="SnapshotCopyNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotCopyNotSupportedFault" type="vim25:SnapshotCopyNotSupported"/>
         <complexType name="SnapshotDisabled">
            <complexContent>
               <extension base="vim25:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotDisabledFault" type="vim25:SnapshotDisabled"/>
         <complexType name="SnapshotFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotFaultFault" type="vim25:SnapshotFault"/>
         <complexType name="SnapshotIncompatibleDeviceInVm">
            <complexContent>
               <extension base="vim25:SnapshotFault">
                  <sequence>
                     <element name="fault" type="vim25:LocalizedMethodFault" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotIncompatibleDeviceInVmFault" type="vim25:SnapshotIncompatibleDeviceInVm"/>
         <complexType name="SnapshotLocked">
            <complexContent>
               <extension base="vim25:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotLockedFault" type="vim25:SnapshotLocked"/>
         <complexType name="SnapshotMoveFromNonHomeNotSupported">
            <complexContent>
               <extension base="vim25:SnapshotCopyNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotMoveFromNonHomeNotSupportedFault" type="vim25:SnapshotMoveFromNonHomeNotSupported"/>
         <complexType name="SnapshotMoveNotSupported">
            <complexContent>
               <extension base="vim25:SnapshotCopyNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotMoveNotSupportedFault" type="vim25:SnapshotMoveNotSupported"/>
         <complexType name="SnapshotMoveToNonHomeNotSupported">
            <complexContent>
               <extension base="vim25:SnapshotCopyNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotMoveToNonHomeNotSupportedFault" type="vim25:SnapshotMoveToNonHomeNotSupported"/>
         <complexType name="SnapshotNoChange">
            <complexContent>
               <extension base="vim25:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotNoChangeFault" type="vim25:SnapshotNoChange"/>
         <complexType name="SnapshotRevertIssue">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="snapshotName" type="xsd:string" minOccurs="0" />
                     <element name="event" type="vim25:Event" minOccurs="0" maxOccurs="unbounded" />
                     <element name="errors" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SnapshotRevertIssueFault" type="vim25:SnapshotRevertIssue"/>
         <complexType name="StorageVMotionNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFeatureNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="StorageVMotionNotSupportedFault" type="vim25:StorageVMotionNotSupported"/>
         <complexType name="SuspendedRelocateNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SuspendedRelocateNotSupportedFault" type="vim25:SuspendedRelocateNotSupported"/>
         <complexType name="SwapDatastoreNotWritableOnHost">
            <complexContent>
               <extension base="vim25:DatastoreNotWritableOnHost">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SwapDatastoreNotWritableOnHostFault" type="vim25:SwapDatastoreNotWritableOnHost"/>
         <complexType name="SwapDatastoreUnset">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SwapDatastoreUnsetFault" type="vim25:SwapDatastoreUnset"/>
         <complexType name="SwapPlacementOverrideNotSupported">
            <complexContent>
               <extension base="vim25:InvalidVmConfig">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SwapPlacementOverrideNotSupportedFault" type="vim25:SwapPlacementOverrideNotSupported"/>
         <complexType name="SwitchNotInUpgradeMode">
            <complexContent>
               <extension base="vim25:DvsFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="SwitchNotInUpgradeModeFault" type="vim25:SwitchNotInUpgradeMode"/>
         <complexType name="TaskInProgress">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="task" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TaskInProgressFault" type="vim25:TaskInProgress"/>
         <complexType name="Timedout">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TimedoutFault" type="vim25:Timedout"/>
         <complexType name="TooManyConsecutiveOverrides">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TooManyConsecutiveOverridesFault" type="vim25:TooManyConsecutiveOverrides"/>
         <complexType name="TooManyDevices">
            <complexContent>
               <extension base="vim25:InvalidVmConfig">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TooManyDevicesFault" type="vim25:TooManyDevices"/>
         <complexType name="TooManyDisksOnLegacyHost">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="diskCount" type="xsd:int" />
                     <element name="timeoutDanger" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TooManyDisksOnLegacyHostFault" type="vim25:TooManyDisksOnLegacyHost"/>
         <complexType name="TooManyHosts">
            <complexContent>
               <extension base="vim25:HostConnectFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TooManyHostsFault" type="vim25:TooManyHosts"/>
         <complexType name="TooManySnapshotLevels">
            <complexContent>
               <extension base="vim25:SnapshotFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="TooManySnapshotLevelsFault" type="vim25:TooManySnapshotLevels"/>
         <complexType name="ToolsAlreadyUpgraded">
            <complexContent>
               <extension base="vim25:VmToolsUpgradeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ToolsAlreadyUpgradedFault" type="vim25:ToolsAlreadyUpgraded"/>
         <complexType name="ToolsAutoUpgradeNotSupported">
            <complexContent>
               <extension base="vim25:VmToolsUpgradeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ToolsAutoUpgradeNotSupportedFault" type="vim25:ToolsAutoUpgradeNotSupported"/>
         <complexType name="ToolsImageNotAvailable">
            <complexContent>
               <extension base="vim25:VmToolsUpgradeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ToolsImageNotAvailableFault" type="vim25:ToolsImageNotAvailable"/>
         <complexType name="ToolsImageSignatureCheckFailed">
            <complexContent>
               <extension base="vim25:VmToolsUpgradeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ToolsImageSignatureCheckFailedFault" type="vim25:ToolsImageSignatureCheckFailed"/>
         <complexType name="ToolsInstallationInProgress">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ToolsInstallationInProgressFault" type="vim25:ToolsInstallationInProgress"/>
         <complexType name="ToolsUnavailable">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ToolsUnavailableFault" type="vim25:ToolsUnavailable"/>
         <complexType name="ToolsUpgradeCancelled">
            <complexContent>
               <extension base="vim25:VmToolsUpgradeFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="ToolsUpgradeCancelledFault" type="vim25:ToolsUpgradeCancelled"/>
         <complexType name="UncommittedUndoableDisk">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UncommittedUndoableDiskFault" type="vim25:UncommittedUndoableDisk"/>
         <complexType name="UnconfiguredPropertyValue">
            <complexContent>
               <extension base="vim25:InvalidPropertyValue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnconfiguredPropertyValueFault" type="vim25:UnconfiguredPropertyValue"/>
         <complexType name="UncustomizableGuest">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                     <element name="uncustomizableGuestOS" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UncustomizableGuestFault" type="vim25:UncustomizableGuest"/>
         <complexType name="UnexpectedCustomizationFault">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnexpectedCustomizationFaultFault" type="vim25:UnexpectedCustomizationFault"/>
         <complexType name="UnrecognizedHost">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="hostName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnrecognizedHostFault" type="vim25:UnrecognizedHost"/>
         <complexType name="UnsharedSwapVMotionNotSupported">
            <complexContent>
               <extension base="vim25:MigrationFeatureNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnsharedSwapVMotionNotSupportedFault" type="vim25:UnsharedSwapVMotionNotSupported"/>
         <complexType name="UnsupportedDatastore">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                     <element name="datastore" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnsupportedDatastoreFault" type="vim25:UnsupportedDatastore"/>
         <complexType name="UnsupportedGuest">
            <complexContent>
               <extension base="vim25:InvalidVmConfig">
                  <sequence>
                     <element name="unsupportedGuestOS" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnsupportedGuestFault" type="vim25:UnsupportedGuest"/>
         <complexType name="UnsupportedVimApiVersion">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="version" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnsupportedVimApiVersionFault" type="vim25:UnsupportedVimApiVersion"/>
         <complexType name="UnsupportedVmxLocation">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnsupportedVmxLocationFault" type="vim25:UnsupportedVmxLocation"/>
         <complexType name="UnusedVirtualDiskBlocksNotScrubbed">
            <complexContent>
               <extension base="vim25:DeviceBackingNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UnusedVirtualDiskBlocksNotScrubbedFault" type="vim25:UnusedVirtualDiskBlocksNotScrubbed"/>
         <complexType name="UserNotFound">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="principal" type="xsd:string" />
                     <element name="unresolved" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="UserNotFoundFault" type="vim25:UserNotFound"/>
         <complexType name="VAppConfigFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VAppConfigFaultFault" type="vim25:VAppConfigFault"/>
         <complexType name="VAppNotRunning">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VAppNotRunningFault" type="vim25:VAppNotRunning"/>
         <complexType name="VAppPropertyFault">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="category" type="xsd:string" />
                     <element name="label" type="xsd:string" />
                     <element name="type" type="xsd:string" />
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VAppPropertyFaultFault" type="vim25:VAppPropertyFault"/>
         <complexType name="VAppTaskInProgress">
            <complexContent>
               <extension base="vim25:TaskInProgress">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VAppTaskInProgressFault" type="vim25:VAppTaskInProgress"/>
         <complexType name="VMINotSupported">
            <complexContent>
               <extension base="vim25:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMINotSupportedFault" type="vim25:VMINotSupported"/>
         <complexType name="VMOnConflictDVPort">
            <complexContent>
               <extension base="vim25:CannotAccessNetwork">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMOnConflictDVPortFault" type="vim25:VMOnConflictDVPort"/>
         <complexType name="VMOnVirtualIntranet">
            <complexContent>
               <extension base="vim25:CannotAccessNetwork">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMOnVirtualIntranetFault" type="vim25:VMOnVirtualIntranet"/>
         <complexType name="VMotionInterfaceIssue">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                     <element name="atSourceHost" type="xsd:boolean" />
                     <element name="failedHost" type="xsd:string" />
                     <element name="failedHostEntity" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionInterfaceIssueFault" type="vim25:VMotionInterfaceIssue"/>
         <complexType name="VMotionLinkCapacityLow">
            <complexContent>
               <extension base="vim25:VMotionInterfaceIssue">
                  <sequence>
                     <element name="network" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionLinkCapacityLowFault" type="vim25:VMotionLinkCapacityLow"/>
         <complexType name="VMotionLinkDown">
            <complexContent>
               <extension base="vim25:VMotionInterfaceIssue">
                  <sequence>
                     <element name="network" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionLinkDownFault" type="vim25:VMotionLinkDown"/>
         <complexType name="VMotionNotConfigured">
            <complexContent>
               <extension base="vim25:VMotionInterfaceIssue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionNotConfiguredFault" type="vim25:VMotionNotConfigured"/>
         <complexType name="VMotionNotLicensed">
            <complexContent>
               <extension base="vim25:VMotionInterfaceIssue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionNotLicensedFault" type="vim25:VMotionNotLicensed"/>
         <complexType name="VMotionNotSupported">
            <complexContent>
               <extension base="vim25:VMotionInterfaceIssue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionNotSupportedFault" type="vim25:VMotionNotSupported"/>
         <complexType name="VMotionProtocolIncompatible">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VMotionProtocolIncompatibleFault" type="vim25:VMotionProtocolIncompatible"/>
         <complexType name="VimFault">
            <complexContent>
               <extension base="vim25:MethodFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VimFaultFault" type="vim25:VimFault"/>
         <complexType name="VirtualDiskBlocksNotFullyProvisioned">
            <complexContent>
               <extension base="vim25:DeviceBackingNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VirtualDiskBlocksNotFullyProvisionedFault" type="vim25:VirtualDiskBlocksNotFullyProvisioned"/>
         <complexType name="VirtualEthernetCardNotSupported">
            <complexContent>
               <extension base="vim25:DeviceNotSupported">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VirtualEthernetCardNotSupportedFault" type="vim25:VirtualEthernetCardNotSupported"/>
         <complexType name="VirtualHardwareCompatibilityIssue">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VirtualHardwareCompatibilityIssueFault" type="vim25:VirtualHardwareCompatibilityIssue"/>
         <complexType name="VirtualHardwareVersionNotSupported">
            <complexContent>
               <extension base="vim25:VirtualHardwareCompatibilityIssue">
                  <sequence>
                     <element name="hostName" type="xsd:string" />
                     <element name="host" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VirtualHardwareVersionNotSupportedFault" type="vim25:VirtualHardwareVersionNotSupported"/>
         <complexType name="VmAlreadyExistsInDatacenter">
            <complexContent>
               <extension base="vim25:InvalidFolder">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="hostname" type="xsd:string" />
                     <element name="vm" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmAlreadyExistsInDatacenterFault" type="vim25:VmAlreadyExistsInDatacenter"/>
         <complexType name="VmConfigFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmConfigFaultFault" type="vim25:VmConfigFault"/>
         <complexType name="VmConfigIncompatibleForFaultTolerance">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                     <element name="fault" type="vim25:LocalizedMethodFault" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmConfigIncompatibleForFaultToleranceFault" type="vim25:VmConfigIncompatibleForFaultTolerance"/>
         <complexType name="VmConfigIncompatibleForRecordReplay">
            <complexContent>
               <extension base="vim25:VmConfigFault">
                  <sequence>
                     <element name="fault" type="vim25:LocalizedMethodFault" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmConfigIncompatibleForRecordReplayFault" type="vim25:VmConfigIncompatibleForRecordReplay"/>
         <simpleType name="VmFaultToleranceConfigIssueReasonForIssue">
            <restriction base="xsd:string">
               <enumeration value="haNotEnabled" />
               <enumeration value="moreThanOneSecondary" />
               <enumeration value="recordReplayNotSupported" />
               <enumeration value="replayNotSupported" />
               <enumeration value="templateVm" />
               <enumeration value="multipleVCPU" />
               <enumeration value="hostInactive" />
               <enumeration value="ftUnsupportedHardware" />
               <enumeration value="ftUnsupportedProduct" />
               <enumeration value="missingVMotionNic" />
               <enumeration value="missingFTLoggingNic" />
               <enumeration value="thinDisk" />
               <enumeration value="verifySSLCertificateFlagNotSet" />
               <enumeration value="hasSnapshots" />
               <enumeration value="noConfig" />
               <enumeration value="ftSecondaryVm" />
               <enumeration value="hasLocalDisk" />
            </restriction>
         </simpleType>
         <complexType name="VmFaultToleranceConfigIssue">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="reason" type="xsd:string" minOccurs="0" />
                     <element name="entityName" type="xsd:string" minOccurs="0" />
                     <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmFaultToleranceConfigIssueFault" type="vim25:VmFaultToleranceConfigIssue"/>
         <simpleType name="VmFaultToleranceInvalidFileBackingDeviceType">
            <restriction base="xsd:string">
               <enumeration value="virtualFloppy" />
               <enumeration value="virtualCdrom" />
               <enumeration value="virtualSerialPort" />
               <enumeration value="virtualParallelPort" />
               <enumeration value="virtualDisk" />
            </restriction>
         </simpleType>
         <complexType name="VmFaultToleranceInvalidFileBacking">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="backingType" type="xsd:string" minOccurs="0" />
                     <element name="backingFilename" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmFaultToleranceInvalidFileBackingFault" type="vim25:VmFaultToleranceInvalidFileBacking"/>
         <complexType name="VmFaultToleranceIssue">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmFaultToleranceIssueFault" type="vim25:VmFaultToleranceIssue"/>
         <complexType name="VmFaultToleranceOpIssuesList">
            <complexContent>
               <extension base="vim25:VmFaultToleranceIssue">
                  <sequence>
                     <element name="errors" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                     <element name="warnings" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmFaultToleranceOpIssuesListFault" type="vim25:VmFaultToleranceOpIssuesList"/>
         <complexType name="VmLimitLicense">
            <complexContent>
               <extension base="vim25:NotEnoughLicenses">
                  <sequence>
                     <element name="limit" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmLimitLicenseFault" type="vim25:VmLimitLicense"/>
         <complexType name="VmPowerOnDisabled">
            <complexContent>
               <extension base="vim25:InvalidState">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmPowerOnDisabledFault" type="vim25:VmPowerOnDisabled"/>
         <complexType name="VmToolsUpgradeFault">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmToolsUpgradeFaultFault" type="vim25:VmToolsUpgradeFault"/>
         <complexType name="VmValidateMaxDevice">
            <complexContent>
               <extension base="vim25:VimFault">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="max" type="xsd:int" />
                     <element name="count" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmValidateMaxDeviceFault" type="vim25:VmValidateMaxDevice"/>
         <complexType name="VmWwnConflict">
            <complexContent>
               <extension base="vim25:InvalidVmConfig">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="wwn" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmWwnConflictFault" type="vim25:VmWwnConflict"/>
         <complexType name="VmfsAlreadyMounted">
            <complexContent>
               <extension base="vim25:VmfsMountFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmfsAlreadyMountedFault" type="vim25:VmfsAlreadyMounted"/>
         <complexType name="VmfsAmbiguousMount">
            <complexContent>
               <extension base="vim25:VmfsMountFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmfsAmbiguousMountFault" type="vim25:VmfsAmbiguousMount"/>
         <complexType name="VmfsMountFault">
            <complexContent>
               <extension base="vim25:HostConfigFault">
                  <sequence>
                     <element name="uuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmfsMountFaultFault" type="vim25:VmfsMountFault"/>
         <complexType name="VmotionInterfaceNotEnabled">
            <complexContent>
               <extension base="vim25:HostPowerOpFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VmotionInterfaceNotEnabledFault" type="vim25:VmotionInterfaceNotEnabled"/>
         <complexType name="VolumeEditorError">
            <complexContent>
               <extension base="vim25:CustomizationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="VolumeEditorErrorFault" type="vim25:VolumeEditorError"/>
         <complexType name="WakeOnLanNotSupported">
            <complexContent>
               <extension base="vim25:VirtualHardwareCompatibilityIssue">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="WakeOnLanNotSupportedFault" type="vim25:WakeOnLanNotSupported"/>
         <complexType name="WakeOnLanNotSupportedByVmotionNIC">
            <complexContent>
               <extension base="vim25:HostPowerOpFailed">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="WakeOnLanNotSupportedByVmotionNICFault" type="vim25:WakeOnLanNotSupportedByVmotionNIC"/>
         <complexType name="WillModifyConfigCpuRequirements">
            <complexContent>
               <extension base="vim25:MigrationFault">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <element name="WillModifyConfigCpuRequirementsFault" type="vim25:WillModifyConfigCpuRequirements"/>
         <simpleType name="AutoStartAction">
            <restriction base="xsd:string">
               <enumeration value="none" />
               <enumeration value="systemDefault" />
               <enumeration value="powerOn" />
               <enumeration value="powerOff" />
               <enumeration value="guestShutdown" />
               <enumeration value="suspend" />
            </restriction>
         </simpleType>
         <complexType name="AutoStartDefaults">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="startDelay" type="xsd:int" minOccurs="0" />
                     <element name="stopDelay" type="xsd:int" minOccurs="0" />
                     <element name="waitForHeartbeat" type="xsd:boolean" minOccurs="0" />
                     <element name="stopAction" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="AutoStartWaitHeartbeatSetting">
            <restriction base="xsd:string">
               <enumeration value="yes" />
               <enumeration value="no" />
               <enumeration value="systemDefault" />
            </restriction>
         </simpleType>
         <complexType name="AutoStartPowerInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="vim25:ManagedObjectReference" />
                     <element name="startOrder" type="xsd:int" />
                     <element name="startDelay" type="xsd:int" />
                     <element name="waitForHeartbeat" type="vim25:AutoStartWaitHeartbeatSetting" />
                     <element name="startAction" type="xsd:string" />
                     <element name="stopDelay" type="xsd:int" />
                     <element name="stopAction" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfAutoStartPowerInfo">
            <sequence>
               <element name="AutoStartPowerInfo" type="vim25:AutoStartPowerInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostAutoStartManagerConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="defaults" type="vim25:AutoStartDefaults" minOccurs="0" />
                     <element name="powerInfo" type="vim25:AutoStartPowerInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ReconfigureAutostartRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:HostAutoStartManagerConfig" />
            </sequence>
         </complexType>
         <element name="ReconfigureAutostart"  type="vim25:ReconfigureAutostartRequestType" />
         <element name="ReconfigureAutostartResponse">
            <complexType />
         </element>
         <complexType name="AutoStartPowerOnRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="AutoStartPowerOn"  type="vim25:AutoStartPowerOnRequestType" />
         <element name="AutoStartPowerOnResponse">
            <complexType />
         </element>
         <complexType name="AutoStartPowerOffRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="AutoStartPowerOff"  type="vim25:AutoStartPowerOffRequestType" />
         <element name="AutoStartPowerOffResponse">
            <complexType />
         </element>
         <complexType name="HostBootDeviceInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="bootDevices" type="vim25:HostBootDevice" minOccurs="0" maxOccurs="unbounded" />
                     <element name="currentBootDeviceKey" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostBootDevice">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostBootDevice">
            <sequence>
               <element name="HostBootDevice" type="vim25:HostBootDevice" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="QueryBootDevicesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryBootDevices"  type="vim25:QueryBootDevicesRequestType" />
         <element name="QueryBootDevicesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostBootDeviceInfo" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateBootDeviceRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="key" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UpdateBootDevice"  type="vim25:UpdateBootDeviceRequestType" />
         <element name="UpdateBootDeviceResponse">
            <complexType />
         </element>
         <simpleType name="HostReplayUnsupportedReason">
            <restriction base="xsd:string">
               <enumeration value="incompatibleProduct" />
               <enumeration value="incompatibleCpu" />
               <enumeration value="hvDisabled" />
               <enumeration value="cpuidLimitSet" />
               <enumeration value="oldBIOS" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="HostCapability">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="recursiveResourcePoolsSupported" type="xsd:boolean" />
                     <element name="cpuMemoryResourceConfigurationSupported" type="xsd:boolean" />
                     <element name="rebootSupported" type="xsd:boolean" />
                     <element name="shutdownSupported" type="xsd:boolean" />
                     <element name="vmotionSupported" type="xsd:boolean" />
                     <element name="standbySupported" type="xsd:boolean" />
                     <element name="ipmiSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="maxSupportedVMs" type="xsd:int" minOccurs="0" />
                     <element name="maxRunningVMs" type="xsd:int" minOccurs="0" />
                     <element name="maxSupportedVcpus" type="xsd:int" minOccurs="0" />
                     <element name="datastorePrincipalSupported" type="xsd:boolean" />
                     <element name="sanSupported" type="xsd:boolean" />
                     <element name="nfsSupported" type="xsd:boolean" />
                     <element name="iscsiSupported" type="xsd:boolean" />
                     <element name="vlanTaggingSupported" type="xsd:boolean" />
                     <element name="nicTeamingSupported" type="xsd:boolean" />
                     <element name="highGuestMemSupported" type="xsd:boolean" />
                     <element name="maintenanceModeSupported" type="xsd:boolean" />
                     <element name="suspendedRelocateSupported" type="xsd:boolean" />
                     <element name="restrictedSnapshotRelocateSupported" type="xsd:boolean" />
                     <element name="perVmSwapFiles" type="xsd:boolean" />
                     <element name="localSwapDatastoreSupported" type="xsd:boolean" />
                     <element name="unsharedSwapVMotionSupported" type="xsd:boolean" />
                     <element name="backgroundSnapshotsSupported" type="xsd:boolean" />
                     <element name="preAssignedPCIUnitNumbersSupported" type="xsd:boolean" />
                     <element name="screenshotSupported" type="xsd:boolean" />
                     <element name="scaledScreenshotSupported" type="xsd:boolean" />
                     <element name="storageVMotionSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="vmotionWithStorageVMotionSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="recordReplaySupported" type="xsd:boolean" minOccurs="0" />
                     <element name="ftSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="replayUnsupportedReason" type="xsd:string" minOccurs="0" />
                     <element name="loginBySSLThumbprintSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="cloneFromSnapshotSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="deltaDiskBackingsSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="perVMNetworkTrafficShapingSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="tpmSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="supportedCpuFeature" type="vim25:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="virtualExecUsageSupported" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostConfigChangeMode">
            <restriction base="xsd:string">
               <enumeration value="modify" />
               <enumeration value="replace" />
            </restriction>
         </simpleType>
         <simpleType name="HostConfigChangeOperation">
            <restriction base="xsd:string">
               <enumeration value="add" />
               <enumeration value="remove" />
               <enumeration value="edit" />
            </restriction>
         </simpleType>
         <complexType name="HostConfigChange">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="product" type="vim25:AboutInfo" />
                     <element name="hyperThread" type="vim25:HostHyperThreadScheduleInfo" minOccurs="0" />
                     <element name="consoleReservation" type="vim25:ServiceConsoleReservationInfo" minOccurs="0" />
                     <element name="virtualMachineReservation" type="vim25:VirtualMachineMemoryReservationInfo" minOccurs="0" />
                     <element name="storageDevice" type="vim25:HostStorageDeviceInfo" minOccurs="0" />
                     <element name="multipathState" type="vim25:HostMultipathStateInfo" minOccurs="0" />
                     <element name="fileSystemVolume" type="vim25:HostFileSystemVolumeInfo" minOccurs="0" />
                     <element name="network" type="vim25:HostNetworkInfo" minOccurs="0" />
                     <element name="vmotion" type="vim25:HostVMotionInfo" minOccurs="0" />
                     <element name="virtualNicManagerInfo" type="vim25:HostVirtualNicManagerInfo" minOccurs="0" />
                     <element name="capabilities" type="vim25:HostNetCapabilities" minOccurs="0" />
                     <element name="datastoreCapabilities" type="vim25:HostDatastoreSystemCapabilities" minOccurs="0" />
                     <element name="offloadCapabilities" type="vim25:HostNetOffloadCapabilities" minOccurs="0" />
                     <element name="service" type="vim25:HostServiceInfo" minOccurs="0" />
                     <element name="firewall" type="vim25:HostFirewallInfo" minOccurs="0" />
                     <element name="autoStart" type="vim25:HostAutoStartManagerConfig" minOccurs="0" />
                     <element name="activeDiagnosticPartition" type="vim25:HostDiagnosticPartition" minOccurs="0" />
                     <element name="option" type="vim25:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="optionDef" type="vim25:OptionDef" minOccurs="0" maxOccurs="unbounded" />
                     <element name="datastorePrincipal" type="xsd:string" minOccurs="0" />
                     <element name="localSwapDatastore" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="systemResources" type="vim25:HostSystemResourceInfo" minOccurs="0" />
                     <element name="dateTimeInfo" type="vim25:HostDateTimeInfo" minOccurs="0" />
                     <element name="flags" type="vim25:HostFlagInfo" minOccurs="0" />
                     <element name="adminDisabled" type="xsd:boolean" minOccurs="0" />
                     <element name="ipmi" type="vim25:HostIpmiInfo" minOccurs="0" />
                     <element name="sslThumbprintInfo" type="vim25:HostSslThumbprintInfo" minOccurs="0" />
                     <element name="pciPassthruInfo" type="vim25:HostPciPassthruInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConfigManager">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="cpuScheduler" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="datastoreSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="memoryManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="storageSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="networkSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="vmotionSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="virtualNicManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="serviceSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="firewallSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="advancedOption" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="diagnosticSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="autoStartManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="snmpSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="dateTimeSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="patchManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="bootDeviceSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="firmwareSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="healthStatusSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="pciPassthruSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="licenseManager" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="kernelModuleSystem" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="nasDatastore" type="vim25:HostNasVolumeConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="network" type="vim25:HostNetworkConfig" minOccurs="0" />
                     <element name="nicTypeSelection" type="vim25:HostVirtualNicManagerNicTypeSelection" minOccurs="0" maxOccurs="unbounded" />
                     <element name="service" type="vim25:HostServiceConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="firewall" type="vim25:HostFirewallConfig" minOccurs="0" />
                     <element name="option" type="vim25:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="datastorePrincipal" type="xsd:string" minOccurs="0" />
                     <element name="datastorePrincipalPasswd" type="xsd:string" minOccurs="0" />
                     <element name="datetime" type="vim25:HostDateTimeConfig" minOccurs="0" />
                     <element name="storageDevice" type="vim25:HostStorageDeviceInfo" minOccurs="0" />
                     <element name="license" type="vim25:HostLicenseSpec" minOccurs="0" />
                     <element name="security" type="vim25:HostSecuritySpec" minOccurs="0" />
                     <element name="userAccount" type="vim25:HostAccountSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="usergroupAccount" type="vim25:HostAccountSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="memory" type="vim25:HostMemorySpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConnectInfoNetworkInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="summary" type="vim25:NetworkSummary" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostConnectInfoNetworkInfo">
            <sequence>
               <element name="HostConnectInfoNetworkInfo" type="vim25:HostConnectInfoNetworkInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostNewNetworkConnectInfo">
            <complexContent>
               <extension base="vim25:HostConnectInfoNetworkInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDatastoreConnectInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="summary" type="vim25:DatastoreSummary" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDatastoreConnectInfo">
            <sequence>
               <element name="HostDatastoreConnectInfo" type="vim25:HostDatastoreConnectInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDatastoreExistsConnectInfo">
            <complexContent>
               <extension base="vim25:HostDatastoreConnectInfo">
                  <sequence>
                     <element name="newDatastoreName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDatastoreNameConflictConnectInfo">
            <complexContent>
               <extension base="vim25:HostDatastoreConnectInfo">
                  <sequence>
                     <element name="newDatastoreName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostLicenseConnectInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="license" type="vim25:LicenseManagerLicenseInfo" />
                     <element name="evaluation" type="vim25:LicenseManagerEvaluationInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConnectInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="serverIp" type="xsd:string" minOccurs="0" />
                     <element name="host" type="vim25:HostListSummary" />
                     <element name="vm" type="vim25:VirtualMachineSummary" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vimAccountNameRequired" type="xsd:boolean" minOccurs="0" />
                     <element name="clusterSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="network" type="vim25:HostConnectInfoNetworkInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="datastore" type="vim25:HostDatastoreConnectInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="license" type="vim25:HostLicenseConnectInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConnectSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="hostName" type="xsd:string" minOccurs="0" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                     <element name="sslThumbprint" type="xsd:string" minOccurs="0" />
                     <element name="userName" type="xsd:string" minOccurs="0" />
                     <element name="password" type="xsd:string" minOccurs="0" />
                     <element name="vmFolder" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="force" type="xsd:boolean" />
                     <element name="vimAccountName" type="xsd:string" minOccurs="0" />
                     <element name="vimAccountPassword" type="xsd:string" minOccurs="0" />
                     <element name="managementIp" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCpuIdInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="level" type="xsd:int" />
                     <element name="vendor" type="xsd:string" minOccurs="0" />
                     <element name="eax" type="xsd:string" minOccurs="0" />
                     <element name="ebx" type="xsd:string" minOccurs="0" />
                     <element name="ecx" type="xsd:string" minOccurs="0" />
                     <element name="edx" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostCpuIdInfo">
            <sequence>
               <element name="HostCpuIdInfo" type="vim25:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostHyperThreadScheduleInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="available" type="xsd:boolean" />
                     <element name="active" type="xsd:boolean" />
                     <element name="config" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="EnableHyperThreadingRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="EnableHyperThreading"  type="vim25:EnableHyperThreadingRequestType" />
         <element name="EnableHyperThreadingResponse">
            <complexType />
         </element>
         <complexType name="DisableHyperThreadingRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DisableHyperThreading"  type="vim25:DisableHyperThreadingRequestType" />
         <element name="DisableHyperThreadingResponse">
            <complexType />
         </element>
         <complexType name="FileQueryFlags">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="fileType" type="xsd:boolean" />
                     <element name="fileSize" type="xsd:boolean" />
                     <element name="modification" type="xsd:boolean" />
                     <element name="fileOwner" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FileInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="path" type="xsd:string" />
                     <element name="fileSize" type="xsd:long" minOccurs="0" />
                     <element name="modification" type="xsd:dateTime" minOccurs="0" />
                     <element name="owner" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfFileInfo">
            <sequence>
               <element name="FileInfo" type="vim25:FileInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="FileQuery">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfFileQuery">
            <sequence>
               <element name="FileQuery" type="vim25:FileQuery" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VmConfigFileQueryFilter">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="matchConfigVersion" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConfigFileQueryFlags">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="configVersion" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConfigFileQuery">
            <complexContent>
               <extension base="vim25:FileQuery">
                  <sequence>
                     <element name="filter" type="vim25:VmConfigFileQueryFilter" minOccurs="0" />
                     <element name="details" type="vim25:VmConfigFileQueryFlags" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateConfigFileQuery">
            <complexContent>
               <extension base="vim25:VmConfigFileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiskFileQueryFilter">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="diskType" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="matchHardwareVersion" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                     <element name="controllerType" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="thin" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiskFileQueryFlags">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="diskType" type="xsd:boolean" />
                     <element name="capacityKb" type="xsd:boolean" />
                     <element name="hardwareVersion" type="xsd:boolean" />
                     <element name="controllerType" type="xsd:boolean" minOccurs="0" />
                     <element name="diskExtents" type="xsd:boolean" minOccurs="0" />
                     <element name="thin" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiskFileQuery">
            <complexContent>
               <extension base="vim25:FileQuery">
                  <sequence>
                     <element name="filter" type="vim25:VmDiskFileQueryFilter" minOccurs="0" />
                     <element name="details" type="vim25:VmDiskFileQueryFlags" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FolderFileQuery">
            <complexContent>
               <extension base="vim25:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSnapshotFileQuery">
            <complexContent>
               <extension base="vim25:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IsoImageFileQuery">
            <complexContent>
               <extension base="vim25:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FloppyImageFileQuery">
            <complexContent>
               <extension base="vim25:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmNvramFileQuery">
            <complexContent>
               <extension base="vim25:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmLogFileQuery">
            <complexContent>
               <extension base="vim25:FileQuery">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConfigFileInfo">
            <complexContent>
               <extension base="vim25:FileInfo">
                  <sequence>
                     <element name="configVersion" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="TemplateConfigFileInfo">
            <complexContent>
               <extension base="vim25:VmConfigFileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmDiskFileInfo">
            <complexContent>
               <extension base="vim25:FileInfo">
                  <sequence>
                     <element name="diskType" type="xsd:string" minOccurs="0" />
                     <element name="capacityKb" type="xsd:long" minOccurs="0" />
                     <element name="hardwareVersion" type="xsd:int" minOccurs="0" />
                     <element name="controllerType" type="xsd:string" minOccurs="0" />
                     <element name="diskExtents" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="thin" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FolderFileInfo">
            <complexContent>
               <extension base="vim25:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmSnapshotFileInfo">
            <complexContent>
               <extension base="vim25:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IsoImageFileInfo">
            <complexContent>
               <extension base="vim25:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FloppyImageFileInfo">
            <complexContent>
               <extension base="vim25:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmNvramFileInfo">
            <complexContent>
               <extension base="vim25:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmLogFileInfo">
            <complexContent>
               <extension base="vim25:FileInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDatastoreBrowserSearchSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="query" type="vim25:FileQuery" minOccurs="0" maxOccurs="unbounded" />
                     <element name="details" type="vim25:FileQueryFlags" minOccurs="0" />
                     <element name="searchCaseInsensitive" type="xsd:boolean" minOccurs="0" />
                     <element name="matchPattern" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="sortFoldersFirst" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDatastoreBrowserSearchResults">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="datastore" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="folderPath" type="xsd:string" minOccurs="0" />
                     <element name="file" type="vim25:FileInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDatastoreBrowserSearchResults">
            <sequence>
               <element name="HostDatastoreBrowserSearchResults" type="vim25:HostDatastoreBrowserSearchResults" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="SearchDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datastorePath" type="xsd:string" />
               <element name="searchSpec" type="vim25:HostDatastoreBrowserSearchSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="SearchDatastore_Task"  type="vim25:SearchDatastoreRequestType" />
         <element name="SearchDatastore_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SearchDatastoreSubFoldersRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datastorePath" type="xsd:string" />
               <element name="searchSpec" type="vim25:HostDatastoreBrowserSearchSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="SearchDatastoreSubFolders_Task"  type="vim25:SearchDatastoreSubFoldersRequestType" />
         <element name="SearchDatastoreSubFolders_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="DeleteFileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datastorePath" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="DeleteFile"  type="vim25:DeleteFileRequestType" />
         <element name="DeleteFileResponse">
            <complexType />
         </element>
         <complexType name="HostDatastoreSystemCapabilities">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="nfsMountCreationRequired" type="xsd:boolean" />
                     <element name="nfsMountCreationSupported" type="xsd:boolean" />
                     <element name="localDatastoreSupported" type="xsd:boolean" />
                     <element name="vmfsExtentExpansionSupported" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdateLocalSwapDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datastore" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="UpdateLocalSwapDatastore"  type="vim25:UpdateLocalSwapDatastoreRequestType" />
         <element name="UpdateLocalSwapDatastoreResponse">
            <complexType />
         </element>
         <complexType name="QueryAvailableDisksForVmfsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datastore" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryAvailableDisksForVmfs"  type="vim25:QueryAvailableDisksForVmfsRequestType" />
         <element name="QueryAvailableDisksForVmfsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostScsiDisk" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryVmfsDatastoreCreateOptionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="devicePath" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="QueryVmfsDatastoreCreateOptions"  type="vim25:QueryVmfsDatastoreCreateOptionsRequestType" />
         <element name="QueryVmfsDatastoreCreateOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:VmfsDatastoreOption" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateVmfsDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:VmfsDatastoreCreateSpec" />
            </sequence>
         </complexType>
         <element name="CreateVmfsDatastore"  type="vim25:CreateVmfsDatastoreRequestType" />
         <element name="CreateVmfsDatastoreResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryVmfsDatastoreExtendOptionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datastore" type="vim25:ManagedObjectReference" />
               <element name="devicePath" type="xsd:string" />
               <element name="suppressExpandCandidates" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryVmfsDatastoreExtendOptions"  type="vim25:QueryVmfsDatastoreExtendOptionsRequestType" />
         <element name="QueryVmfsDatastoreExtendOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:VmfsDatastoreOption" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryVmfsDatastoreExpandOptionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datastore" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryVmfsDatastoreExpandOptions"  type="vim25:QueryVmfsDatastoreExpandOptionsRequestType" />
         <element name="QueryVmfsDatastoreExpandOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:VmfsDatastoreOption" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ExtendVmfsDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datastore" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:VmfsDatastoreExtendSpec" />
            </sequence>
         </complexType>
         <element name="ExtendVmfsDatastore"  type="vim25:ExtendVmfsDatastoreRequestType" />
         <element name="ExtendVmfsDatastoreResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ExpandVmfsDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datastore" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:VmfsDatastoreExpandSpec" />
            </sequence>
         </complexType>
         <element name="ExpandVmfsDatastore"  type="vim25:ExpandVmfsDatastoreRequestType" />
         <element name="ExpandVmfsDatastoreResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateNasDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:HostNasVolumeSpec" />
            </sequence>
         </complexType>
         <element name="CreateNasDatastore"  type="vim25:CreateNasDatastoreRequestType" />
         <element name="CreateNasDatastoreResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateLocalDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="path" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="CreateLocalDatastore"  type="vim25:CreateLocalDatastoreRequestType" />
         <element name="CreateLocalDatastoreResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RemoveDatastoreRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="datastore" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RemoveDatastore"  type="vim25:RemoveDatastoreRequestType" />
         <element name="RemoveDatastoreResponse">
            <complexType />
         </element>
         <complexType name="ConfigureDatastorePrincipalRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="userName" type="xsd:string" />
               <element name="password" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="ConfigureDatastorePrincipal"  type="vim25:ConfigureDatastorePrincipalRequestType" />
         <element name="ConfigureDatastorePrincipalResponse">
            <complexType />
         </element>
         <complexType name="QueryUnresolvedVmfsVolumesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryUnresolvedVmfsVolumes"  type="vim25:QueryUnresolvedVmfsVolumesRequestType" />
         <element name="QueryUnresolvedVmfsVolumesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostUnresolvedVmfsVolume" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ResignatureUnresolvedVmfsVolumeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="resolutionSpec" type="vim25:HostUnresolvedVmfsResignatureSpec" />
            </sequence>
         </complexType>
         <element name="ResignatureUnresolvedVmfsVolume_Task"  type="vim25:ResignatureUnresolvedVmfsVolumeRequestType" />
         <element name="ResignatureUnresolvedVmfsVolume_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="VmfsDatastoreInfo">
            <complexContent>
               <extension base="vim25:DatastoreInfo">
                  <sequence>
                     <element name="vmfs" type="vim25:HostVmfsVolume" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NasDatastoreInfo">
            <complexContent>
               <extension base="vim25:DatastoreInfo">
                  <sequence>
                     <element name="nas" type="vim25:HostNasVolume" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LocalDatastoreInfo">
            <complexContent>
               <extension base="vim25:DatastoreInfo">
                  <sequence>
                     <element name="path" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="diskUuid" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreCreateSpec">
            <complexContent>
               <extension base="vim25:VmfsDatastoreSpec">
                  <sequence>
                     <element name="partition" type="vim25:HostDiskPartitionSpec" />
                     <element name="vmfs" type="vim25:HostVmfsSpec" />
                     <element name="extent" type="vim25:HostScsiDiskPartition" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreExtendSpec">
            <complexContent>
               <extension base="vim25:VmfsDatastoreSpec">
                  <sequence>
                     <element name="partition" type="vim25:HostDiskPartitionSpec" />
                     <element name="extent" type="vim25:HostScsiDiskPartition" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreExpandSpec">
            <complexContent>
               <extension base="vim25:VmfsDatastoreSpec">
                  <sequence>
                     <element name="partition" type="vim25:HostDiskPartitionSpec" />
                     <element name="extent" type="vim25:HostScsiDiskPartition" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreBaseOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="layout" type="vim25:HostDiskPartitionLayout" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreSingleExtentOption">
            <complexContent>
               <extension base="vim25:VmfsDatastoreBaseOption">
                  <sequence>
                     <element name="vmfsExtent" type="vim25:HostDiskPartitionBlockRange" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreAllExtentOption">
            <complexContent>
               <extension base="vim25:VmfsDatastoreSingleExtentOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreMultipleExtentOption">
            <complexContent>
               <extension base="vim25:VmfsDatastoreBaseOption">
                  <sequence>
                     <element name="vmfsExtent" type="vim25:HostDiskPartitionBlockRange" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmfsDatastoreOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="info" type="vim25:VmfsDatastoreBaseOption" />
                     <element name="spec" type="vim25:VmfsDatastoreSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVmfsDatastoreOption">
            <sequence>
               <element name="VmfsDatastoreOption" type="vim25:VmfsDatastoreOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDateTimeConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="timeZone" type="xsd:string" minOccurs="0" />
                     <element name="ntpConfig" type="vim25:HostNtpConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDateTimeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="timeZone" type="vim25:HostDateTimeSystemTimeZone" />
                     <element name="ntpConfig" type="vim25:HostNtpConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDateTimeSystemTimeZone">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="gmtOffset" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDateTimeSystemTimeZone">
            <sequence>
               <element name="HostDateTimeSystemTimeZone" type="vim25:HostDateTimeSystemTimeZone" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="UpdateDateTimeConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:HostDateTimeConfig" />
            </sequence>
         </complexType>
         <element name="UpdateDateTimeConfig"  type="vim25:UpdateDateTimeConfigRequestType" />
         <element name="UpdateDateTimeConfigResponse">
            <complexType />
         </element>
         <complexType name="QueryAvailableTimeZonesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryAvailableTimeZones"  type="vim25:QueryAvailableTimeZonesRequestType" />
         <element name="QueryAvailableTimeZonesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostDateTimeSystemTimeZone" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryDateTimeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryDateTime"  type="vim25:QueryDateTimeRequestType" />
         <element name="QueryDateTimeResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:dateTime" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateDateTimeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="dateTime" type="xsd:dateTime" />
            </sequence>
         </complexType>
         <element name="UpdateDateTime"  type="vim25:UpdateDateTimeRequestType" />
         <element name="UpdateDateTimeResponse">
            <complexType />
         </element>
         <complexType name="RefreshDateTimeSystemRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RefreshDateTimeSystem"  type="vim25:RefreshDateTimeSystemRequestType" />
         <element name="RefreshDateTimeSystemResponse">
            <complexType />
         </element>
         <complexType name="HostDevice">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="deviceName" type="xsd:string" />
                     <element name="deviceType" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDhcpServiceSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="virtualSwitch" type="xsd:string" />
                     <element name="defaultLeaseDuration" type="xsd:int" />
                     <element name="leaseBeginIp" type="xsd:string" />
                     <element name="leaseEndIp" type="xsd:string" />
                     <element name="maxLeaseDuration" type="xsd:int" />
                     <element name="unlimitedLease" type="xsd:boolean" />
                     <element name="ipSubnetAddr" type="xsd:string" />
                     <element name="ipSubnetMask" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDhcpServiceConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" minOccurs="0" />
                     <element name="key" type="xsd:string" />
                     <element name="spec" type="vim25:HostDhcpServiceSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDhcpServiceConfig">
            <sequence>
               <element name="HostDhcpServiceConfig" type="vim25:HostDhcpServiceConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDhcpService">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="spec" type="vim25:HostDhcpServiceSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDhcpService">
            <sequence>
               <element name="HostDhcpService" type="vim25:HostDhcpService" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="QueryAvailablePartitionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryAvailablePartition"  type="vim25:QueryAvailablePartitionRequestType" />
         <element name="QueryAvailablePartitionResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostDiagnosticPartition" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SelectActivePartitionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="partition" type="vim25:HostScsiDiskPartition" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="SelectActivePartition"  type="vim25:SelectActivePartitionRequestType" />
         <element name="SelectActivePartitionResponse">
            <complexType />
         </element>
         <complexType name="QueryPartitionCreateOptionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="storageType" type="xsd:string" />
               <element name="diagnosticType" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="QueryPartitionCreateOptions"  type="vim25:QueryPartitionCreateOptionsRequestType" />
         <element name="QueryPartitionCreateOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostDiagnosticPartitionCreateOption" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryPartitionCreateDescRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="diskUuid" type="xsd:string" />
               <element name="diagnosticType" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="QueryPartitionCreateDesc"  type="vim25:QueryPartitionCreateDescRequestType" />
         <element name="QueryPartitionCreateDescResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostDiagnosticPartitionCreateDescription" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateDiagnosticPartitionRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:HostDiagnosticPartitionCreateSpec" />
            </sequence>
         </complexType>
         <element name="CreateDiagnosticPartition"  type="vim25:CreateDiagnosticPartitionRequestType" />
         <element name="CreateDiagnosticPartitionResponse">
            <complexType />
         </element>
         <simpleType name="DiagnosticPartitionStorageType">
            <restriction base="xsd:string">
               <enumeration value="directAttached" />
               <enumeration value="networkAttached" />
            </restriction>
         </simpleType>
         <simpleType name="DiagnosticPartitionType">
            <restriction base="xsd:string">
               <enumeration value="singleHost" />
               <enumeration value="multiHost" />
            </restriction>
         </simpleType>
         <complexType name="HostDiagnosticPartitionCreateOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="storageType" type="xsd:string" />
                     <element name="diagnosticType" type="xsd:string" />
                     <element name="disk" type="vim25:HostScsiDisk" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiagnosticPartitionCreateOption">
            <sequence>
               <element name="HostDiagnosticPartitionCreateOption" type="vim25:HostDiagnosticPartitionCreateOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiagnosticPartitionCreateSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="storageType" type="xsd:string" />
                     <element name="diagnosticType" type="xsd:string" />
                     <element name="id" type="vim25:HostScsiDiskPartition" />
                     <element name="partition" type="vim25:HostDiskPartitionSpec" />
                     <element name="active" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiagnosticPartitionCreateDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="layout" type="vim25:HostDiskPartitionLayout" />
                     <element name="diskUuid" type="xsd:string" />
                     <element name="spec" type="vim25:HostDiagnosticPartitionCreateSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiagnosticPartition">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="storageType" type="xsd:string" />
                     <element name="diagnosticType" type="xsd:string" />
                     <element name="slots" type="xsd:int" />
                     <element name="id" type="vim25:HostScsiDiskPartition" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiagnosticPartition">
            <sequence>
               <element name="HostDiagnosticPartition" type="vim25:HostDiagnosticPartition" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskDimensionsChs">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="cylinder" type="xsd:long" />
                     <element name="head" type="xsd:int" />
                     <element name="sector" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskDimensionsLba">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="blockSize" type="xsd:int" />
                     <element name="block" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskDimensions">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostDiskPartitionInfoType">
            <restriction base="xsd:string">
               <enumeration value="none" />
               <enumeration value="vmfs" />
               <enumeration value="linuxNative" />
               <enumeration value="linuxSwap" />
               <enumeration value="extended" />
               <enumeration value="ntfs" />
               <enumeration value="vmkDiagnostic" />
            </restriction>
         </simpleType>
         <complexType name="HostDiskPartitionAttributes">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="partition" type="xsd:int" />
                     <element name="startSector" type="xsd:long" />
                     <element name="endSector" type="xsd:long" />
                     <element name="type" type="xsd:string" />
                     <element name="logical" type="xsd:boolean" />
                     <element name="attributes" type="xsd:byte" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiskPartitionAttributes">
            <sequence>
               <element name="HostDiskPartitionAttributes" type="vim25:HostDiskPartitionAttributes" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskPartitionBlockRange">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="partition" type="xsd:int" minOccurs="0" />
                     <element name="type" type="xsd:string" />
                     <element name="start" type="vim25:HostDiskDimensionsLba" />
                     <element name="end" type="vim25:HostDiskDimensionsLba" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiskPartitionBlockRange">
            <sequence>
               <element name="HostDiskPartitionBlockRange" type="vim25:HostDiskPartitionBlockRange" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskPartitionSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="chs" type="vim25:HostDiskDimensionsChs" minOccurs="0" />
                     <element name="totalSectors" type="xsd:long" minOccurs="0" />
                     <element name="partition" type="vim25:HostDiskPartitionAttributes" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskPartitionLayout">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="total" type="vim25:HostDiskDimensionsLba" minOccurs="0" />
                     <element name="partition" type="vim25:HostDiskPartitionBlockRange" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskPartitionInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="deviceName" type="xsd:string" />
                     <element name="spec" type="vim25:HostDiskPartitionSpec" />
                     <element name="layout" type="vim25:HostDiskPartitionLayout" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiskPartitionInfo">
            <sequence>
               <element name="HostDiskPartitionInfo" type="vim25:HostDiskPartitionInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDnsConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="dhcp" type="xsd:boolean" />
                     <element name="virtualNicDevice" type="xsd:string" minOccurs="0" />
                     <element name="hostName" type="xsd:string" />
                     <element name="domainName" type="xsd:string" />
                     <element name="address" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="searchDomain" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDnsConfigSpec">
            <complexContent>
               <extension base="vim25:HostDnsConfig">
                  <sequence>
                     <element name="virtualNicConnection" type="vim25:HostVirtualNicConnection" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ModeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="browse" type="xsd:string" minOccurs="0" />
                     <element name="read" type="xsd:string" />
                     <element name="modify" type="xsd:string" />
                     <element name="use" type="xsd:string" />
                     <element name="admin" type="xsd:string" minOccurs="0" />
                     <element name="full" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFileAccess">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="who" type="xsd:string" />
                     <element name="what" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFileSystemVolumeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="volumeTypeList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="mountInfo" type="vim25:HostFileSystemMountInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFileSystemMountInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="mountInfo" type="vim25:HostMountInfo" />
                     <element name="volume" type="vim25:HostFileSystemVolume" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostFileSystemMountInfo">
            <sequence>
               <element name="HostFileSystemMountInfo" type="vim25:HostFileSystemMountInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostFileSystemVolume">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="capacity" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNasVolumeSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="remoteHost" type="xsd:string" />
                     <element name="remotePath" type="xsd:string" />
                     <element name="localPath" type="xsd:string" />
                     <element name="accessMode" type="xsd:string" />
                     <element name="type" type="xsd:string" minOccurs="0" />
                     <element name="userName" type="xsd:string" minOccurs="0" />
                     <element name="password" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNasVolumeConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" minOccurs="0" />
                     <element name="spec" type="vim25:HostNasVolumeSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostNasVolumeConfig">
            <sequence>
               <element name="HostNasVolumeConfig" type="vim25:HostNasVolumeConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostNasVolume">
            <complexContent>
               <extension base="vim25:HostFileSystemVolume">
                  <sequence>
                     <element name="remoteHost" type="xsd:string" />
                     <element name="remotePath" type="xsd:string" />
                     <element name="userName" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostLocalFileSystemVolumeSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="localPath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostLocalFileSystemVolume">
            <complexContent>
               <extension base="vim25:HostFileSystemVolume">
                  <sequence>
                     <element name="device" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFirewallConfigRuleSetConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="rulesetId" type="xsd:string" />
                     <element name="enabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostFirewallConfigRuleSetConfig">
            <sequence>
               <element name="HostFirewallConfigRuleSetConfig" type="vim25:HostFirewallConfigRuleSetConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostFirewallConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="rule" type="vim25:HostFirewallConfigRuleSetConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="defaultBlockingPolicy" type="vim25:HostFirewallDefaultPolicy" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFirewallDefaultPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="incomingBlocked" type="xsd:boolean" minOccurs="0" />
                     <element name="outgoingBlocked" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFirewallInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="defaultPolicy" type="vim25:HostFirewallDefaultPolicy" />
                     <element name="ruleset" type="vim25:HostFirewallRuleset" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdateDefaultPolicyRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="defaultPolicy" type="vim25:HostFirewallDefaultPolicy" />
            </sequence>
         </complexType>
         <element name="UpdateDefaultPolicy"  type="vim25:UpdateDefaultPolicyRequestType" />
         <element name="UpdateDefaultPolicyResponse">
            <complexType />
         </element>
         <complexType name="EnableRulesetRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="id" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="EnableRuleset"  type="vim25:EnableRulesetRequestType" />
         <element name="EnableRulesetResponse">
            <complexType />
         </element>
         <complexType name="DisableRulesetRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="id" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="DisableRuleset"  type="vim25:DisableRulesetRequestType" />
         <element name="DisableRulesetResponse">
            <complexType />
         </element>
         <complexType name="RefreshFirewallRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RefreshFirewall"  type="vim25:RefreshFirewallRequestType" />
         <element name="RefreshFirewallResponse">
            <complexType />
         </element>
         <complexType name="ResetFirmwareToFactoryDefaultsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ResetFirmwareToFactoryDefaults"  type="vim25:ResetFirmwareToFactoryDefaultsRequestType" />
         <element name="ResetFirmwareToFactoryDefaultsResponse">
            <complexType />
         </element>
         <complexType name="BackupFirmwareConfigurationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="BackupFirmwareConfiguration"  type="vim25:BackupFirmwareConfigurationRequestType" />
         <element name="BackupFirmwareConfigurationResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryFirmwareConfigUploadURLRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryFirmwareConfigUploadURL"  type="vim25:QueryFirmwareConfigUploadURLRequestType" />
         <element name="QueryFirmwareConfigUploadURLResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RestoreFirmwareConfigurationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="force" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="RestoreFirmwareConfiguration"  type="vim25:RestoreFirmwareConfigurationRequestType" />
         <element name="RestoreFirmwareConfigurationResponse">
            <complexType />
         </element>
         <complexType name="HostFlagInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="backgroundSnapshotsEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostForceMountedInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="persist" type="xsd:boolean" />
                     <element name="mounted" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostHardwareInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="systemInfo" type="vim25:HostSystemInfo" />
                     <element name="cpuPowerManagementInfo" type="vim25:HostCpuPowerManagementInfo" minOccurs="0" />
                     <element name="cpuInfo" type="vim25:HostCpuInfo" />
                     <element name="cpuPkg" type="vim25:HostCpuPackage" maxOccurs="unbounded" />
                     <element name="memorySize" type="xsd:long" />
                     <element name="numaInfo" type="vim25:HostNumaInfo" minOccurs="0" />
                     <element name="pciDevice" type="vim25:HostPciDevice" minOccurs="0" maxOccurs="unbounded" />
                     <element name="cpuFeature" type="vim25:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="biosInfo" type="vim25:HostBIOSInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostSystemInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vendor" type="xsd:string" />
                     <element name="model" type="xsd:string" />
                     <element name="uuid" type="xsd:string" />
                     <element name="otherIdentifyingInfo" type="vim25:HostSystemIdentificationInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostCpuPowerManagementInfoPolicyType">
            <restriction base="xsd:string">
               <enumeration value="off" />
               <enumeration value="staticPolicy" />
               <enumeration value="dynamicPolicy" />
            </restriction>
         </simpleType>
         <complexType name="HostCpuPowerManagementInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="currentPolicy" type="xsd:string" minOccurs="0" />
                     <element name="hardwareSupport" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostCpuInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="numCpuPackages" type="xsd:short" />
                     <element name="numCpuCores" type="xsd:short" />
                     <element name="numCpuThreads" type="xsd:short" />
                     <element name="hz" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostCpuPackageVendor">
            <restriction base="xsd:string">
               <enumeration value="unknown" />
               <enumeration value="intel" />
               <enumeration value="amd" />
            </restriction>
         </simpleType>
         <complexType name="HostCpuPackage">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="index" type="xsd:short" />
                     <element name="vendor" type="xsd:string" />
                     <element name="hz" type="xsd:long" />
                     <element name="busHz" type="xsd:long" />
                     <element name="description" type="xsd:string" />
                     <element name="threadId" type="xsd:short" maxOccurs="unbounded" />
                     <element name="cpuFeature" type="vim25:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostCpuPackage">
            <sequence>
               <element name="HostCpuPackage" type="vim25:HostCpuPackage" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostNumaInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="numNodes" type="xsd:int" />
                     <element name="numaNode" type="vim25:HostNumaNode" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNumaNode">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="typeId" type="xsd:byte" />
                     <element name="cpuID" type="xsd:short" maxOccurs="unbounded" />
                     <element name="memoryRangeBegin" type="xsd:long" />
                     <element name="memoryRangeLength" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostNumaNode">
            <sequence>
               <element name="HostNumaNode" type="vim25:HostNumaNode" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostBIOSInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="biosVersion" type="xsd:string" minOccurs="0" />
                     <element name="releaseDate" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostHardwareElementStatus">
            <restriction base="xsd:string">
               <enumeration value="Unknown" />
               <enumeration value="Green" />
               <enumeration value="Yellow" />
               <enumeration value="Red" />
            </restriction>
         </simpleType>
         <complexType name="HostHardwareElementInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="status" type="vim25:ElementDescription" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostHardwareElementInfo">
            <sequence>
               <element name="HostHardwareElementInfo" type="vim25:HostHardwareElementInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostStorageOperationalInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="property" type="xsd:string" />
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostStorageOperationalInfo">
            <sequence>
               <element name="HostStorageOperationalInfo" type="vim25:HostStorageOperationalInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostStorageElementInfo">
            <complexContent>
               <extension base="vim25:HostHardwareElementInfo">
                  <sequence>
                     <element name="operationalInfo" type="vim25:HostStorageOperationalInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostStorageElementInfo">
            <sequence>
               <element name="HostStorageElementInfo" type="vim25:HostStorageElementInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostHardwareStatusInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="memoryStatusInfo" type="vim25:HostHardwareElementInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="cpuStatusInfo" type="vim25:HostHardwareElementInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="storageStatusInfo" type="vim25:HostStorageElementInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HealthSystemRuntime">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="systemHealthInfo" type="vim25:HostSystemHealthInfo" minOccurs="0" />
                     <element name="hardwareStatusInfo" type="vim25:HostHardwareStatusInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RefreshHealthStatusSystemRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RefreshHealthStatusSystem"  type="vim25:RefreshHealthStatusSystemRequestType" />
         <element name="RefreshHealthStatusSystemResponse">
            <complexType />
         </element>
         <complexType name="ResetSystemHealthInfoRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ResetSystemHealthInfo"  type="vim25:ResetSystemHealthInfoRequestType" />
         <element name="ResetSystemHealthInfoResponse">
            <complexType />
         </element>
         <complexType name="HostHostBusAdapter">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="device" type="xsd:string" />
                     <element name="bus" type="xsd:int" />
                     <element name="status" type="xsd:string" />
                     <element name="model" type="xsd:string" />
                     <element name="driver" type="xsd:string" minOccurs="0" />
                     <element name="pci" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostHostBusAdapter">
            <sequence>
               <element name="HostHostBusAdapter" type="vim25:HostHostBusAdapter" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostParallelScsiHba">
            <complexContent>
               <extension base="vim25:HostHostBusAdapter">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostBlockHba">
            <complexContent>
               <extension base="vim25:HostHostBusAdapter">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="FibreChannelPortType">
            <restriction base="xsd:string">
               <enumeration value="fabric" />
               <enumeration value="loop" />
               <enumeration value="pointToPoint" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="HostFibreChannelHba">
            <complexContent>
               <extension base="vim25:HostHostBusAdapter">
                  <sequence>
                     <element name="portWorldWideName" type="xsd:long" />
                     <element name="nodeWorldWideName" type="xsd:long" />
                     <element name="portType" type="vim25:FibreChannelPortType" />
                     <element name="speed" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaParamValue">
            <complexContent>
               <extension base="vim25:OptionValue">
                  <sequence>
                     <element name="isInherited" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostInternetScsiHbaParamValue">
            <sequence>
               <element name="HostInternetScsiHbaParamValue" type="vim25:HostInternetScsiHbaParamValue" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostInternetScsiHbaDiscoveryCapabilities">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="iSnsDiscoverySettable" type="xsd:boolean" />
                     <element name="slpDiscoverySettable" type="xsd:boolean" />
                     <element name="staticTargetDiscoverySettable" type="xsd:boolean" />
                     <element name="sendTargetsDiscoverySettable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="InternetScsiSnsDiscoveryMethod">
            <restriction base="xsd:string">
               <enumeration value="isnsStatic" />
               <enumeration value="isnsDhcp" />
               <enumeration value="isnsSlp" />
            </restriction>
         </simpleType>
         <simpleType name="SlpDiscoveryMethod">
            <restriction base="xsd:string">
               <enumeration value="slpDhcp" />
               <enumeration value="slpAutoUnicast" />
               <enumeration value="slpAutoMulticast" />
               <enumeration value="slpManual" />
            </restriction>
         </simpleType>
         <complexType name="HostInternetScsiHbaDiscoveryProperties">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="iSnsDiscoveryEnabled" type="xsd:boolean" />
                     <element name="iSnsDiscoveryMethod" type="xsd:string" minOccurs="0" />
                     <element name="iSnsHost" type="xsd:string" minOccurs="0" />
                     <element name="slpDiscoveryEnabled" type="xsd:boolean" />
                     <element name="slpDiscoveryMethod" type="xsd:string" minOccurs="0" />
                     <element name="slpHost" type="xsd:string" minOccurs="0" />
                     <element name="staticTargetDiscoveryEnabled" type="xsd:boolean" />
                     <element name="sendTargetsDiscoveryEnabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostInternetScsiHbaChapAuthenticationType">
            <restriction base="xsd:string">
               <enumeration value="chapProhibited" />
               <enumeration value="chapDiscouraged" />
               <enumeration value="chapPreferred" />
               <enumeration value="chapRequired" />
            </restriction>
         </simpleType>
         <complexType name="HostInternetScsiHbaAuthenticationCapabilities">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="chapAuthSettable" type="xsd:boolean" />
                     <element name="krb5AuthSettable" type="xsd:boolean" />
                     <element name="srpAuthSettable" type="xsd:boolean" />
                     <element name="spkmAuthSettable" type="xsd:boolean" />
                     <element name="mutualChapSettable" type="xsd:boolean" minOccurs="0" />
                     <element name="targetChapSettable" type="xsd:boolean" minOccurs="0" />
                     <element name="targetMutualChapSettable" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaAuthenticationProperties">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="chapAuthEnabled" type="xsd:boolean" />
                     <element name="chapName" type="xsd:string" minOccurs="0" />
                     <element name="chapSecret" type="xsd:string" minOccurs="0" />
                     <element name="chapAuthenticationType" type="xsd:string" minOccurs="0" />
                     <element name="chapInherited" type="xsd:boolean" minOccurs="0" />
                     <element name="mutualChapName" type="xsd:string" minOccurs="0" />
                     <element name="mutualChapSecret" type="xsd:string" minOccurs="0" />
                     <element name="mutualChapAuthenticationType" type="xsd:string" minOccurs="0" />
                     <element name="mutualChapInherited" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostInternetScsiHbaDigestType">
            <restriction base="xsd:string">
               <enumeration value="digestProhibited" />
               <enumeration value="digestDiscouraged" />
               <enumeration value="digestPreferred" />
               <enumeration value="digestRequired" />
            </restriction>
         </simpleType>
         <complexType name="HostInternetScsiHbaDigestCapabilities">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="headerDigestSettable" type="xsd:boolean" minOccurs="0" />
                     <element name="dataDigestSettable" type="xsd:boolean" minOccurs="0" />
                     <element name="targetHeaderDigestSettable" type="xsd:boolean" minOccurs="0" />
                     <element name="targetDataDigestSettable" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaDigestProperties">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="headerDigestType" type="xsd:string" minOccurs="0" />
                     <element name="headerDigestInherited" type="xsd:boolean" minOccurs="0" />
                     <element name="dataDigestType" type="xsd:string" minOccurs="0" />
                     <element name="dataDigestInherited" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaIPCapabilities">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="addressSettable" type="xsd:boolean" />
                     <element name="ipConfigurationMethodSettable" type="xsd:boolean" />
                     <element name="subnetMaskSettable" type="xsd:boolean" />
                     <element name="defaultGatewaySettable" type="xsd:boolean" />
                     <element name="primaryDnsServerAddressSettable" type="xsd:boolean" />
                     <element name="alternateDnsServerAddressSettable" type="xsd:boolean" />
                     <element name="ipv6Supported" type="xsd:boolean" minOccurs="0" />
                     <element name="arpRedirectSettable" type="xsd:boolean" minOccurs="0" />
                     <element name="mtuSettable" type="xsd:boolean" minOccurs="0" />
                     <element name="hostNameAsTargetAddress" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaIPProperties">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="mac" type="xsd:string" minOccurs="0" />
                     <element name="address" type="xsd:string" minOccurs="0" />
                     <element name="dhcpConfigurationEnabled" type="xsd:boolean" />
                     <element name="subnetMask" type="xsd:string" minOccurs="0" />
                     <element name="defaultGateway" type="xsd:string" minOccurs="0" />
                     <element name="primaryDnsServerAddress" type="xsd:string" minOccurs="0" />
                     <element name="alternateDnsServerAddress" type="xsd:string" minOccurs="0" />
                     <element name="ipv6Address" type="xsd:string" minOccurs="0" />
                     <element name="ipv6SubnetMask" type="xsd:string" minOccurs="0" />
                     <element name="ipv6DefaultGateway" type="xsd:string" minOccurs="0" />
                     <element name="arpRedirectEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="mtu" type="xsd:int" minOccurs="0" />
                     <element name="jumboFramesEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHbaSendTarget">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="address" type="xsd:string" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                     <element name="authenticationProperties" type="vim25:HostInternetScsiHbaAuthenticationProperties" minOccurs="0" />
                     <element name="digestProperties" type="vim25:HostInternetScsiHbaDigestProperties" minOccurs="0" />
                     <element name="supportedAdvancedOptions" type="vim25:OptionDef" minOccurs="0" maxOccurs="unbounded" />
                     <element name="advancedOptions" type="vim25:HostInternetScsiHbaParamValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="parent" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostInternetScsiHbaSendTarget">
            <sequence>
               <element name="HostInternetScsiHbaSendTarget" type="vim25:HostInternetScsiHbaSendTarget" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostInternetScsiHbaStaticTarget">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="address" type="xsd:string" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                     <element name="iScsiName" type="xsd:string" />
                     <element name="authenticationProperties" type="vim25:HostInternetScsiHbaAuthenticationProperties" minOccurs="0" />
                     <element name="digestProperties" type="vim25:HostInternetScsiHbaDigestProperties" minOccurs="0" />
                     <element name="supportedAdvancedOptions" type="vim25:OptionDef" minOccurs="0" maxOccurs="unbounded" />
                     <element name="advancedOptions" type="vim25:HostInternetScsiHbaParamValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="parent" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostInternetScsiHbaStaticTarget">
            <sequence>
               <element name="HostInternetScsiHbaStaticTarget" type="vim25:HostInternetScsiHbaStaticTarget" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostInternetScsiHbaTargetSet">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="staticTargets" type="vim25:HostInternetScsiHbaStaticTarget" minOccurs="0" maxOccurs="unbounded" />
                     <element name="sendTargets" type="vim25:HostInternetScsiHbaSendTarget" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiHba">
            <complexContent>
               <extension base="vim25:HostHostBusAdapter">
                  <sequence>
                     <element name="isSoftwareBased" type="xsd:boolean" />
                     <element name="discoveryCapabilities" type="vim25:HostInternetScsiHbaDiscoveryCapabilities" />
                     <element name="discoveryProperties" type="vim25:HostInternetScsiHbaDiscoveryProperties" />
                     <element name="authenticationCapabilities" type="vim25:HostInternetScsiHbaAuthenticationCapabilities" />
                     <element name="authenticationProperties" type="vim25:HostInternetScsiHbaAuthenticationProperties" />
                     <element name="digestCapabilities" type="vim25:HostInternetScsiHbaDigestCapabilities" minOccurs="0" />
                     <element name="digestProperties" type="vim25:HostInternetScsiHbaDigestProperties" minOccurs="0" />
                     <element name="ipCapabilities" type="vim25:HostInternetScsiHbaIPCapabilities" />
                     <element name="ipProperties" type="vim25:HostInternetScsiHbaIPProperties" />
                     <element name="supportedAdvancedOptions" type="vim25:OptionDef" minOccurs="0" maxOccurs="unbounded" />
                     <element name="advancedOptions" type="vim25:HostInternetScsiHbaParamValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="iScsiName" type="xsd:string" />
                     <element name="iScsiAlias" type="xsd:string" minOccurs="0" />
                     <element name="configuredSendTarget" type="vim25:HostInternetScsiHbaSendTarget" minOccurs="0" maxOccurs="unbounded" />
                     <element name="configuredStaticTarget" type="vim25:HostInternetScsiHbaStaticTarget" minOccurs="0" maxOccurs="unbounded" />
                     <element name="maxSpeedMb" type="xsd:int" minOccurs="0" />
                     <element name="currentSpeedMb" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostProxySwitchSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="backing" type="vim25:DistributedVirtualSwitchHostMemberBacking" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostProxySwitchConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" minOccurs="0" />
                     <element name="uuid" type="xsd:string" />
                     <element name="spec" type="vim25:HostProxySwitchSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostProxySwitchConfig">
            <sequence>
               <element name="HostProxySwitchConfig" type="vim25:HostProxySwitchConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostProxySwitch">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="dvsUuid" type="xsd:string" />
                     <element name="dvsName" type="xsd:string" />
                     <element name="key" type="xsd:string" />
                     <element name="numPorts" type="xsd:int" />
                     <element name="numPortsAvailable" type="xsd:int" />
                     <element name="uplinkPort" type="vim25:KeyValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="mtu" type="xsd:int" minOccurs="0" />
                     <element name="pnic" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="spec" type="vim25:HostProxySwitchSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostProxySwitch">
            <sequence>
               <element name="HostProxySwitch" type="vim25:HostProxySwitch" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="HostIpConfigIpV6AddressConfigType">
            <restriction base="xsd:string">
               <enumeration value="other" />
               <enumeration value="manual" />
               <enumeration value="dhcp" />
               <enumeration value="linklayer" />
               <enumeration value="random" />
            </restriction>
         </simpleType>
         <simpleType name="HostIpConfigIpV6AddressStatus">
            <restriction base="xsd:string">
               <enumeration value="preferred" />
               <enumeration value="deprecated" />
               <enumeration value="invalid" />
               <enumeration value="inaccessible" />
               <enumeration value="unknown" />
               <enumeration value="tentative" />
               <enumeration value="duplicate" />
            </restriction>
         </simpleType>
         <complexType name="HostIpConfigIpV6Address">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                     <element name="prefixLength" type="xsd:int" />
                     <element name="origin" type="xsd:string" minOccurs="0" />
                     <element name="dadState" type="xsd:string" minOccurs="0" />
                     <element name="lifetime" type="xsd:dateTime" minOccurs="0" />
                     <element name="operation" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostIpConfigIpV6Address">
            <sequence>
               <element name="HostIpConfigIpV6Address" type="vim25:HostIpConfigIpV6Address" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostIpConfigIpV6AddressConfiguration">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ipV6Address" type="vim25:HostIpConfigIpV6Address" minOccurs="0" maxOccurs="unbounded" />
                     <element name="autoConfigurationEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="dhcpV6Enabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="dhcp" type="xsd:boolean" />
                     <element name="ipAddress" type="xsd:string" minOccurs="0" />
                     <element name="subnetMask" type="xsd:string" minOccurs="0" />
                     <element name="ipV6Config" type="vim25:HostIpConfigIpV6AddressConfiguration" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpRouteConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="defaultGateway" type="xsd:string" minOccurs="0" />
                     <element name="gatewayDevice" type="xsd:string" minOccurs="0" />
                     <element name="ipV6DefaultGateway" type="xsd:string" minOccurs="0" />
                     <element name="ipV6GatewayDevice" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpRouteConfigSpec">
            <complexContent>
               <extension base="vim25:HostIpRouteConfig">
                  <sequence>
                     <element name="gatewayDeviceConnection" type="vim25:HostVirtualNicConnection" minOccurs="0" />
                     <element name="ipV6GatewayDeviceConnection" type="vim25:HostVirtualNicConnection" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpRouteEntry">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="network" type="xsd:string" />
                     <element name="prefixLength" type="xsd:int" />
                     <element name="gateway" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostIpRouteEntry">
            <sequence>
               <element name="HostIpRouteEntry" type="vim25:HostIpRouteEntry" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostIpRouteOp">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" />
                     <element name="route" type="vim25:HostIpRouteEntry" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostIpRouteOp">
            <sequence>
               <element name="HostIpRouteOp" type="vim25:HostIpRouteOp" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostIpRouteTableConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ipRoute" type="vim25:HostIpRouteOp" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipv6Route" type="vim25:HostIpRouteOp" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpRouteTableInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ipRoute" type="vim25:HostIpRouteEntry" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipv6Route" type="vim25:HostIpRouteEntry" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostIpmiInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="bmcIpAddress" type="xsd:string" minOccurs="0" />
                     <element name="bmcMacAddress" type="xsd:string" minOccurs="0" />
                     <element name="login" type="xsd:string" minOccurs="0" />
                     <element name="password" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="KernelModuleSectionInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="address" type="xsd:long" />
                     <element name="length" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="KernelModuleInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                     <element name="version" type="xsd:string" />
                     <element name="filename" type="xsd:string" />
                     <element name="optionString" type="xsd:string" />
                     <element name="loaded" type="xsd:boolean" />
                     <element name="enabled" type="xsd:boolean" />
                     <element name="useCount" type="xsd:int" />
                     <element name="readOnlySection" type="vim25:KernelModuleSectionInfo" />
                     <element name="writableSection" type="vim25:KernelModuleSectionInfo" />
                     <element name="textSection" type="vim25:KernelModuleSectionInfo" />
                     <element name="dataSection" type="vim25:KernelModuleSectionInfo" />
                     <element name="bssSection" type="vim25:KernelModuleSectionInfo" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfKernelModuleInfo">
            <sequence>
               <element name="KernelModuleInfo" type="vim25:KernelModuleInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="QueryModulesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryModules"  type="vim25:QueryModulesRequestType" />
         <element name="QueryModulesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:KernelModuleInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateModuleOptionStringRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
               <element name="options" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UpdateModuleOptionString"  type="vim25:UpdateModuleOptionStringRequestType" />
         <element name="UpdateModuleOptionStringResponse">
            <complexType />
         </element>
         <complexType name="QueryConfiguredModuleOptionStringRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="QueryConfiguredModuleOptionString"  type="vim25:QueryConfiguredModuleOptionStringRequestType" />
         <element name="QueryConfiguredModuleOptionStringResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="HostLicenseSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="source" type="vim25:LicenseSource" minOccurs="0" />
                     <element name="editionKey" type="xsd:string" minOccurs="0" />
                     <element name="disabledFeatureKey" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="enabledFeatureKey" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="LinkDiscoveryProtocolConfigProtocolType">
            <restriction base="xsd:string">
               <enumeration value="cdp" />
               <enumeration value="lldp" />
            </restriction>
         </simpleType>
         <simpleType name="LinkDiscoveryProtocolConfigOperationType">
            <restriction base="xsd:string">
               <enumeration value="none" />
               <enumeration value="listen" />
               <enumeration value="advertise" />
               <enumeration value="both" />
            </restriction>
         </simpleType>
         <complexType name="LinkDiscoveryProtocolConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="protocol" type="xsd:string" />
                     <element name="operation" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostAccountSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="password" type="xsd:string" minOccurs="0" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostAccountSpec">
            <sequence>
               <element name="HostAccountSpec" type="vim25:HostAccountSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPosixAccountSpec">
            <complexContent>
               <extension base="vim25:HostAccountSpec">
                  <sequence>
                     <element name="posixId" type="xsd:int" minOccurs="0" />
                     <element name="shellAccess" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CreateUserRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="user" type="vim25:HostAccountSpec" />
            </sequence>
         </complexType>
         <element name="CreateUser"  type="vim25:CreateUserRequestType" />
         <element name="CreateUserResponse">
            <complexType />
         </element>
         <complexType name="UpdateUserRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="user" type="vim25:HostAccountSpec" />
            </sequence>
         </complexType>
         <element name="UpdateUser"  type="vim25:UpdateUserRequestType" />
         <element name="UpdateUserResponse">
            <complexType />
         </element>
         <complexType name="CreateGroupRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="group" type="vim25:HostAccountSpec" />
            </sequence>
         </complexType>
         <element name="CreateGroup"  type="vim25:CreateGroupRequestType" />
         <element name="CreateGroupResponse">
            <complexType />
         </element>
         <complexType name="RemoveUserRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="userName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RemoveUser"  type="vim25:RemoveUserRequestType" />
         <element name="RemoveUserResponse">
            <complexType />
         </element>
         <complexType name="RemoveGroupRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="groupName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RemoveGroup"  type="vim25:RemoveGroupRequestType" />
         <element name="RemoveGroupResponse">
            <complexType />
         </element>
         <complexType name="AssignUserToGroupRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="user" type="xsd:string" />
               <element name="group" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="AssignUserToGroup"  type="vim25:AssignUserToGroupRequestType" />
         <element name="AssignUserToGroupResponse">
            <complexType />
         </element>
         <complexType name="UnassignUserFromGroupRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="user" type="xsd:string" />
               <element name="group" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UnassignUserFromGroup"  type="vim25:UnassignUserFromGroupRequestType" />
         <element name="UnassignUserFromGroupResponse">
            <complexType />
         </element>
         <simpleType name="HostLowLevelProvisioningManagerReloadTarget">
            <restriction base="xsd:string">
               <enumeration value="currentConfig" />
               <enumeration value="snapshotConfig" />
            </restriction>
         </simpleType>
         <complexType name="ServiceConsoleReservationInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="serviceConsoleReservedCfg" type="xsd:long" />
                     <element name="serviceConsoleReserved" type="xsd:long" />
                     <element name="unreserved" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineMemoryAllocationPolicy">
            <restriction base="xsd:string">
               <enumeration value="swapNone" />
               <enumeration value="swapSome" />
               <enumeration value="swapMost" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineMemoryReservationInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="virtualMachineMin" type="xsd:long" />
                     <element name="virtualMachineMax" type="xsd:long" />
                     <element name="virtualMachineReserved" type="xsd:long" />
                     <element name="allocationPolicy" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineMemoryReservationSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="virtualMachineReserved" type="xsd:long" minOccurs="0" />
                     <element name="allocationPolicy" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ReconfigureServiceConsoleReservationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="cfgBytes" type="xsd:long" />
            </sequence>
         </complexType>
         <element name="ReconfigureServiceConsoleReservation"  type="vim25:ReconfigureServiceConsoleReservationRequestType" />
         <element name="ReconfigureServiceConsoleReservationResponse">
            <complexType />
         </element>
         <complexType name="ReconfigureVirtualMachineReservationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:VirtualMachineMemoryReservationSpec" />
            </sequence>
         </complexType>
         <element name="ReconfigureVirtualMachineReservation"  type="vim25:ReconfigureVirtualMachineReservationRequestType" />
         <element name="ReconfigureVirtualMachineReservationResponse">
            <complexType />
         </element>
         <complexType name="HostMemorySpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="serviceConsoleReservation" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostMountMode">
            <restriction base="xsd:string">
               <enumeration value="readWrite" />
               <enumeration value="readOnly" />
            </restriction>
         </simpleType>
         <complexType name="HostMountInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="path" type="xsd:string" minOccurs="0" />
                     <element name="accessMode" type="xsd:string" />
                     <element name="accessible" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="MultipathState">
            <restriction base="xsd:string">
               <enumeration value="standby" />
               <enumeration value="active" />
               <enumeration value="disabled" />
               <enumeration value="dead" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="HostMultipathInfoLogicalUnitPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="policy" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostMultipathInfoLogicalUnitStorageArrayTypePolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="policy" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostMultipathInfoFixedLogicalUnitPolicy">
            <complexContent>
               <extension base="vim25:HostMultipathInfoLogicalUnitPolicy">
                  <sequence>
                     <element name="prefer" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostMultipathInfoLogicalUnit">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="id" type="xsd:string" />
                     <element name="lun" type="xsd:string" />
                     <element name="path" type="vim25:HostMultipathInfoPath" maxOccurs="unbounded" />
                     <element name="policy" type="vim25:HostMultipathInfoLogicalUnitPolicy" />
                     <element name="storageArrayTypePolicy" type="vim25:HostMultipathInfoLogicalUnitStorageArrayTypePolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostMultipathInfoLogicalUnit">
            <sequence>
               <element name="HostMultipathInfoLogicalUnit" type="vim25:HostMultipathInfoLogicalUnit" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostMultipathInfoPath">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="pathState" type="xsd:string" />
                     <element name="state" type="xsd:string" minOccurs="0" />
                     <element name="isWorkingPath" type="xsd:boolean" minOccurs="0" />
                     <element name="adapter" type="xsd:string" />
                     <element name="lun" type="xsd:string" />
                     <element name="transport" type="vim25:HostTargetTransport" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostMultipathInfoPath">
            <sequence>
               <element name="HostMultipathInfoPath" type="vim25:HostMultipathInfoPath" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostMultipathInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="lun" type="vim25:HostMultipathInfoLogicalUnit" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostMultipathStateInfoPath">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="pathState" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostMultipathStateInfoPath">
            <sequence>
               <element name="HostMultipathStateInfoPath" type="vim25:HostMultipathStateInfoPath" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostMultipathStateInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="path" type="vim25:HostMultipathStateInfoPath" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNatServicePortForwardSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="hostPort" type="xsd:int" />
                     <element name="guestPort" type="xsd:int" />
                     <element name="guestIpAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostNatServicePortForwardSpec">
            <sequence>
               <element name="HostNatServicePortForwardSpec" type="vim25:HostNatServicePortForwardSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostNatServiceNameServiceSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="dnsAutoDetect" type="xsd:boolean" />
                     <element name="dnsPolicy" type="xsd:string" />
                     <element name="dnsRetries" type="xsd:int" />
                     <element name="dnsTimeout" type="xsd:int" />
                     <element name="dnsNameServer" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="nbdsTimeout" type="xsd:int" />
                     <element name="nbnsRetries" type="xsd:int" />
                     <element name="nbnsTimeout" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNatServiceSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="virtualSwitch" type="xsd:string" />
                     <element name="activeFtp" type="xsd:boolean" />
                     <element name="allowAnyOui" type="xsd:boolean" />
                     <element name="configPort" type="xsd:boolean" />
                     <element name="ipGatewayAddress" type="xsd:string" />
                     <element name="udpTimeout" type="xsd:int" />
                     <element name="portForward" type="vim25:HostNatServicePortForwardSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="nameService" type="vim25:HostNatServiceNameServiceSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNatServiceConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" minOccurs="0" />
                     <element name="key" type="xsd:string" />
                     <element name="spec" type="vim25:HostNatServiceSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostNatServiceConfig">
            <sequence>
               <element name="HostNatServiceConfig" type="vim25:HostNatServiceConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostNatService">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="spec" type="vim25:HostNatServiceSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostNatService">
            <sequence>
               <element name="HostNatService" type="vim25:HostNatService" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostNetCapabilities">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="canSetPhysicalNicLinkSpeed" type="xsd:boolean" />
                     <element name="supportsNicTeaming" type="xsd:boolean" />
                     <element name="nicTeamingPolicy" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="supportsVlan" type="xsd:boolean" />
                     <element name="usesServiceConsoleNic" type="xsd:boolean" />
                     <element name="supportsNetworkHints" type="xsd:boolean" />
                     <element name="maxPortGroupsPerVswitch" type="xsd:int" minOccurs="0" />
                     <element name="vswitchConfigSupported" type="xsd:boolean" />
                     <element name="vnicConfigSupported" type="xsd:boolean" />
                     <element name="ipRouteConfigSupported" type="xsd:boolean" />
                     <element name="dnsConfigSupported" type="xsd:boolean" />
                     <element name="dhcpOnVnicSupported" type="xsd:boolean" />
                     <element name="ipV6Supported" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetOffloadCapabilities">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="csumOffload" type="xsd:boolean" minOccurs="0" />
                     <element name="tcpSegmentation" type="xsd:boolean" minOccurs="0" />
                     <element name="zeroCopyXmit" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkConfigResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vnicDevice" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="consoleVnicDevice" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vswitch" type="vim25:HostVirtualSwitchConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="proxySwitch" type="vim25:HostProxySwitchConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="portgroup" type="vim25:HostPortGroupConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="pnic" type="vim25:PhysicalNicConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vnic" type="vim25:HostVirtualNicConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="consoleVnic" type="vim25:HostVirtualNicConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dnsConfig" type="vim25:HostDnsConfig" minOccurs="0" />
                     <element name="ipRouteConfig" type="vim25:HostIpRouteConfig" minOccurs="0" />
                     <element name="consoleIpRouteConfig" type="vim25:HostIpRouteConfig" minOccurs="0" />
                     <element name="routeTableConfig" type="vim25:HostIpRouteTableConfig" minOccurs="0" />
                     <element name="dhcp" type="vim25:HostDhcpServiceConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="nat" type="vim25:HostNatServiceConfig" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipV6Enabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vswitch" type="vim25:HostVirtualSwitch" minOccurs="0" maxOccurs="unbounded" />
                     <element name="proxySwitch" type="vim25:HostProxySwitch" minOccurs="0" maxOccurs="unbounded" />
                     <element name="portgroup" type="vim25:HostPortGroup" minOccurs="0" maxOccurs="unbounded" />
                     <element name="pnic" type="vim25:PhysicalNic" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vnic" type="vim25:HostVirtualNic" minOccurs="0" maxOccurs="unbounded" />
                     <element name="consoleVnic" type="vim25:HostVirtualNic" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dnsConfig" type="vim25:HostDnsConfig" minOccurs="0" />
                     <element name="ipRouteConfig" type="vim25:HostIpRouteConfig" minOccurs="0" />
                     <element name="consoleIpRouteConfig" type="vim25:HostIpRouteConfig" minOccurs="0" />
                     <element name="routeTableInfo" type="vim25:HostIpRouteTableInfo" minOccurs="0" />
                     <element name="dhcp" type="vim25:HostDhcpService" minOccurs="0" maxOccurs="unbounded" />
                     <element name="nat" type="vim25:HostNatService" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipV6Enabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkSecurityPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="allowPromiscuous" type="xsd:boolean" minOccurs="0" />
                     <element name="macChanges" type="xsd:boolean" minOccurs="0" />
                     <element name="forgedTransmits" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkTrafficShapingPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="averageBandwidth" type="xsd:long" minOccurs="0" />
                     <element name="peakBandwidth" type="xsd:long" minOccurs="0" />
                     <element name="burstSize" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNicFailureCriteria">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="checkSpeed" type="xsd:string" minOccurs="0" />
                     <element name="speed" type="xsd:int" minOccurs="0" />
                     <element name="checkDuplex" type="xsd:boolean" minOccurs="0" />
                     <element name="fullDuplex" type="xsd:boolean" minOccurs="0" />
                     <element name="checkErrorPercent" type="xsd:boolean" minOccurs="0" />
                     <element name="percentage" type="xsd:int" minOccurs="0" />
                     <element name="checkBeacon" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNicOrderPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="activeNic" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="standbyNic" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNicTeamingPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="policy" type="xsd:string" minOccurs="0" />
                     <element name="reversePolicy" type="xsd:boolean" minOccurs="0" />
                     <element name="notifySwitches" type="xsd:boolean" minOccurs="0" />
                     <element name="rollingOrder" type="xsd:boolean" minOccurs="0" />
                     <element name="failureCriteria" type="vim25:HostNicFailureCriteria" minOccurs="0" />
                     <element name="nicOrder" type="vim25:HostNicOrderPolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostNetworkPolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="security" type="vim25:HostNetworkSecurityPolicy" minOccurs="0" />
                     <element name="nicTeaming" type="vim25:HostNicTeamingPolicy" minOccurs="0" />
                     <element name="offloadPolicy" type="vim25:HostNetOffloadCapabilities" minOccurs="0" />
                     <element name="shapingPolicy" type="vim25:HostNetworkTrafficShapingPolicy" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdateNetworkConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:HostNetworkConfig" />
               <element name="changeMode" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UpdateNetworkConfig"  type="vim25:UpdateNetworkConfigRequestType" />
         <element name="UpdateNetworkConfigResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostNetworkConfigResult" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateDnsConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:HostDnsConfig" />
            </sequence>
         </complexType>
         <element name="UpdateDnsConfig"  type="vim25:UpdateDnsConfigRequestType" />
         <element name="UpdateDnsConfigResponse">
            <complexType />
         </element>
         <complexType name="UpdateIpRouteConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:HostIpRouteConfig" />
            </sequence>
         </complexType>
         <element name="UpdateIpRouteConfig"  type="vim25:UpdateIpRouteConfigRequestType" />
         <element name="UpdateIpRouteConfigResponse">
            <complexType />
         </element>
         <complexType name="UpdateConsoleIpRouteConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:HostIpRouteConfig" />
            </sequence>
         </complexType>
         <element name="UpdateConsoleIpRouteConfig"  type="vim25:UpdateConsoleIpRouteConfigRequestType" />
         <element name="UpdateConsoleIpRouteConfigResponse">
            <complexType />
         </element>
         <complexType name="UpdateIpRouteTableConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:HostIpRouteTableConfig" />
            </sequence>
         </complexType>
         <element name="UpdateIpRouteTableConfig"  type="vim25:UpdateIpRouteTableConfigRequestType" />
         <element name="UpdateIpRouteTableConfigResponse">
            <complexType />
         </element>
         <complexType name="AddVirtualSwitchRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vswitchName" type="xsd:string" />
               <element name="spec" type="vim25:HostVirtualSwitchSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="AddVirtualSwitch"  type="vim25:AddVirtualSwitchRequestType" />
         <element name="AddVirtualSwitchResponse">
            <complexType />
         </element>
         <complexType name="RemoveVirtualSwitchRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vswitchName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RemoveVirtualSwitch"  type="vim25:RemoveVirtualSwitchRequestType" />
         <element name="RemoveVirtualSwitchResponse">
            <complexType />
         </element>
         <complexType name="UpdateVirtualSwitchRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vswitchName" type="xsd:string" />
               <element name="spec" type="vim25:HostVirtualSwitchSpec" />
            </sequence>
         </complexType>
         <element name="UpdateVirtualSwitch"  type="vim25:UpdateVirtualSwitchRequestType" />
         <element name="UpdateVirtualSwitchResponse">
            <complexType />
         </element>
         <complexType name="AddPortGroupRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="portgrp" type="vim25:HostPortGroupSpec" />
            </sequence>
         </complexType>
         <element name="AddPortGroup"  type="vim25:AddPortGroupRequestType" />
         <element name="AddPortGroupResponse">
            <complexType />
         </element>
         <complexType name="RemovePortGroupRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="pgName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RemovePortGroup"  type="vim25:RemovePortGroupRequestType" />
         <element name="RemovePortGroupResponse">
            <complexType />
         </element>
         <complexType name="UpdatePortGroupRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="pgName" type="xsd:string" />
               <element name="portgrp" type="vim25:HostPortGroupSpec" />
            </sequence>
         </complexType>
         <element name="UpdatePortGroup"  type="vim25:UpdatePortGroupRequestType" />
         <element name="UpdatePortGroupResponse">
            <complexType />
         </element>
         <complexType name="UpdatePhysicalNicLinkSpeedRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="device" type="xsd:string" />
               <element name="linkSpeed" type="vim25:PhysicalNicLinkInfo" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="UpdatePhysicalNicLinkSpeed"  type="vim25:UpdatePhysicalNicLinkSpeedRequestType" />
         <element name="UpdatePhysicalNicLinkSpeedResponse">
            <complexType />
         </element>
         <complexType name="QueryNetworkHintRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="device" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryNetworkHint"  type="vim25:QueryNetworkHintRequestType" />
         <element name="QueryNetworkHintResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:PhysicalNicHintInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="AddVirtualNicRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="portgroup" type="xsd:string" />
               <element name="nic" type="vim25:HostVirtualNicSpec" />
            </sequence>
         </complexType>
         <element name="AddVirtualNic"  type="vim25:AddVirtualNicRequestType" />
         <element name="AddVirtualNicResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RemoveVirtualNicRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="device" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RemoveVirtualNic"  type="vim25:RemoveVirtualNicRequestType" />
         <element name="RemoveVirtualNicResponse">
            <complexType />
         </element>
         <complexType name="UpdateVirtualNicRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="device" type="xsd:string" />
               <element name="nic" type="vim25:HostVirtualNicSpec" />
            </sequence>
         </complexType>
         <element name="UpdateVirtualNic"  type="vim25:UpdateVirtualNicRequestType" />
         <element name="UpdateVirtualNicResponse">
            <complexType />
         </element>
         <complexType name="AddServiceConsoleVirtualNicRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="portgroup" type="xsd:string" />
               <element name="nic" type="vim25:HostVirtualNicSpec" />
            </sequence>
         </complexType>
         <element name="AddServiceConsoleVirtualNic"  type="vim25:AddServiceConsoleVirtualNicRequestType" />
         <element name="AddServiceConsoleVirtualNicResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RemoveServiceConsoleVirtualNicRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="device" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RemoveServiceConsoleVirtualNic"  type="vim25:RemoveServiceConsoleVirtualNicRequestType" />
         <element name="RemoveServiceConsoleVirtualNicResponse">
            <complexType />
         </element>
         <complexType name="UpdateServiceConsoleVirtualNicRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="device" type="xsd:string" />
               <element name="nic" type="vim25:HostVirtualNicSpec" />
            </sequence>
         </complexType>
         <element name="UpdateServiceConsoleVirtualNic"  type="vim25:UpdateServiceConsoleVirtualNicRequestType" />
         <element name="UpdateServiceConsoleVirtualNicResponse">
            <complexType />
         </element>
         <complexType name="RestartServiceConsoleVirtualNicRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="device" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RestartServiceConsoleVirtualNic"  type="vim25:RestartServiceConsoleVirtualNicRequestType" />
         <element name="RestartServiceConsoleVirtualNicResponse">
            <complexType />
         </element>
         <complexType name="RefreshNetworkSystemRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RefreshNetworkSystem"  type="vim25:RefreshNetworkSystemRequestType" />
         <element name="RefreshNetworkSystemResponse">
            <complexType />
         </element>
         <complexType name="HostNtpConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="server" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostNumericSensorHealthState">
            <restriction base="xsd:string">
               <enumeration value="unknown" />
               <enumeration value="green" />
               <enumeration value="yellow" />
               <enumeration value="red" />
            </restriction>
         </simpleType>
         <simpleType name="HostNumericSensorType">
            <restriction base="xsd:string">
               <enumeration value="fan" />
               <enumeration value="power" />
               <enumeration value="temperature" />
               <enumeration value="voltage" />
               <enumeration value="other" />
            </restriction>
         </simpleType>
         <complexType name="HostNumericSensorInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="healthState" type="vim25:ElementDescription" minOccurs="0" />
                     <element name="currentReading" type="xsd:long" />
                     <element name="unitModifier" type="xsd:int" />
                     <element name="baseUnits" type="xsd:string" />
                     <element name="rateUnits" type="xsd:string" minOccurs="0" />
                     <element name="sensorType" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostNumericSensorInfo">
            <sequence>
               <element name="HostNumericSensorInfo" type="vim25:HostNumericSensorInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPatchManagerResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="version" type="xsd:string" />
                     <element name="status" type="vim25:HostPatchManagerStatus" minOccurs="0" maxOccurs="unbounded" />
                     <element name="xmlResult" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostPatchManagerReason">
            <restriction base="xsd:string">
               <enumeration value="obsoleted" />
               <enumeration value="missingPatch" />
               <enumeration value="missingLib" />
               <enumeration value="hasDependentPatch" />
               <enumeration value="conflictPatch" />
               <enumeration value="conflictLib" />
            </restriction>
         </simpleType>
         <simpleType name="HostPatchManagerIntegrityStatus">
            <restriction base="xsd:string">
               <enumeration value="validated" />
               <enumeration value="keyNotFound" />
               <enumeration value="keyRevoked" />
               <enumeration value="keyExpired" />
               <enumeration value="digestMismatch" />
               <enumeration value="notEnoughSignatures" />
               <enumeration value="validationError" />
            </restriction>
         </simpleType>
         <simpleType name="HostPatchManagerInstallState">
            <restriction base="xsd:string">
               <enumeration value="hostRestarted" />
               <enumeration value="imageActive" />
            </restriction>
         </simpleType>
         <complexType name="HostPatchManagerStatusPrerequisitePatch">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="installState" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPatchManagerStatusPrerequisitePatch">
            <sequence>
               <element name="HostPatchManagerStatusPrerequisitePatch" type="vim25:HostPatchManagerStatusPrerequisitePatch" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPatchManagerStatus">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="applicable" type="xsd:boolean" />
                     <element name="reason" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="integrity" type="xsd:string" minOccurs="0" />
                     <element name="installed" type="xsd:boolean" />
                     <element name="installState" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="prerequisitePatch" type="vim25:HostPatchManagerStatusPrerequisitePatch" minOccurs="0" maxOccurs="unbounded" />
                     <element name="restartRequired" type="xsd:boolean" />
                     <element name="reconnectRequired" type="xsd:boolean" />
                     <element name="vmOffRequired" type="xsd:boolean" />
                     <element name="supersededPatchIds" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPatchManagerStatus">
            <sequence>
               <element name="HostPatchManagerStatus" type="vim25:HostPatchManagerStatus" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPatchManagerLocator">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="url" type="xsd:string" />
                     <element name="proxy" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostPatchManagerPatchManagerOperationSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="proxy" type="xsd:string" minOccurs="0" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                     <element name="userName" type="xsd:string" minOccurs="0" />
                     <element name="password" type="xsd:string" minOccurs="0" />
                     <element name="cmdOption" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CheckHostPatchRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="metaUrls" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="bundleUrls" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="spec" type="vim25:HostPatchManagerPatchManagerOperationSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="CheckHostPatch_Task"  type="vim25:CheckHostPatchRequestType" />
         <element name="CheckHostPatch_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ScanHostPatchRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="repository" type="vim25:HostPatchManagerLocator" />
               <element name="updateID" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="ScanHostPatch_Task"  type="vim25:ScanHostPatchRequestType" />
         <element name="ScanHostPatch_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ScanHostPatchV2RequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="metaUrls" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="bundleUrls" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="spec" type="vim25:HostPatchManagerPatchManagerOperationSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="ScanHostPatchV2_Task"  type="vim25:ScanHostPatchV2RequestType" />
         <element name="ScanHostPatchV2_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="StageHostPatchRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="metaUrls" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="bundleUrls" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="vibUrls" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="spec" type="vim25:HostPatchManagerPatchManagerOperationSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="StageHostPatch_Task"  type="vim25:StageHostPatchRequestType" />
         <element name="StageHostPatch_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="InstallHostPatchRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="repository" type="vim25:HostPatchManagerLocator" />
               <element name="updateID" type="xsd:string" />
               <element name="force" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="InstallHostPatch_Task"  type="vim25:InstallHostPatchRequestType" />
         <element name="InstallHostPatch_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="InstallHostPatchV2RequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="metaUrls" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="bundleUrls" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="vibUrls" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="spec" type="vim25:HostPatchManagerPatchManagerOperationSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="InstallHostPatchV2_Task"  type="vim25:InstallHostPatchV2RequestType" />
         <element name="InstallHostPatchV2_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UninstallHostPatchRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="bulletinIds" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="spec" type="vim25:HostPatchManagerPatchManagerOperationSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="UninstallHostPatch_Task"  type="vim25:UninstallHostPatchRequestType" />
         <element name="UninstallHostPatch_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryHostPatchRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:HostPatchManagerPatchManagerOperationSpec" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryHostPatch_Task"  type="vim25:QueryHostPatchRequestType" />
         <element name="QueryHostPatch_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="HostPathSelectionPolicyOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="policy" type="vim25:ElementDescription" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPathSelectionPolicyOption">
            <sequence>
               <element name="HostPathSelectionPolicyOption" type="vim25:HostPathSelectionPolicyOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPciDevice">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="classId" type="xsd:short" />
                     <element name="bus" type="xsd:byte" />
                     <element name="slot" type="xsd:byte" />
                     <element name="function" type="xsd:byte" />
                     <element name="vendorId" type="xsd:short" />
                     <element name="subVendorId" type="xsd:short" />
                     <element name="vendorName" type="xsd:string" />
                     <element name="deviceId" type="xsd:short" />
                     <element name="subDeviceId" type="xsd:short" />
                     <element name="parentBridge" type="xsd:string" minOccurs="0" />
                     <element name="deviceName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPciDevice">
            <sequence>
               <element name="HostPciDevice" type="vim25:HostPciDevice" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPciPassthruConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="passthruEnabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPciPassthruConfig">
            <sequence>
               <element name="HostPciPassthruConfig" type="vim25:HostPciPassthruConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPciPassthruInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="dependentDevice" type="xsd:string" />
                     <element name="passthruEnabled" type="xsd:boolean" />
                     <element name="passthruCapable" type="xsd:boolean" />
                     <element name="passthruActive" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPciPassthruInfo">
            <sequence>
               <element name="HostPciPassthruInfo" type="vim25:HostPciPassthruInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="RefreshRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="Refresh"  type="vim25:RefreshRequestType" />
         <element name="RefreshResponse">
            <complexType />
         </element>
         <complexType name="UpdatePassthruConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:HostPciPassthruConfig" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="UpdatePassthruConfig"  type="vim25:UpdatePassthruConfigRequestType" />
         <element name="UpdatePassthruConfigResponse">
            <complexType />
         </element>
         <complexType name="PhysicalNicSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ip" type="vim25:HostIpConfig" minOccurs="0" />
                     <element name="linkSpeed" type="vim25:PhysicalNicLinkInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PhysicalNicConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="spec" type="vim25:PhysicalNicSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicConfig">
            <sequence>
               <element name="PhysicalNicConfig" type="vim25:PhysicalNicConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNicLinkInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="speedMb" type="xsd:int" />
                     <element name="duplex" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicLinkInfo">
            <sequence>
               <element name="PhysicalNicLinkInfo" type="vim25:PhysicalNicLinkInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNicHint">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vlanId" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PhysicalNicIpHint">
            <complexContent>
               <extension base="vim25:PhysicalNicHint">
                  <sequence>
                     <element name="ipSubnet" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicIpHint">
            <sequence>
               <element name="PhysicalNicIpHint" type="vim25:PhysicalNicIpHint" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNicNameHint">
            <complexContent>
               <extension base="vim25:PhysicalNicHint">
                  <sequence>
                     <element name="network" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicNameHint">
            <sequence>
               <element name="PhysicalNicNameHint" type="vim25:PhysicalNicNameHint" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNicHintInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="subnet" type="vim25:PhysicalNicIpHint" minOccurs="0" maxOccurs="unbounded" />
                     <element name="network" type="vim25:PhysicalNicNameHint" minOccurs="0" maxOccurs="unbounded" />
                     <element name="connectedSwitchPort" type="vim25:PhysicalNicCdpInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicHintInfo">
            <sequence>
               <element name="PhysicalNicHintInfo" type="vim25:PhysicalNicHintInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PhysicalNicCdpDeviceCapability">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="router" type="xsd:boolean" />
                     <element name="transparentBridge" type="xsd:boolean" />
                     <element name="sourceRouteBridge" type="xsd:boolean" />
                     <element name="networkSwitch" type="xsd:boolean" />
                     <element name="host" type="xsd:boolean" />
                     <element name="igmpEnabled" type="xsd:boolean" />
                     <element name="repeater" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PhysicalNicCdpInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="cdpVersion" type="xsd:int" minOccurs="0" />
                     <element name="timeout" type="xsd:int" minOccurs="0" />
                     <element name="ttl" type="xsd:int" minOccurs="0" />
                     <element name="samples" type="xsd:int" minOccurs="0" />
                     <element name="devId" type="xsd:string" minOccurs="0" />
                     <element name="address" type="xsd:string" minOccurs="0" />
                     <element name="portId" type="xsd:string" minOccurs="0" />
                     <element name="deviceCapability" type="vim25:PhysicalNicCdpDeviceCapability" minOccurs="0" />
                     <element name="softwareVersion" type="xsd:string" minOccurs="0" />
                     <element name="hardwarePlatform" type="xsd:string" minOccurs="0" />
                     <element name="ipPrefix" type="xsd:string" minOccurs="0" />
                     <element name="ipPrefixLen" type="xsd:int" minOccurs="0" />
                     <element name="vlan" type="xsd:int" minOccurs="0" />
                     <element name="fullDuplex" type="xsd:boolean" minOccurs="0" />
                     <element name="mtu" type="xsd:int" minOccurs="0" />
                     <element name="systemName" type="xsd:string" minOccurs="0" />
                     <element name="systemOID" type="xsd:string" minOccurs="0" />
                     <element name="mgmtAddr" type="xsd:string" minOccurs="0" />
                     <element name="location" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PhysicalNic">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="device" type="xsd:string" />
                     <element name="pci" type="xsd:string" />
                     <element name="driver" type="xsd:string" minOccurs="0" />
                     <element name="linkSpeed" type="vim25:PhysicalNicLinkInfo" minOccurs="0" />
                     <element name="validLinkSpecification" type="vim25:PhysicalNicLinkInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="spec" type="vim25:PhysicalNicSpec" />
                     <element name="wakeOnLanSupported" type="xsd:boolean" />
                     <element name="mac" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNic">
            <sequence>
               <element name="PhysicalNic" type="vim25:PhysicalNic" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPlugStoreTopologyAdapter">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="adapter" type="xsd:string" />
                     <element name="path" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPlugStoreTopologyAdapter">
            <sequence>
               <element name="HostPlugStoreTopologyAdapter" type="vim25:HostPlugStoreTopologyAdapter" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPlugStoreTopologyPath">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="channelNumber" type="xsd:int" minOccurs="0" />
                     <element name="targetNumber" type="xsd:int" minOccurs="0" />
                     <element name="lunNumber" type="xsd:int" minOccurs="0" />
                     <element name="adapter" type="xsd:string" minOccurs="0" />
                     <element name="target" type="xsd:string" minOccurs="0" />
                     <element name="device" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPlugStoreTopologyPath">
            <sequence>
               <element name="HostPlugStoreTopologyPath" type="vim25:HostPlugStoreTopologyPath" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPlugStoreTopologyDevice">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="lun" type="xsd:string" />
                     <element name="path" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPlugStoreTopologyDevice">
            <sequence>
               <element name="HostPlugStoreTopologyDevice" type="vim25:HostPlugStoreTopologyDevice" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPlugStoreTopologyPlugin">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="device" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="claimedPath" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPlugStoreTopologyPlugin">
            <sequence>
               <element name="HostPlugStoreTopologyPlugin" type="vim25:HostPlugStoreTopologyPlugin" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPlugStoreTopologyTarget">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="transport" type="vim25:HostTargetTransport" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPlugStoreTopologyTarget">
            <sequence>
               <element name="HostPlugStoreTopologyTarget" type="vim25:HostPlugStoreTopologyTarget" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPlugStoreTopology">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="adapter" type="vim25:HostPlugStoreTopologyAdapter" minOccurs="0" maxOccurs="unbounded" />
                     <element name="path" type="vim25:HostPlugStoreTopologyPath" minOccurs="0" maxOccurs="unbounded" />
                     <element name="target" type="vim25:HostPlugStoreTopologyTarget" minOccurs="0" maxOccurs="unbounded" />
                     <element name="device" type="vim25:HostPlugStoreTopologyDevice" minOccurs="0" maxOccurs="unbounded" />
                     <element name="plugin" type="vim25:HostPlugStoreTopologyPlugin" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="PortGroupConnecteeType">
            <restriction base="xsd:string">
               <enumeration value="virtualMachine" />
               <enumeration value="systemManagement" />
               <enumeration value="host" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="HostPortGroupSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="vlanId" type="xsd:int" />
                     <element name="vswitchName" type="xsd:string" />
                     <element name="policy" type="vim25:HostNetworkPolicy" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostPortGroupConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" minOccurs="0" />
                     <element name="spec" type="vim25:HostPortGroupSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPortGroupConfig">
            <sequence>
               <element name="HostPortGroupConfig" type="vim25:HostPortGroupConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPortGroupPort">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="mac" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="type" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPortGroupPort">
            <sequence>
               <element name="HostPortGroupPort" type="vim25:HostPortGroupPort" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPortGroup">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="port" type="vim25:HostPortGroupPort" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vswitch" type="xsd:string" minOccurs="0" />
                     <element name="computedPolicy" type="vim25:HostNetworkPolicy" />
                     <element name="spec" type="vim25:HostPortGroupSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPortGroup">
            <sequence>
               <element name="HostPortGroup" type="vim25:HostPortGroup" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostResignatureRescanResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="rescan" type="vim25:HostVmfsRescanResult" minOccurs="0" maxOccurs="unbounded" />
                     <element name="result" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostFirewallRuleDirection">
            <restriction base="xsd:string">
               <enumeration value="inbound" />
               <enumeration value="outbound" />
            </restriction>
         </simpleType>
         <simpleType name="HostFirewallRuleProtocol">
            <restriction base="xsd:string">
               <enumeration value="tcp" />
               <enumeration value="udp" />
            </restriction>
         </simpleType>
         <complexType name="HostFirewallRule">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="port" type="xsd:int" />
                     <element name="endPort" type="xsd:int" minOccurs="0" />
                     <element name="direction" type="vim25:HostFirewallRuleDirection" />
                     <element name="protocol" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostFirewallRule">
            <sequence>
               <element name="HostFirewallRule" type="vim25:HostFirewallRule" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostFirewallRuleset">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="label" type="xsd:string" />
                     <element name="required" type="xsd:boolean" />
                     <element name="rule" type="vim25:HostFirewallRule" maxOccurs="unbounded" />
                     <element name="service" type="xsd:string" minOccurs="0" />
                     <element name="enabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostFirewallRuleset">
            <sequence>
               <element name="HostFirewallRuleset" type="vim25:HostFirewallRuleset" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostRuntimeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="connectionState" type="vim25:HostSystemConnectionState" />
                     <element name="powerState" type="vim25:HostSystemPowerState" />
                     <element name="inMaintenanceMode" type="xsd:boolean" />
                     <element name="bootTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="healthSystemRuntime" type="vim25:HealthSystemRuntime" minOccurs="0" />
                     <element name="tpmPcrValues" type="vim25:HostTpmDigestInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostScsiDiskPartition">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="diskName" type="xsd:string" />
                     <element name="partition" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostScsiDiskPartition">
            <sequence>
               <element name="HostScsiDiskPartition" type="vim25:HostScsiDiskPartition" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostScsiDisk">
            <complexContent>
               <extension base="vim25:ScsiLun">
                  <sequence>
                     <element name="capacity" type="vim25:HostDiskDimensionsLba" />
                     <element name="devicePath" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostScsiDisk">
            <sequence>
               <element name="HostScsiDisk" type="vim25:HostScsiDisk" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="ScsiLunType">
            <restriction base="xsd:string">
               <enumeration value="disk" />
               <enumeration value="tape" />
               <enumeration value="printer" />
               <enumeration value="processor" />
               <enumeration value="worm" />
               <enumeration value="cdrom" />
               <enumeration value="scanner" />
               <enumeration value="opticalDevice" />
               <enumeration value="mediaChanger" />
               <enumeration value="communications" />
               <enumeration value="storageArrayController" />
               <enumeration value="enclosure" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="ScsiLunCapabilities">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="updateDisplayNameSupported" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScsiLunDurableName">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="namespace" type="xsd:string" />
                     <element name="namespaceId" type="xsd:byte" />
                     <element name="data" type="xsd:byte" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfScsiLunDurableName">
            <sequence>
               <element name="ScsiLunDurableName" type="vim25:ScsiLunDurableName" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="ScsiLunState">
            <restriction base="xsd:string">
               <enumeration value="unknownState" />
               <enumeration value="ok" />
               <enumeration value="error" />
               <enumeration value="off" />
               <enumeration value="quiesced" />
               <enumeration value="degraded" />
               <enumeration value="lostCommunication" />
            </restriction>
         </simpleType>
         <simpleType name="ScsiLunDescriptorQuality">
            <restriction base="xsd:string">
               <enumeration value="highQuality" />
               <enumeration value="mediumQuality" />
               <enumeration value="lowQuality" />
               <enumeration value="unknownQuality" />
            </restriction>
         </simpleType>
         <complexType name="ScsiLunDescriptor">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="quality" type="xsd:string" />
                     <element name="id" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfScsiLunDescriptor">
            <sequence>
               <element name="ScsiLunDescriptor" type="vim25:ScsiLunDescriptor" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ScsiLun">
            <complexContent>
               <extension base="vim25:HostDevice">
                  <sequence>
                     <element name="key" type="xsd:string" minOccurs="0" />
                     <element name="uuid" type="xsd:string" />
                     <element name="descriptor" type="vim25:ScsiLunDescriptor" minOccurs="0" maxOccurs="unbounded" />
                     <element name="canonicalName" type="xsd:string" minOccurs="0" />
                     <element name="displayName" type="xsd:string" minOccurs="0" />
                     <element name="lunType" type="xsd:string" />
                     <element name="vendor" type="xsd:string" minOccurs="0" />
                     <element name="model" type="xsd:string" minOccurs="0" />
                     <element name="revision" type="xsd:string" minOccurs="0" />
                     <element name="scsiLevel" type="xsd:int" minOccurs="0" />
                     <element name="serialNumber" type="xsd:string" minOccurs="0" />
                     <element name="durableName" type="vim25:ScsiLunDurableName" minOccurs="0" />
                     <element name="alternateName" type="vim25:ScsiLunDurableName" minOccurs="0" maxOccurs="unbounded" />
                     <element name="standardInquiry" type="xsd:byte" minOccurs="0" maxOccurs="unbounded" />
                     <element name="queueDepth" type="xsd:int" minOccurs="0" />
                     <element name="operationalState" type="xsd:string" maxOccurs="unbounded" />
                     <element name="capabilities" type="vim25:ScsiLunCapabilities" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfScsiLun">
            <sequence>
               <element name="ScsiLun" type="vim25:ScsiLun" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostScsiTopologyInterface">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="adapter" type="xsd:string" />
                     <element name="target" type="vim25:HostScsiTopologyTarget" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostScsiTopologyInterface">
            <sequence>
               <element name="HostScsiTopologyInterface" type="vim25:HostScsiTopologyInterface" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostScsiTopologyTarget">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="target" type="xsd:int" />
                     <element name="lun" type="vim25:HostScsiTopologyLun" minOccurs="0" maxOccurs="unbounded" />
                     <element name="transport" type="vim25:HostTargetTransport" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostScsiTopologyTarget">
            <sequence>
               <element name="HostScsiTopologyTarget" type="vim25:HostScsiTopologyTarget" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostScsiTopologyLun">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="lun" type="xsd:int" />
                     <element name="scsiLun" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostScsiTopologyLun">
            <sequence>
               <element name="HostScsiTopologyLun" type="vim25:HostScsiTopologyLun" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostScsiTopology">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="adapter" type="vim25:HostScsiTopologyInterface" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostSecuritySpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="adminPassword" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostServicePolicy">
            <restriction base="xsd:string">
               <enumeration value="on" />
               <enumeration value="automatic" />
               <enumeration value="off" />
            </restriction>
         </simpleType>
         <complexType name="HostService">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="label" type="xsd:string" />
                     <element name="required" type="xsd:boolean" />
                     <element name="uninstallable" type="xsd:boolean" />
                     <element name="running" type="xsd:boolean" />
                     <element name="ruleset" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="policy" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostService">
            <sequence>
               <element name="HostService" type="vim25:HostService" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostServiceConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="serviceId" type="xsd:string" />
                     <element name="startupPolicy" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostServiceConfig">
            <sequence>
               <element name="HostServiceConfig" type="vim25:HostServiceConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostServiceInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="service" type="vim25:HostService" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdateServicePolicyRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="id" type="xsd:string" />
               <element name="policy" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UpdateServicePolicy"  type="vim25:UpdateServicePolicyRequestType" />
         <element name="UpdateServicePolicyResponse">
            <complexType />
         </element>
         <complexType name="StartServiceRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="id" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="StartService"  type="vim25:StartServiceRequestType" />
         <element name="StartServiceResponse">
            <complexType />
         </element>
         <complexType name="StopServiceRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="id" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="StopService"  type="vim25:StopServiceRequestType" />
         <element name="StopServiceResponse">
            <complexType />
         </element>
         <complexType name="RestartServiceRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="id" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RestartService"  type="vim25:RestartServiceRequestType" />
         <element name="RestartServiceResponse">
            <complexType />
         </element>
         <complexType name="UninstallServiceRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="id" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UninstallService"  type="vim25:UninstallServiceRequestType" />
         <element name="UninstallServiceResponse">
            <complexType />
         </element>
         <complexType name="RefreshServicesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RefreshServices"  type="vim25:RefreshServicesRequestType" />
         <element name="RefreshServicesResponse">
            <complexType />
         </element>
         <complexType name="HostSnmpDestination">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="hostName" type="xsd:string" />
                     <element name="port" type="xsd:int" />
                     <element name="community" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostSnmpDestination">
            <sequence>
               <element name="HostSnmpDestination" type="vim25:HostSnmpDestination" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostSnmpConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="port" type="xsd:int" minOccurs="0" />
                     <element name="readOnlyCommunities" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="trapTargets" type="vim25:HostSnmpDestination" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostSnmpAgentCapability">
            <restriction base="xsd:string">
               <enumeration value="COMPLETE" />
               <enumeration value="DIAGNOSTICS" />
               <enumeration value="CONFIGURATION" />
            </restriction>
         </simpleType>
         <complexType name="HostSnmpSystemAgentLimits">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="maxReadOnlyCommunities" type="xsd:int" />
                     <element name="maxTrapDestinations" type="xsd:int" />
                     <element name="maxCommunityLength" type="xsd:int" />
                     <element name="maxBufferSize" type="xsd:int" />
                     <element name="capability" type="vim25:HostSnmpAgentCapability" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ReconfigureSnmpAgentRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:HostSnmpConfigSpec" />
            </sequence>
         </complexType>
         <element name="ReconfigureSnmpAgent"  type="vim25:ReconfigureSnmpAgentRequestType" />
         <element name="ReconfigureSnmpAgentResponse">
            <complexType />
         </element>
         <complexType name="SendTestNotificationRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="SendTestNotification"  type="vim25:SendTestNotificationRequestType" />
         <element name="SendTestNotificationResponse">
            <complexType />
         </element>
         <complexType name="HostSslThumbprintInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="principal" type="xsd:string" />
                     <element name="sslThumbprints" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostStorageArrayTypePolicyOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="policy" type="vim25:ElementDescription" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostStorageArrayTypePolicyOption">
            <sequence>
               <element name="HostStorageArrayTypePolicyOption" type="vim25:HostStorageArrayTypePolicyOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostStorageDeviceInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="hostBusAdapter" type="vim25:HostHostBusAdapter" minOccurs="0" maxOccurs="unbounded" />
                     <element name="scsiLun" type="vim25:ScsiLun" minOccurs="0" maxOccurs="unbounded" />
                     <element name="scsiTopology" type="vim25:HostScsiTopology" minOccurs="0" />
                     <element name="multipathInfo" type="vim25:HostMultipathInfo" minOccurs="0" />
                     <element name="plugStoreTopology" type="vim25:HostPlugStoreTopology" minOccurs="0" />
                     <element name="softwareInternetScsiEnabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RetrieveDiskPartitionInfoRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="devicePath" type="xsd:string" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="RetrieveDiskPartitionInfo"  type="vim25:RetrieveDiskPartitionInfoRequestType" />
         <element name="RetrieveDiskPartitionInfoResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostDiskPartitionInfo" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ComputeDiskPartitionInfoRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="devicePath" type="xsd:string" />
               <element name="layout" type="vim25:HostDiskPartitionLayout" />
            </sequence>
         </complexType>
         <element name="ComputeDiskPartitionInfo"  type="vim25:ComputeDiskPartitionInfoRequestType" />
         <element name="ComputeDiskPartitionInfoResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostDiskPartitionInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ComputeDiskPartitionInfoForResizeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="partition" type="vim25:HostScsiDiskPartition" />
               <element name="blockRange" type="vim25:HostDiskPartitionBlockRange" />
            </sequence>
         </complexType>
         <element name="ComputeDiskPartitionInfoForResize"  type="vim25:ComputeDiskPartitionInfoForResizeRequestType" />
         <element name="ComputeDiskPartitionInfoForResizeResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostDiskPartitionInfo" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateDiskPartitionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="devicePath" type="xsd:string" />
               <element name="spec" type="vim25:HostDiskPartitionSpec" />
            </sequence>
         </complexType>
         <element name="UpdateDiskPartitions"  type="vim25:UpdateDiskPartitionsRequestType" />
         <element name="UpdateDiskPartitionsResponse">
            <complexType />
         </element>
         <complexType name="FormatVmfsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="createSpec" type="vim25:HostVmfsSpec" />
            </sequence>
         </complexType>
         <element name="FormatVmfs"  type="vim25:FormatVmfsRequestType" />
         <element name="FormatVmfsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostVmfsVolume" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RescanVmfsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RescanVmfs"  type="vim25:RescanVmfsRequestType" />
         <element name="RescanVmfsResponse">
            <complexType />
         </element>
         <complexType name="AttachVmfsExtentRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vmfsPath" type="xsd:string" />
               <element name="extent" type="vim25:HostScsiDiskPartition" />
            </sequence>
         </complexType>
         <element name="AttachVmfsExtent"  type="vim25:AttachVmfsExtentRequestType" />
         <element name="AttachVmfsExtentResponse">
            <complexType />
         </element>
         <complexType name="ExpandVmfsExtentRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vmfsPath" type="xsd:string" />
               <element name="extent" type="vim25:HostScsiDiskPartition" />
            </sequence>
         </complexType>
         <element name="ExpandVmfsExtent"  type="vim25:ExpandVmfsExtentRequestType" />
         <element name="ExpandVmfsExtentResponse">
            <complexType />
         </element>
         <complexType name="UpgradeVmfsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vmfsPath" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UpgradeVmfs"  type="vim25:UpgradeVmfsRequestType" />
         <element name="UpgradeVmfsResponse">
            <complexType />
         </element>
         <complexType name="UpgradeVmLayoutRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="UpgradeVmLayout"  type="vim25:UpgradeVmLayoutRequestType" />
         <element name="UpgradeVmLayoutResponse">
            <complexType />
         </element>
         <complexType name="QueryUnresolvedVmfsVolumeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryUnresolvedVmfsVolume"  type="vim25:QueryUnresolvedVmfsVolumeRequestType" />
         <element name="QueryUnresolvedVmfsVolumeResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostUnresolvedVmfsVolume" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ResolveMultipleUnresolvedVmfsVolumesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="resolutionSpec" type="vim25:HostUnresolvedVmfsResolutionSpec" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="ResolveMultipleUnresolvedVmfsVolumes"  type="vim25:ResolveMultipleUnresolvedVmfsVolumesRequestType" />
         <element name="ResolveMultipleUnresolvedVmfsVolumesResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostUnresolvedVmfsResolutionResult" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UnmountForceMountedVmfsVolumeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vmfsUuid" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UnmountForceMountedVmfsVolume"  type="vim25:UnmountForceMountedVmfsVolumeRequestType" />
         <element name="UnmountForceMountedVmfsVolumeResponse">
            <complexType />
         </element>
         <complexType name="RescanHbaRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="hbaDevice" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="RescanHba"  type="vim25:RescanHbaRequestType" />
         <element name="RescanHbaResponse">
            <complexType />
         </element>
         <complexType name="RescanAllHbaRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RescanAllHba"  type="vim25:RescanAllHbaRequestType" />
         <element name="RescanAllHbaResponse">
            <complexType />
         </element>
         <complexType name="UpdateSoftwareInternetScsiEnabledRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="enabled" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="UpdateSoftwareInternetScsiEnabled"  type="vim25:UpdateSoftwareInternetScsiEnabledRequestType" />
         <element name="UpdateSoftwareInternetScsiEnabledResponse">
            <complexType />
         </element>
         <complexType name="UpdateInternetScsiDiscoveryPropertiesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="discoveryProperties" type="vim25:HostInternetScsiHbaDiscoveryProperties" />
            </sequence>
         </complexType>
         <element name="UpdateInternetScsiDiscoveryProperties"  type="vim25:UpdateInternetScsiDiscoveryPropertiesRequestType" />
         <element name="UpdateInternetScsiDiscoveryPropertiesResponse">
            <complexType />
         </element>
         <complexType name="UpdateInternetScsiAuthenticationPropertiesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="authenticationProperties" type="vim25:HostInternetScsiHbaAuthenticationProperties" />
               <element name="targetSet" type="vim25:HostInternetScsiHbaTargetSet" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="UpdateInternetScsiAuthenticationProperties"  type="vim25:UpdateInternetScsiAuthenticationPropertiesRequestType" />
         <element name="UpdateInternetScsiAuthenticationPropertiesResponse">
            <complexType />
         </element>
         <complexType name="UpdateInternetScsiDigestPropertiesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="targetSet" type="vim25:HostInternetScsiHbaTargetSet" minOccurs="0" />
               <element name="digestProperties" type="vim25:HostInternetScsiHbaDigestProperties" />
            </sequence>
         </complexType>
         <element name="UpdateInternetScsiDigestProperties"  type="vim25:UpdateInternetScsiDigestPropertiesRequestType" />
         <element name="UpdateInternetScsiDigestPropertiesResponse">
            <complexType />
         </element>
         <complexType name="UpdateInternetScsiAdvancedOptionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="targetSet" type="vim25:HostInternetScsiHbaTargetSet" minOccurs="0" />
               <element name="options" type="vim25:HostInternetScsiHbaParamValue" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="UpdateInternetScsiAdvancedOptions"  type="vim25:UpdateInternetScsiAdvancedOptionsRequestType" />
         <element name="UpdateInternetScsiAdvancedOptionsResponse">
            <complexType />
         </element>
         <complexType name="UpdateInternetScsiIPPropertiesRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="ipProperties" type="vim25:HostInternetScsiHbaIPProperties" />
            </sequence>
         </complexType>
         <element name="UpdateInternetScsiIPProperties"  type="vim25:UpdateInternetScsiIPPropertiesRequestType" />
         <element name="UpdateInternetScsiIPPropertiesResponse">
            <complexType />
         </element>
         <complexType name="UpdateInternetScsiNameRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="iScsiName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UpdateInternetScsiName"  type="vim25:UpdateInternetScsiNameRequestType" />
         <element name="UpdateInternetScsiNameResponse">
            <complexType />
         </element>
         <complexType name="UpdateInternetScsiAliasRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="iScsiAlias" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UpdateInternetScsiAlias"  type="vim25:UpdateInternetScsiAliasRequestType" />
         <element name="UpdateInternetScsiAliasResponse">
            <complexType />
         </element>
         <complexType name="AddInternetScsiSendTargetsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="targets" type="vim25:HostInternetScsiHbaSendTarget" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="AddInternetScsiSendTargets"  type="vim25:AddInternetScsiSendTargetsRequestType" />
         <element name="AddInternetScsiSendTargetsResponse">
            <complexType />
         </element>
         <complexType name="RemoveInternetScsiSendTargetsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="targets" type="vim25:HostInternetScsiHbaSendTarget" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="RemoveInternetScsiSendTargets"  type="vim25:RemoveInternetScsiSendTargetsRequestType" />
         <element name="RemoveInternetScsiSendTargetsResponse">
            <complexType />
         </element>
         <complexType name="AddInternetScsiStaticTargetsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="targets" type="vim25:HostInternetScsiHbaStaticTarget" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="AddInternetScsiStaticTargets"  type="vim25:AddInternetScsiStaticTargetsRequestType" />
         <element name="AddInternetScsiStaticTargetsResponse">
            <complexType />
         </element>
         <complexType name="RemoveInternetScsiStaticTargetsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="iScsiHbaDevice" type="xsd:string" />
               <element name="targets" type="vim25:HostInternetScsiHbaStaticTarget" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="RemoveInternetScsiStaticTargets"  type="vim25:RemoveInternetScsiStaticTargetsRequestType" />
         <element name="RemoveInternetScsiStaticTargetsResponse">
            <complexType />
         </element>
         <complexType name="EnableMultipathPathRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="pathName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="EnableMultipathPath"  type="vim25:EnableMultipathPathRequestType" />
         <element name="EnableMultipathPathResponse">
            <complexType />
         </element>
         <complexType name="DisableMultipathPathRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="pathName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="DisableMultipathPath"  type="vim25:DisableMultipathPathRequestType" />
         <element name="DisableMultipathPathResponse">
            <complexType />
         </element>
         <complexType name="SetMultipathLunPolicyRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="lunId" type="xsd:string" />
               <element name="policy" type="vim25:HostMultipathInfoLogicalUnitPolicy" />
            </sequence>
         </complexType>
         <element name="SetMultipathLunPolicy"  type="vim25:SetMultipathLunPolicyRequestType" />
         <element name="SetMultipathLunPolicyResponse">
            <complexType />
         </element>
         <complexType name="QueryPathSelectionPolicyOptionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryPathSelectionPolicyOptions"  type="vim25:QueryPathSelectionPolicyOptionsRequestType" />
         <element name="QueryPathSelectionPolicyOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostPathSelectionPolicyOption" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryStorageArrayTypePolicyOptionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="QueryStorageArrayTypePolicyOptions"  type="vim25:QueryStorageArrayTypePolicyOptionsRequestType" />
         <element name="QueryStorageArrayTypePolicyOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostStorageArrayTypePolicyOption" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateScsiLunDisplayNameRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="lunUuid" type="xsd:string" />
               <element name="displayName" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="UpdateScsiLunDisplayName"  type="vim25:UpdateScsiLunDisplayNameRequestType" />
         <element name="UpdateScsiLunDisplayNameResponse">
            <complexType />
         </element>
         <complexType name="RefreshStorageSystemRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RefreshStorageSystem"  type="vim25:RefreshStorageSystemRequestType" />
         <element name="RefreshStorageSystemResponse">
            <complexType />
         </element>
         <complexType name="HostHardwareSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vendor" type="xsd:string" />
                     <element name="model" type="xsd:string" />
                     <element name="uuid" type="xsd:string" />
                     <element name="otherIdentifyingInfo" type="vim25:HostSystemIdentificationInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="memorySize" type="xsd:long" />
                     <element name="cpuModel" type="xsd:string" />
                     <element name="cpuMhz" type="xsd:int" />
                     <element name="numCpuPkgs" type="xsd:short" />
                     <element name="numCpuCores" type="xsd:short" />
                     <element name="numCpuThreads" type="xsd:short" />
                     <element name="numNics" type="xsd:int" />
                     <element name="numHBAs" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostListSummaryQuickStats">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="overallCpuUsage" type="xsd:int" minOccurs="0" />
                     <element name="overallMemoryUsage" type="xsd:int" minOccurs="0" />
                     <element name="distributedCpuFairness" type="xsd:int" minOccurs="0" />
                     <element name="distributedMemoryFairness" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostConfigSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="port" type="xsd:int" />
                     <element name="sslThumbprint" type="xsd:string" minOccurs="0" />
                     <element name="product" type="vim25:AboutInfo" minOccurs="0" />
                     <element name="vmotionEnabled" type="xsd:boolean" />
                     <element name="faultToleranceEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostListSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="hardware" type="vim25:HostHardwareSummary" minOccurs="0" />
                     <element name="runtime" type="vim25:HostRuntimeInfo" minOccurs="0" />
                     <element name="config" type="vim25:HostConfigSummary" />
                     <element name="quickStats" type="vim25:HostListSummaryQuickStats" />
                     <element name="overallStatus" type="vim25:ManagedEntityStatus" />
                     <element name="rebootRequired" type="xsd:boolean" />
                     <element name="customValue" type="vim25:CustomFieldValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="managementServerIp" type="xsd:string" minOccurs="0" />
                     <element name="maxEVCModeKey" type="xsd:string" minOccurs="0" />
                     <element name="currentEVCModeKey" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostSystemHealthInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="numericSensorInfo" type="vim25:HostNumericSensorInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostSystemIdentificationInfoIdentifier">
            <restriction base="xsd:string">
               <enumeration value="AssetTag" />
               <enumeration value="ServiceTag" />
            </restriction>
         </simpleType>
         <complexType name="HostSystemIdentificationInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="identifierValue" type="xsd:string" />
                     <element name="identifierType" type="vim25:ElementDescription" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostSystemIdentificationInfo">
            <sequence>
               <element name="HostSystemIdentificationInfo" type="vim25:HostSystemIdentificationInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostSystemResourceInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="config" type="vim25:ResourceConfigSpec" minOccurs="0" />
                     <element name="child" type="vim25:HostSystemResourceInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostSystemResourceInfo">
            <sequence>
               <element name="HostSystemResourceInfo" type="vim25:HostSystemResourceInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostTargetTransport">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostParallelScsiTargetTransport">
            <complexContent>
               <extension base="vim25:HostTargetTransport">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostBlockAdapterTargetTransport">
            <complexContent>
               <extension base="vim25:HostTargetTransport">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostFibreChannelTargetTransport">
            <complexContent>
               <extension base="vim25:HostTargetTransport">
                  <sequence>
                     <element name="portWorldWideName" type="xsd:long" />
                     <element name="nodeWorldWideName" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostInternetScsiTargetTransport">
            <complexContent>
               <extension base="vim25:HostTargetTransport">
                  <sequence>
                     <element name="iScsiName" type="xsd:string" />
                     <element name="iScsiAlias" type="xsd:string" />
                     <element name="address" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostDigestInfoDigestMethodType">
            <restriction base="xsd:string">
               <enumeration value="SHA1" />
               <enumeration value="MD5" />
            </restriction>
         </simpleType>
         <complexType name="HostDigestInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="digestMethod" type="xsd:string" />
                     <element name="digestValue" type="xsd:byte" maxOccurs="unbounded" />
                     <element name="objectName" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostTpmDigestInfo">
            <complexContent>
               <extension base="vim25:HostDigestInfo">
                  <sequence>
                     <element name="pcrNumber" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostTpmDigestInfo">
            <sequence>
               <element name="HostTpmDigestInfo" type="vim25:HostTpmDigestInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="HostUnresolvedVmfsExtentUnresolvedReason">
            <restriction base="xsd:string">
               <enumeration value="diskIdMismatch" />
               <enumeration value="uuidConflict" />
            </restriction>
         </simpleType>
         <complexType name="HostUnresolvedVmfsExtent">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="device" type="vim25:HostScsiDiskPartition" />
                     <element name="devicePath" type="xsd:string" />
                     <element name="vmfsUuid" type="xsd:string" />
                     <element name="isHeadExtent" type="xsd:boolean" />
                     <element name="ordinal" type="xsd:int" />
                     <element name="startBlock" type="xsd:int" />
                     <element name="endBlock" type="xsd:int" />
                     <element name="reason" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostUnresolvedVmfsExtent">
            <sequence>
               <element name="HostUnresolvedVmfsExtent" type="vim25:HostUnresolvedVmfsExtent" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostUnresolvedVmfsResignatureSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="extentDevicePath" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostUnresolvedVmfsResolutionResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="spec" type="vim25:HostUnresolvedVmfsResolutionSpec" />
                     <element name="vmfs" type="vim25:HostVmfsVolume" minOccurs="0" />
                     <element name="fault" type="vim25:LocalizedMethodFault" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostUnresolvedVmfsResolutionResult">
            <sequence>
               <element name="HostUnresolvedVmfsResolutionResult" type="vim25:HostUnresolvedVmfsResolutionResult" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="HostUnresolvedVmfsResolutionSpecVmfsUuidResolution">
            <restriction base="xsd:string">
               <enumeration value="resignature" />
               <enumeration value="forceMount" />
            </restriction>
         </simpleType>
         <complexType name="HostUnresolvedVmfsResolutionSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="extentDevicePath" type="xsd:string" maxOccurs="unbounded" />
                     <element name="uuidResolution" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostUnresolvedVmfsResolutionSpec">
            <sequence>
               <element name="HostUnresolvedVmfsResolutionSpec" type="vim25:HostUnresolvedVmfsResolutionSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostUnresolvedVmfsVolumeResolveStatus">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="resolvable" type="xsd:boolean" />
                     <element name="incompleteExtents" type="xsd:boolean" minOccurs="0" />
                     <element name="multipleCopies" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostUnresolvedVmfsVolume">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="extent" type="vim25:HostUnresolvedVmfsExtent" maxOccurs="unbounded" />
                     <element name="vmfsLabel" type="xsd:string" />
                     <element name="vmfsUuid" type="xsd:string" />
                     <element name="totalBlocks" type="xsd:int" />
                     <element name="resolveStatus" type="vim25:HostUnresolvedVmfsVolumeResolveStatus" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostUnresolvedVmfsVolume">
            <sequence>
               <element name="HostUnresolvedVmfsVolume" type="vim25:HostUnresolvedVmfsVolume" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVMotionConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vmotionNicKey" type="xsd:string" minOccurs="0" />
                     <element name="enabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVMotionInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="netConfig" type="vim25:HostVMotionNetConfig" minOccurs="0" />
                     <element name="ipConfig" type="vim25:HostIpConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVMotionNetConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="candidateVnic" type="vim25:HostVirtualNic" minOccurs="0" maxOccurs="unbounded" />
                     <element name="selectedVnic" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdateIpConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="ipConfig" type="vim25:HostIpConfig" />
            </sequence>
         </complexType>
         <element name="UpdateIpConfig"  type="vim25:UpdateIpConfigRequestType" />
         <element name="UpdateIpConfigResponse">
            <complexType />
         </element>
         <complexType name="SelectVnicRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="device" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="SelectVnic"  type="vim25:SelectVnicRequestType" />
         <element name="SelectVnicResponse">
            <complexType />
         </element>
         <complexType name="DeselectVnicRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DeselectVnic"  type="vim25:DeselectVnicRequestType" />
         <element name="DeselectVnicResponse">
            <complexType />
         </element>
         <complexType name="HostVirtualNicSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ip" type="vim25:HostIpConfig" minOccurs="0" />
                     <element name="mac" type="xsd:string" minOccurs="0" />
                     <element name="distributedVirtualPort" type="vim25:DistributedVirtualSwitchPortConnection" minOccurs="0" />
                     <element name="portgroup" type="xsd:string" minOccurs="0" />
                     <element name="mtu" type="xsd:int" minOccurs="0" />
                     <element name="tsoEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualNicConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" minOccurs="0" />
                     <element name="device" type="xsd:string" minOccurs="0" />
                     <element name="portgroup" type="xsd:string" />
                     <element name="spec" type="vim25:HostVirtualNicSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVirtualNicConfig">
            <sequence>
               <element name="HostVirtualNicConfig" type="vim25:HostVirtualNicConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVirtualNic">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="device" type="xsd:string" />
                     <element name="key" type="xsd:string" />
                     <element name="portgroup" type="xsd:string" />
                     <element name="spec" type="vim25:HostVirtualNicSpec" />
                     <element name="port" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVirtualNic">
            <sequence>
               <element name="HostVirtualNic" type="vim25:HostVirtualNic" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVirtualNicConnection">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="portgroup" type="xsd:string" minOccurs="0" />
                     <element name="dvPort" type="vim25:DistributedVirtualSwitchPortConnection" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="HostVirtualNicManagerNicType">
            <restriction base="xsd:string">
               <enumeration value="vmotion" />
               <enumeration value="faultToleranceLogging" />
               <enumeration value="management" />
            </restriction>
         </simpleType>
         <complexType name="HostVirtualNicManagerNicTypeSelection">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vnic" type="vim25:HostVirtualNicConnection" />
                     <element name="nicType" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVirtualNicManagerNicTypeSelection">
            <sequence>
               <element name="HostVirtualNicManagerNicTypeSelection" type="vim25:HostVirtualNicManagerNicTypeSelection" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualNicManagerNetConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="nicType" type="xsd:string" />
                     <element name="multiSelectAllowed" type="xsd:boolean" />
                     <element name="candidateVnic" type="vim25:HostVirtualNic" minOccurs="0" maxOccurs="unbounded" />
                     <element name="selectedVnic" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualNicManagerNetConfig">
            <sequence>
               <element name="VirtualNicManagerNetConfig" type="vim25:VirtualNicManagerNetConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="QueryNetConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="nicType" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="QueryNetConfig"  type="vim25:QueryNetConfigRequestType" />
         <element name="QueryNetConfigResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:VirtualNicManagerNetConfig" minOccurs="0" />
               </sequence>
            </complexType>
         </element>
         <complexType name="SelectVnicForNicTypeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="nicType" type="xsd:string" />
               <element name="device" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="SelectVnicForNicType"  type="vim25:SelectVnicForNicTypeRequestType" />
         <element name="SelectVnicForNicTypeResponse">
            <complexType />
         </element>
         <complexType name="DeselectVnicForNicTypeRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="nicType" type="xsd:string" />
               <element name="device" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="DeselectVnicForNicType"  type="vim25:DeselectVnicForNicTypeRequestType" />
         <element name="DeselectVnicForNicTypeResponse">
            <complexType />
         </element>
         <complexType name="HostVirtualNicManagerInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="netConfig" type="vim25:VirtualNicManagerNetConfig" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchBridge">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchAutoBridge">
            <complexContent>
               <extension base="vim25:HostVirtualSwitchBridge">
                  <sequence>
                     <element name="excludedNicDevice" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchSimpleBridge">
            <complexContent>
               <extension base="vim25:HostVirtualSwitchBridge">
                  <sequence>
                     <element name="nicDevice" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchBondBridge">
            <complexContent>
               <extension base="vim25:HostVirtualSwitchBridge">
                  <sequence>
                     <element name="nicDevice" type="xsd:string" maxOccurs="unbounded" />
                     <element name="beacon" type="vim25:HostVirtualSwitchBeaconConfig" minOccurs="0" />
                     <element name="linkDiscoveryProtocolConfig" type="vim25:LinkDiscoveryProtocolConfig" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchBeaconConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="interval" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="numPorts" type="xsd:int" />
                     <element name="bridge" type="vim25:HostVirtualSwitchBridge" minOccurs="0" />
                     <element name="policy" type="vim25:HostNetworkPolicy" minOccurs="0" />
                     <element name="mtu" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVirtualSwitchConfig">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="changeOperation" type="xsd:string" minOccurs="0" />
                     <element name="name" type="xsd:string" />
                     <element name="spec" type="vim25:HostVirtualSwitchSpec" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVirtualSwitchConfig">
            <sequence>
               <element name="HostVirtualSwitchConfig" type="vim25:HostVirtualSwitchConfig" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVirtualSwitch">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="key" type="xsd:string" />
                     <element name="numPorts" type="xsd:int" />
                     <element name="numPortsAvailable" type="xsd:int" />
                     <element name="mtu" type="xsd:int" minOccurs="0" />
                     <element name="portgroup" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="pnic" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="spec" type="vim25:HostVirtualSwitchSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVirtualSwitch">
            <sequence>
               <element name="HostVirtualSwitch" type="vim25:HostVirtualSwitch" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVmfsRescanResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                     <element name="fault" type="vim25:LocalizedMethodFault" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostVmfsRescanResult">
            <sequence>
               <element name="HostVmfsRescanResult" type="vim25:HostVmfsRescanResult" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostVmfsSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="extent" type="vim25:HostScsiDiskPartition" />
                     <element name="blockSizeMb" type="xsd:int" minOccurs="0" />
                     <element name="majorVersion" type="xsd:int" />
                     <element name="volumeName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostVmfsVolume">
            <complexContent>
               <extension base="vim25:HostFileSystemVolume">
                  <sequence>
                     <element name="blockSizeMb" type="xsd:int" />
                     <element name="maxBlocks" type="xsd:int" />
                     <element name="majorVersion" type="xsd:int" />
                     <element name="version" type="xsd:string" />
                     <element name="uuid" type="xsd:string" />
                     <element name="extent" type="vim25:HostScsiDiskPartition" maxOccurs="unbounded" />
                     <element name="vmfsUpgradable" type="xsd:boolean" />
                     <element name="forceMountedInfo" type="vim25:HostForceMountedInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="ArrayUpdateOperation">
            <restriction base="xsd:string">
               <enumeration value="add" />
               <enumeration value="remove" />
               <enumeration value="edit" />
            </restriction>
         </simpleType>
         <complexType name="ArrayUpdateSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="operation" type="vim25:ArrayUpdateOperation" />
                     <element name="removeKey" type="xsd:anyType" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="BoolOption">
            <complexContent>
               <extension base="vim25:OptionType">
                  <sequence>
                     <element name="supported" type="xsd:boolean" />
                     <element name="defaultValue" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ChoiceOption">
            <complexContent>
               <extension base="vim25:OptionType">
                  <sequence>
                     <element name="choiceInfo" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="defaultIndex" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FloatOption">
            <complexContent>
               <extension base="vim25:OptionType">
                  <sequence>
                     <element name="min" type="xsd:float" />
                     <element name="max" type="xsd:float" />
                     <element name="defaultValue" type="xsd:float" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IntOption">
            <complexContent>
               <extension base="vim25:OptionType">
                  <sequence>
                     <element name="min" type="xsd:int" />
                     <element name="max" type="xsd:int" />
                     <element name="defaultValue" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="LongOption">
            <complexContent>
               <extension base="vim25:OptionType">
                  <sequence>
                     <element name="min" type="xsd:long" />
                     <element name="max" type="xsd:long" />
                     <element name="defaultValue" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OptionDef">
            <complexContent>
               <extension base="vim25:ElementDescription">
                  <sequence>
                     <element name="optionType" type="vim25:OptionType" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfOptionDef">
            <sequence>
               <element name="OptionDef" type="vim25:OptionDef" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="QueryOptionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="QueryOptions"  type="vim25:QueryOptionsRequestType" />
         <element name="QueryOptionsResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:OptionValue" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="UpdateOptionsRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="changedValue" type="vim25:OptionValue" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="UpdateOptions"  type="vim25:UpdateOptionsRequestType" />
         <element name="UpdateOptionsResponse">
            <complexType />
         </element>
         <complexType name="OptionType">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="valueIsReadonly" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OptionValue">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="value" type="xsd:anyType" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfOptionValue">
            <sequence>
               <element name="OptionValue" type="vim25:OptionValue" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="StringOption">
            <complexContent>
               <extension base="vim25:OptionType">
                  <sequence>
                     <element name="defaultValue" type="xsd:string" />
                     <element name="validCharacters" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ApplyProfile">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" />
                     <element name="policy" type="vim25:ProfilePolicy" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ComplianceLocator">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="expressionName" type="xsd:string" />
                     <element name="applyPath" type="vim25:ProfilePropertyPath" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfComplianceLocator">
            <sequence>
               <element name="ComplianceLocator" type="vim25:ComplianceLocator" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CheckComplianceRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="profile" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="CheckCompliance_Task"  type="vim25:CheckComplianceRequestType" />
         <element name="CheckCompliance_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryComplianceStatusRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="profile" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryComplianceStatus"  type="vim25:QueryComplianceStatusRequestType" />
         <element name="QueryComplianceStatusResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ComplianceResult" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ClearComplianceStatusRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="profile" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="ClearComplianceStatus"  type="vim25:ClearComplianceStatusRequestType" />
         <element name="ClearComplianceStatusResponse">
            <complexType />
         </element>
         <complexType name="QueryExpressionMetadataRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="expressionName" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryExpressionMetadata"  type="vim25:QueryExpressionMetadataRequestType" />
         <element name="QueryExpressionMetadataResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ProfileExpressionMetadata" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ComplianceProfile">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="expression" type="vim25:ProfileExpression" maxOccurs="unbounded" />
                     <element name="rootExpression" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="ComplianceResultStatus">
            <restriction base="xsd:string">
               <enumeration value="compliant" />
               <enumeration value="nonCompliant" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="ComplianceFailure">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="failureType" type="xsd:string" />
                     <element name="message" type="vim25:LocalizableMessage" />
                     <element name="expressionName" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfComplianceFailure">
            <sequence>
               <element name="ComplianceFailure" type="vim25:ComplianceFailure" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ComplianceResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="profile" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="complianceStatus" type="xsd:string" />
                     <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="checkTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="failure" type="vim25:ComplianceFailure" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfComplianceResult">
            <sequence>
               <element name="ComplianceResult" type="vim25:ComplianceResult" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProfileDeferredPolicyOptionParameter">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="inputPath" type="vim25:ProfilePropertyPath" />
                     <element name="parameter" type="vim25:KeyAnyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfileDeferredPolicyOptionParameter">
            <sequence>
               <element name="ProfileDeferredPolicyOptionParameter" type="vim25:ProfileDeferredPolicyOptionParameter" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProfileExpression">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="displayName" type="xsd:string" />
                     <element name="negated" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfileExpression">
            <sequence>
               <element name="ProfileExpression" type="vim25:ProfileExpression" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProfileSimpleExpression">
            <complexContent>
               <extension base="vim25:ProfileExpression">
                  <sequence>
                     <element name="expressionType" type="xsd:string" />
                     <element name="parameter" type="vim25:KeyAnyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileCompositeExpression">
            <complexContent>
               <extension base="vim25:ProfileExpression">
                  <sequence>
                     <element name="operator" type="xsd:string" />
                     <element name="expressionName" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileExpressionMetadata">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="expressionId" type="vim25:ExtendedElementDescription" />
                     <element name="parameter" type="vim25:ProfileParameterMetadata" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfileExpressionMetadata">
            <sequence>
               <element name="ProfileExpressionMetadata" type="vim25:ProfileExpressionMetadata" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="ProfileNumericComparator">
            <restriction base="xsd:string">
               <enumeration value="lessThan" />
               <enumeration value="lessThanEqual" />
               <enumeration value="equal" />
               <enumeration value="notEqual" />
               <enumeration value="greaterThanEqual" />
               <enumeration value="greaterThan" />
            </restriction>
         </simpleType>
         <complexType name="ProfileParameterMetadata">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="vim25:ExtendedElementDescription" />
                     <element name="type" type="xsd:string" />
                     <element name="optional" type="xsd:boolean" />
                     <element name="defaultValue" type="xsd:anyType" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfileParameterMetadata">
            <sequence>
               <element name="ProfileParameterMetadata" type="vim25:ProfileParameterMetadata" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProfilePolicy">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="policyOption" type="vim25:PolicyOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfilePolicy">
            <sequence>
               <element name="ProfilePolicy" type="vim25:ProfilePolicy" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProfilePolicyOptionMetadata">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="vim25:ExtendedElementDescription" />
                     <element name="parameter" type="vim25:ProfileParameterMetadata" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfilePolicyOptionMetadata">
            <sequence>
               <element name="ProfilePolicyOptionMetadata" type="vim25:ProfilePolicyOptionMetadata" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProfileCompositePolicyOptionMetadata">
            <complexContent>
               <extension base="vim25:ProfilePolicyOptionMetadata">
                  <sequence>
                     <element name="option" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserInputRequiredParameterMetadata">
            <complexContent>
               <extension base="vim25:ProfilePolicyOptionMetadata">
                  <sequence>
                     <element name="userInputParameter" type="vim25:ProfileParameterMetadata" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfilePolicyMetadata">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="vim25:ExtendedElementDescription" />
                     <element name="possibleOption" type="vim25:ProfilePolicyOptionMetadata" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfilePolicyMetadata">
            <sequence>
               <element name="ProfilePolicyMetadata" type="vim25:ProfilePolicyMetadata" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PolicyOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="parameter" type="vim25:KeyAnyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPolicyOption">
            <sequence>
               <element name="PolicyOption" type="vim25:PolicyOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CompositePolicyOption">
            <complexContent>
               <extension base="vim25:PolicyOption">
                  <sequence>
                     <element name="option" type="vim25:PolicyOption" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileCreateSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="annotation" type="xsd:string" minOccurs="0" />
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileSerializedCreateSpec">
            <complexContent>
               <extension base="vim25:ProfileCreateSpec">
                  <sequence>
                     <element name="profileConfigString" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="annotation" type="xsd:string" minOccurs="0" />
                     <element name="enabled" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ProfileDescriptionSection">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="description" type="vim25:ExtendedElementDescription" />
                     <element name="message" type="vim25:LocalizableMessage" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfileDescriptionSection">
            <sequence>
               <element name="ProfileDescriptionSection" type="vim25:ProfileDescriptionSection" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProfileDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="section" type="vim25:ProfileDescriptionSection" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DestroyProfileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DestroyProfile"  type="vim25:DestroyProfileRequestType" />
         <element name="DestroyProfileResponse">
            <complexType />
         </element>
         <complexType name="AssociateProfileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="AssociateProfile"  type="vim25:AssociateProfileRequestType" />
         <element name="AssociateProfileResponse">
            <complexType />
         </element>
         <complexType name="DissociateProfileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="DissociateProfile"  type="vim25:DissociateProfileRequestType" />
         <element name="DissociateProfileResponse">
            <complexType />
         </element>
         <complexType name="CheckProfileComplianceRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="CheckProfileCompliance_Task"  type="vim25:CheckProfileComplianceRequestType" />
         <element name="CheckProfileCompliance_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ExportProfileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ExportProfile"  type="vim25:ExportProfileRequestType" />
         <element name="ExportProfileResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="xsd:string" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateProfileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="createSpec" type="vim25:ProfileCreateSpec" />
            </sequence>
         </complexType>
         <element name="CreateProfile"  type="vim25:CreateProfileRequestType" />
         <element name="CreateProfileResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryPolicyMetadataRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="policyName" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryPolicyMetadata"  type="vim25:QueryPolicyMetadataRequestType" />
         <element name="QueryPolicyMetadataResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ProfilePolicyMetadata" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="FindAssociatedProfileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="FindAssociatedProfile"  type="vim25:FindAssociatedProfileRequestType" />
         <element name="FindAssociatedProfileResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ProfileMetadata">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="description" type="vim25:ExtendedDescription" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfileMetadata">
            <sequence>
               <element name="ProfileMetadata" type="vim25:ProfileMetadata" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProfilePropertyPath">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="profilePath" type="xsd:string" />
                     <element name="policyId" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterProfileConfigInfo">
            <complexContent>
               <extension base="vim25:ProfileConfigInfo">
                  <sequence>
                     <element name="complyProfile" type="vim25:ComplianceProfile" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterProfileCreateSpec">
            <complexContent>
               <extension base="vim25:ProfileCreateSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterProfileConfigSpec">
            <complexContent>
               <extension base="vim25:ClusterProfileCreateSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ClusterProfileCompleteConfigSpec">
            <complexContent>
               <extension base="vim25:ClusterProfileConfigSpec">
                  <sequence>
                     <element name="complyProfile" type="vim25:ComplianceProfile" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="ClusterProfileServiceType">
            <restriction base="xsd:string">
               <enumeration value="DRS" />
               <enumeration value="HA" />
               <enumeration value="DPM" />
               <enumeration value="FT" />
            </restriction>
         </simpleType>
         <complexType name="ClusterProfileConfigServiceCreateSpec">
            <complexContent>
               <extension base="vim25:ClusterProfileConfigSpec">
                  <sequence>
                     <element name="serviceType" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdateClusterProfileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:ClusterProfileConfigSpec" />
            </sequence>
         </complexType>
         <element name="UpdateClusterProfile"  type="vim25:UpdateClusterProfileRequestType" />
         <element name="UpdateClusterProfileResponse">
            <complexType />
         </element>
         <simpleType name="ProfileExecuteResultStatus">
            <restriction base="xsd:string">
               <enumeration value="success" />
               <enumeration value="needInput" />
               <enumeration value="error" />
            </restriction>
         </simpleType>
         <complexType name="ProfileExecuteError">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="path" type="vim25:ProfilePropertyPath" minOccurs="0" />
                     <element name="message" type="vim25:LocalizableMessage" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfProfileExecuteError">
            <sequence>
               <element name="ProfileExecuteError" type="vim25:ProfileExecuteError" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ProfileExecuteResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="status" type="xsd:string" />
                     <element name="configSpec" type="vim25:HostConfigSpec" minOccurs="0" />
                     <element name="inapplicablePath" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="requireInput" type="vim25:ProfileDeferredPolicyOptionParameter" minOccurs="0" maxOccurs="unbounded" />
                     <element name="error" type="vim25:ProfileExecuteError" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostApplyProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="memory" type="vim25:HostMemoryProfile" minOccurs="0" />
                     <element name="storage" type="vim25:StorageProfile" minOccurs="0" />
                     <element name="network" type="vim25:NetworkProfile" minOccurs="0" />
                     <element name="datetime" type="vim25:DateTimeProfile" minOccurs="0" />
                     <element name="firewall" type="vim25:FirewallProfile" minOccurs="0" />
                     <element name="security" type="vim25:SecurityProfile" minOccurs="0" />
                     <element name="service" type="vim25:ServiceProfile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="option" type="vim25:OptionProfile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="userAccount" type="vim25:UserProfile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="usergroupAccount" type="vim25:UserGroupProfile" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PhysicalNicProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPhysicalNicProfile">
            <sequence>
               <element name="PhysicalNicProfile" type="vim25:PhysicalNicProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostMemoryProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UserProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfUserProfile">
            <sequence>
               <element name="UserProfile" type="vim25:UserProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="UserGroupProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfUserGroupProfile">
            <sequence>
               <element name="UserGroupProfile" type="vim25:UserGroupProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="SecurityProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OptionProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfOptionProfile">
            <sequence>
               <element name="OptionProfile" type="vim25:OptionProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DateTimeProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ServiceProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfServiceProfile">
            <sequence>
               <element name="ServiceProfile" type="vim25:ServiceProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="FirewallProfileRulesetProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfFirewallProfileRulesetProfile">
            <sequence>
               <element name="FirewallProfileRulesetProfile" type="vim25:FirewallProfileRulesetProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="FirewallProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="ruleset" type="vim25:FirewallProfileRulesetProfile" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NasStorageProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfNasStorageProfile">
            <sequence>
               <element name="NasStorageProfile" type="vim25:NasStorageProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="StorageProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="nasStorage" type="vim25:NasStorageProfile" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NetworkProfileDnsConfigProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NetworkProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="vswitch" type="vim25:VirtualSwitchProfile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="vmPortGroup" type="vim25:VmPortGroupProfile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="hostPortGroup" type="vim25:HostPortGroupProfile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="serviceConsolePortGroup" type="vim25:ServiceConsolePortGroupProfile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dnsConfig" type="vim25:NetworkProfileDnsConfigProfile" minOccurs="0" />
                     <element name="ipRouteConfig" type="vim25:IpRouteProfile" minOccurs="0" />
                     <element name="consoleIpRouteConfig" type="vim25:IpRouteProfile" minOccurs="0" />
                     <element name="pnic" type="vim25:PhysicalNicProfile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dvswitch" type="vim25:DvsProfile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dvsServiceConsoleNic" type="vim25:DvsServiceConsoleVNicProfile" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dvsHostNic" type="vim25:DvsHostVNicProfile" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsVNicProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="ipConfig" type="vim25:IpAddressProfile" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DvsServiceConsoleVNicProfile">
            <complexContent>
               <extension base="vim25:DvsVNicProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDvsServiceConsoleVNicProfile">
            <sequence>
               <element name="DvsServiceConsoleVNicProfile" type="vim25:DvsServiceConsoleVNicProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DvsHostVNicProfile">
            <complexContent>
               <extension base="vim25:DvsVNicProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDvsHostVNicProfile">
            <sequence>
               <element name="DvsHostVNicProfile" type="vim25:DvsHostVNicProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DvsProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="uplink" type="vim25:PnicUplinkProfile" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfDvsProfile">
            <sequence>
               <element name="DvsProfile" type="vim25:DvsProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="PnicUplinkProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfPnicUplinkProfile">
            <sequence>
               <element name="PnicUplinkProfile" type="vim25:PnicUplinkProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="IpRouteProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="staticRoute" type="vim25:StaticRouteProfile" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="StaticRouteProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfStaticRouteProfile">
            <sequence>
               <element name="StaticRouteProfile" type="vim25:StaticRouteProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="LinkProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="NumPortsProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSwitchProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="link" type="vim25:LinkProfile" />
                     <element name="numPorts" type="vim25:NumPortsProfile" />
                     <element name="networkPolicy" type="vim25:NetworkPolicyProfile" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualSwitchProfile">
            <sequence>
               <element name="VirtualSwitchProfile" type="vim25:VirtualSwitchProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VlanProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSwitchSelectionProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="PortGroupProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="name" type="xsd:string" />
                     <element name="vlan" type="vim25:VlanProfile" />
                     <element name="vswitch" type="vim25:VirtualSwitchSelectionProfile" />
                     <element name="networkPolicy" type="vim25:NetworkPolicyProfile" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmPortGroupProfile">
            <complexContent>
               <extension base="vim25:PortGroupProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVmPortGroupProfile">
            <sequence>
               <element name="VmPortGroupProfile" type="vim25:VmPortGroupProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostPortGroupProfile">
            <complexContent>
               <extension base="vim25:PortGroupProfile">
                  <sequence>
                     <element name="ipConfig" type="vim25:IpAddressProfile" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostPortGroupProfile">
            <sequence>
               <element name="HostPortGroupProfile" type="vim25:HostPortGroupProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ServiceConsolePortGroupProfile">
            <complexContent>
               <extension base="vim25:PortGroupProfile">
                  <sequence>
                     <element name="ipConfig" type="vim25:IpAddressProfile" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfServiceConsolePortGroupProfile">
            <sequence>
               <element name="ServiceConsolePortGroupProfile" type="vim25:ServiceConsolePortGroupProfile" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="NetworkPolicyProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IpAddressProfile">
            <complexContent>
               <extension base="vim25:ApplyProfile">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostProfileConfigInfo">
            <complexContent>
               <extension base="vim25:ProfileConfigInfo">
                  <sequence>
                     <element name="applyProfile" type="vim25:HostApplyProfile" minOccurs="0" />
                     <element name="defaultComplyProfile" type="vim25:ComplianceProfile" minOccurs="0" />
                     <element name="defaultComplyLocator" type="vim25:ComplianceLocator" minOccurs="0" maxOccurs="unbounded" />
                     <element name="customComplyProfile" type="vim25:ComplianceProfile" minOccurs="0" />
                     <element name="disabledExpressionList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostProfileConfigSpec">
            <complexContent>
               <extension base="vim25:ProfileCreateSpec">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostProfileCompleteConfigSpec">
            <complexContent>
               <extension base="vim25:HostProfileConfigSpec">
                  <sequence>
                     <element name="applyProfile" type="vim25:HostApplyProfile" minOccurs="0" />
                     <element name="customComplyProfile" type="vim25:ComplianceProfile" minOccurs="0" />
                     <element name="disabledExpressionListChanged" type="xsd:boolean" />
                     <element name="disabledExpressionList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostProfileHostBasedConfigSpec">
            <complexContent>
               <extension base="vim25:HostProfileConfigSpec">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="UpdateReferenceHostRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="UpdateReferenceHost"  type="vim25:UpdateReferenceHostRequestType" />
         <element name="UpdateReferenceHostResponse">
            <complexType />
         </element>
         <complexType name="UpdateHostProfileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="config" type="vim25:HostProfileConfigSpec" />
            </sequence>
         </complexType>
         <element name="UpdateHostProfile"  type="vim25:UpdateHostProfileRequestType" />
         <element name="UpdateHostProfileResponse">
            <complexType />
         </element>
         <complexType name="ExecuteHostProfileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" />
               <element name="deferredParam" type="vim25:ProfileDeferredPolicyOptionParameter" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="ExecuteHostProfile"  type="vim25:ExecuteHostProfileRequestType" />
         <element name="ExecuteHostProfileResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ProfileExecuteResult" />
               </sequence>
            </complexType>
         </element>
         <complexType name="HostProfileManagerConfigTaskList">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="configSpec" type="vim25:HostConfigSpec" minOccurs="0" />
                     <element name="taskDescription" type="vim25:LocalizableMessage" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ApplyHostConfigRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" />
               <element name="configSpec" type="vim25:HostConfigSpec" />
            </sequence>
         </complexType>
         <element name="ApplyHostConfig_Task"  type="vim25:ApplyHostConfigRequestType" />
         <element name="ApplyHostConfig_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="GenerateConfigTaskListRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="configSpec" type="vim25:HostConfigSpec" />
               <element name="host" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="GenerateConfigTaskList"  type="vim25:GenerateConfigTaskListRequestType" />
         <element name="GenerateConfigTaskListResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:HostProfileManagerConfigTaskList" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryHostProfileMetadataRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="profileName" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryHostProfileMetadata"  type="vim25:QueryHostProfileMetadataRequestType" />
         <element name="QueryHostProfileMetadataResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ProfileMetadata" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateDefaultProfileRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="profileType" type="xsd:string" />
            </sequence>
         </complexType>
         <element name="CreateDefaultProfile"  type="vim25:CreateDefaultProfileRequestType" />
         <element name="CreateDefaultProfileResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ApplyProfile" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RemoveScheduledTaskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RemoveScheduledTask"  type="vim25:RemoveScheduledTaskRequestType" />
         <element name="RemoveScheduledTaskResponse">
            <complexType />
         </element>
         <complexType name="ReconfigureScheduledTaskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:ScheduledTaskSpec" />
            </sequence>
         </complexType>
         <element name="ReconfigureScheduledTask"  type="vim25:ReconfigureScheduledTaskRequestType" />
         <element name="ReconfigureScheduledTaskResponse">
            <complexType />
         </element>
         <complexType name="RunScheduledTaskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="RunScheduledTask"  type="vim25:RunScheduledTaskRequestType" />
         <element name="RunScheduledTaskResponse">
            <complexType />
         </element>
         <complexType name="ScheduledTaskDetail">
            <complexContent>
               <extension base="vim25:TypeDescription">
                  <sequence>
                     <element name="frequency" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfScheduledTaskDetail">
            <sequence>
               <element name="ScheduledTaskDetail" type="vim25:ScheduledTaskDetail" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ScheduledTaskDescription">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="action" type="vim25:TypeDescription" maxOccurs="unbounded" />
                     <element name="schedulerInfo" type="vim25:ScheduledTaskDetail" maxOccurs="unbounded" />
                     <element name="state" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="dayOfWeek" type="vim25:ElementDescription" maxOccurs="unbounded" />
                     <element name="weekOfMonth" type="vim25:ElementDescription" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskInfo">
            <complexContent>
               <extension base="vim25:ScheduledTaskSpec">
                  <sequence>
                     <element name="scheduledTask" type="vim25:ManagedObjectReference" />
                     <element name="entity" type="vim25:ManagedObjectReference" />
                     <element name="lastModifiedTime" type="xsd:dateTime" />
                     <element name="lastModifiedUser" type="xsd:string" />
                     <element name="nextRunTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="prevRunTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="state" type="vim25:TaskInfoState" />
                     <element name="error" type="vim25:LocalizedMethodFault" minOccurs="0" />
                     <element name="result" type="xsd:anyType" minOccurs="0" />
                     <element name="progress" type="xsd:int" minOccurs="0" />
                     <element name="activeTask" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="taskObject" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CreateScheduledTaskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:ScheduledTaskSpec" />
            </sequence>
         </complexType>
         <element name="CreateScheduledTask"  type="vim25:CreateScheduledTaskRequestType" />
         <element name="CreateScheduledTaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RetrieveEntityScheduledTaskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="RetrieveEntityScheduledTask"  type="vim25:RetrieveEntityScheduledTaskRequestType" />
         <element name="RetrieveEntityScheduledTaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateObjectScheduledTaskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="obj" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:ScheduledTaskSpec" />
            </sequence>
         </complexType>
         <element name="CreateObjectScheduledTask"  type="vim25:CreateObjectScheduledTaskRequestType" />
         <element name="CreateObjectScheduledTaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RetrieveObjectScheduledTaskRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="obj" type="vim25:ManagedObjectReference" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="RetrieveObjectScheduledTask"  type="vim25:RetrieveObjectScheduledTaskRequestType" />
         <element name="RetrieveObjectScheduledTaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="TaskScheduler">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="activeTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="expireTime" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="AfterStartupTaskScheduler">
            <complexContent>
               <extension base="vim25:TaskScheduler">
                  <sequence>
                     <element name="minute" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="OnceTaskScheduler">
            <complexContent>
               <extension base="vim25:TaskScheduler">
                  <sequence>
                     <element name="runAt" type="xsd:dateTime" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="RecurrentTaskScheduler">
            <complexContent>
               <extension base="vim25:TaskScheduler">
                  <sequence>
                     <element name="interval" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HourlyTaskScheduler">
            <complexContent>
               <extension base="vim25:RecurrentTaskScheduler">
                  <sequence>
                     <element name="minute" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="DailyTaskScheduler">
            <complexContent>
               <extension base="vim25:HourlyTaskScheduler">
                  <sequence>
                     <element name="hour" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="WeeklyTaskScheduler">
            <complexContent>
               <extension base="vim25:DailyTaskScheduler">
                  <sequence>
                     <element name="sunday" type="xsd:boolean" />
                     <element name="monday" type="xsd:boolean" />
                     <element name="tuesday" type="xsd:boolean" />
                     <element name="wednesday" type="xsd:boolean" />
                     <element name="thursday" type="xsd:boolean" />
                     <element name="friday" type="xsd:boolean" />
                     <element name="saturday" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MonthlyTaskScheduler">
            <complexContent>
               <extension base="vim25:DailyTaskScheduler">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="MonthlyByDayTaskScheduler">
            <complexContent>
               <extension base="vim25:MonthlyTaskScheduler">
                  <sequence>
                     <element name="day" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="DayOfWeek">
            <restriction base="xsd:string">
               <enumeration value="sunday" />
               <enumeration value="monday" />
               <enumeration value="tuesday" />
               <enumeration value="wednesday" />
               <enumeration value="thursday" />
               <enumeration value="friday" />
               <enumeration value="saturday" />
            </restriction>
         </simpleType>
         <simpleType name="WeekOfMonth">
            <restriction base="xsd:string">
               <enumeration value="first" />
               <enumeration value="second" />
               <enumeration value="third" />
               <enumeration value="fourth" />
               <enumeration value="last" />
            </restriction>
         </simpleType>
         <complexType name="MonthlyByWeekdayTaskScheduler">
            <complexContent>
               <extension base="vim25:MonthlyTaskScheduler">
                  <sequence>
                     <element name="offset" type="vim25:WeekOfMonth" />
                     <element name="weekday" type="vim25:DayOfWeek" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ScheduledTaskSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="enabled" type="xsd:boolean" />
                     <element name="scheduler" type="vim25:TaskScheduler" />
                     <element name="action" type="vim25:Action" />
                     <element name="notification" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VAppCloneSpecNetworkMappingPair">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="source" type="vim25:ManagedObjectReference" />
                     <element name="destination" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVAppCloneSpecNetworkMappingPair">
            <sequence>
               <element name="VAppCloneSpecNetworkMappingPair" type="vim25:VAppCloneSpecNetworkMappingPair" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VAppCloneSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="location" type="vim25:ManagedObjectReference" />
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="resourceSpec" type="vim25:ResourceConfigSpec" minOccurs="0" />
                     <element name="vmFolder" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="networkMapping" type="vim25:VAppCloneSpecNetworkMappingPair" minOccurs="0" maxOccurs="unbounded" />
                     <element name="property" type="vim25:KeyValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VAppAutoStartAction">
            <restriction base="xsd:string">
               <enumeration value="none" />
               <enumeration value="powerOn" />
               <enumeration value="powerOff" />
               <enumeration value="guestShutdown" />
               <enumeration value="suspend" />
            </restriction>
         </simpleType>
         <complexType name="VAppEntityConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="tag" type="xsd:string" minOccurs="0" />
                     <element name="startOrder" type="xsd:int" minOccurs="0" />
                     <element name="startDelay" type="xsd:int" minOccurs="0" />
                     <element name="waitingForGuest" type="xsd:boolean" minOccurs="0" />
                     <element name="startAction" type="xsd:string" minOccurs="0" />
                     <element name="stopDelay" type="xsd:int" minOccurs="0" />
                     <element name="stopAction" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVAppEntityConfigInfo">
            <sequence>
               <element name="VAppEntityConfigInfo" type="vim25:VAppEntityConfigInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VAppIPAssignmentInfoIpAllocationPolicy">
            <restriction base="xsd:string">
               <enumeration value="dhcpPolicy" />
               <enumeration value="transientPolicy" />
               <enumeration value="fixedPolicy" />
            </restriction>
         </simpleType>
         <simpleType name="VAppIPAssignmentInfoAllocationSchemes">
            <restriction base="xsd:string">
               <enumeration value="dhcp" />
               <enumeration value="ovfenv" />
            </restriction>
         </simpleType>
         <simpleType name="VAppIPAssignmentInfoProtocols">
            <restriction base="xsd:string">
               <enumeration value="IPv4" />
               <enumeration value="IPv6" />
            </restriction>
         </simpleType>
         <complexType name="VAppIPAssignmentInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="supportedAllocationScheme" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipAllocationPolicy" type="xsd:string" minOccurs="0" />
                     <element name="supportedIpProtocol" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipProtocol" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IpPoolIpPoolConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="subnetAddress" type="xsd:string" minOccurs="0" />
                     <element name="netmask" type="xsd:string" minOccurs="0" />
                     <element name="gateway" type="xsd:string" minOccurs="0" />
                     <element name="range" type="xsd:string" minOccurs="0" />
                     <element name="dns" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dhcpServerAvailable" type="xsd:boolean" minOccurs="0" />
                     <element name="ipPoolEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="IpPoolAssociation">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="network" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="networkName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfIpPoolAssociation">
            <sequence>
               <element name="IpPoolAssociation" type="vim25:IpPoolAssociation" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="IpPool">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:int" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="ipv4Config" type="vim25:IpPoolIpPoolConfigInfo" minOccurs="0" />
                     <element name="ipv6Config" type="vim25:IpPoolIpPoolConfigInfo" minOccurs="0" />
                     <element name="dnsDomain" type="xsd:string" minOccurs="0" />
                     <element name="dnsSearchPath" type="xsd:string" minOccurs="0" />
                     <element name="hostPrefix" type="xsd:string" minOccurs="0" />
                     <element name="httpProxy" type="xsd:string" minOccurs="0" />
                     <element name="networkAssociation" type="vim25:IpPoolAssociation" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfIpPool">
            <sequence>
               <element name="IpPool" type="vim25:IpPool" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VAppOvfSectionInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" minOccurs="0" />
                     <element name="namespace" type="xsd:string" minOccurs="0" />
                     <element name="type" type="xsd:string" minOccurs="0" />
                     <element name="atEnvelopeLevel" type="xsd:boolean" minOccurs="0" />
                     <element name="contents" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVAppOvfSectionInfo">
            <sequence>
               <element name="VAppOvfSectionInfo" type="vim25:VAppOvfSectionInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VAppProductInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="classId" type="xsd:string" minOccurs="0" />
                     <element name="instanceId" type="xsd:string" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="vendor" type="xsd:string" minOccurs="0" />
                     <element name="version" type="xsd:string" minOccurs="0" />
                     <element name="fullVersion" type="xsd:string" minOccurs="0" />
                     <element name="vendorUrl" type="xsd:string" minOccurs="0" />
                     <element name="productUrl" type="xsd:string" minOccurs="0" />
                     <element name="appUrl" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVAppProductInfo">
            <sequence>
               <element name="VAppProductInfo" type="vim25:VAppProductInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VAppPropertyInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="classId" type="xsd:string" minOccurs="0" />
                     <element name="instanceId" type="xsd:string" minOccurs="0" />
                     <element name="id" type="xsd:string" minOccurs="0" />
                     <element name="category" type="xsd:string" minOccurs="0" />
                     <element name="label" type="xsd:string" minOccurs="0" />
                     <element name="type" type="xsd:string" minOccurs="0" />
                     <element name="userConfigurable" type="xsd:boolean" minOccurs="0" />
                     <element name="defaultValue" type="xsd:string" minOccurs="0" />
                     <element name="value" type="xsd:string" minOccurs="0" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVAppPropertyInfo">
            <sequence>
               <element name="VAppPropertyInfo" type="vim25:VAppPropertyInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VAppConfigInfo">
            <complexContent>
               <extension base="vim25:VmConfigInfo">
                  <sequence>
                     <element name="entityConfig" type="vim25:VAppEntityConfigInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="annotation" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VAppConfigSpec">
            <complexContent>
               <extension base="vim25:VmConfigSpec">
                  <sequence>
                     <element name="entityConfig" type="vim25:VAppEntityConfigInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="annotation" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualAppImportSpec">
            <complexContent>
               <extension base="vim25:ImportSpec">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="vAppConfigSpec" type="vim25:VAppConfigSpec" />
                     <element name="resourcePoolSpec" type="vim25:ResourceConfigSpec" />
                     <element name="child" type="vim25:ImportSpec" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="product" type="vim25:VAppProductInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="property" type="vim25:VAppPropertyInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipAssignment" type="vim25:VAppIPAssignmentInfo" />
                     <element name="eula" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ovfSection" type="vim25:VAppOvfSectionInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ovfEnvironmentTransport" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="installBootRequired" type="xsd:boolean" />
                     <element name="installBootStopDelay" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VmConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="product" type="vim25:VAppProductSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="property" type="vim25:VAppPropertySpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipAssignment" type="vim25:VAppIPAssignmentInfo" minOccurs="0" />
                     <element name="eula" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ovfSection" type="vim25:VAppOvfSectionSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ovfEnvironmentTransport" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="installBootRequired" type="xsd:boolean" minOccurs="0" />
                     <element name="installBootStopDelay" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VAppProductSpec">
            <complexContent>
               <extension base="vim25:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim25:VAppProductInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVAppProductSpec">
            <sequence>
               <element name="VAppProductSpec" type="vim25:VAppProductSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VAppPropertySpec">
            <complexContent>
               <extension base="vim25:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim25:VAppPropertyInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVAppPropertySpec">
            <sequence>
               <element name="VAppPropertySpec" type="vim25:VAppPropertySpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VAppOvfSectionSpec">
            <complexContent>
               <extension base="vim25:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim25:VAppOvfSectionInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVAppOvfSectionSpec">
            <sequence>
               <element name="VAppOvfSectionSpec" type="vim25:VAppOvfSectionSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="OpenInventoryViewFolderRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="OpenInventoryViewFolder"  type="vim25:OpenInventoryViewFolderRequestType" />
         <element name="OpenInventoryViewFolderResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CloseInventoryViewFolderRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="entity" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="CloseInventoryViewFolder"  type="vim25:CloseInventoryViewFolderRequestType" />
         <element name="CloseInventoryViewFolderResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ModifyListViewRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="add" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               <element name="remove" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="ModifyListView"  type="vim25:ModifyListViewRequestType" />
         <element name="ModifyListViewResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ResetListViewRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="obj" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="ResetListView"  type="vim25:ResetListViewRequestType" />
         <element name="ResetListViewResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
               </sequence>
            </complexType>
         </element>
         <complexType name="ResetListViewFromViewRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="view" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="ResetListViewFromView"  type="vim25:ResetListViewFromViewRequestType" />
         <element name="ResetListViewFromViewResponse">
            <complexType />
         </element>
         <complexType name="DestroyViewRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="DestroyView"  type="vim25:DestroyViewRequestType" />
         <element name="DestroyViewResponse">
            <complexType />
         </element>
         <complexType name="CreateInventoryViewRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="CreateInventoryView"  type="vim25:CreateInventoryViewRequestType" />
         <element name="CreateInventoryViewResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateContainerViewRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="container" type="vim25:ManagedObjectReference" />
               <element name="type" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
               <element name="recursive" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="CreateContainerView"  type="vim25:CreateContainerViewRequestType" />
         <element name="CreateContainerViewResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateListViewRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="obj" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="CreateListView"  type="vim25:CreateListViewRequestType" />
         <element name="CreateListViewResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CreateListViewFromViewRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="view" type="vim25:ManagedObjectReference" />
            </sequence>
         </complexType>
         <element name="CreateListViewFromView"  type="vim25:CreateListViewFromViewRequestType" />
         <element name="CreateListViewFromViewResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="VirtualMachineAffinityInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="affinitySet" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineBootOptions">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="bootDelay" type="xsd:long" minOccurs="0" />
                     <element name="enterBIOSSetup" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineCapability">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="snapshotOperationsSupported" type="xsd:boolean" />
                     <element name="multipleSnapshotsSupported" type="xsd:boolean" />
                     <element name="snapshotConfigSupported" type="xsd:boolean" />
                     <element name="poweredOffSnapshotsSupported" type="xsd:boolean" />
                     <element name="memorySnapshotsSupported" type="xsd:boolean" />
                     <element name="revertToSnapshotSupported" type="xsd:boolean" />
                     <element name="quiescedSnapshotsSupported" type="xsd:boolean" />
                     <element name="disableSnapshotsSupported" type="xsd:boolean" />
                     <element name="lockSnapshotsSupported" type="xsd:boolean" />
                     <element name="consolePreferencesSupported" type="xsd:boolean" />
                     <element name="cpuFeatureMaskSupported" type="xsd:boolean" />
                     <element name="s1AcpiManagementSupported" type="xsd:boolean" />
                     <element name="settingScreenResolutionSupported" type="xsd:boolean" />
                     <element name="toolsAutoUpdateSupported" type="xsd:boolean" />
                     <element name="vmNpivWwnSupported" type="xsd:boolean" />
                     <element name="npivWwnOnNonRdmVmSupported" type="xsd:boolean" />
                     <element name="vmNpivWwnDisableSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="vmNpivWwnUpdateSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="swapPlacementSupported" type="xsd:boolean" />
                     <element name="toolsSyncTimeSupported" type="xsd:boolean" />
                     <element name="virtualMmuUsageSupported" type="xsd:boolean" />
                     <element name="diskSharesSupported" type="xsd:boolean" />
                     <element name="bootOptionsSupported" type="xsd:boolean" />
                     <element name="settingVideoRamSizeSupported" type="xsd:boolean" />
                     <element name="settingDisplayTopologySupported" type="xsd:boolean" minOccurs="0" />
                     <element name="recordReplaySupported" type="xsd:boolean" minOccurs="0" />
                     <element name="changeTrackingSupported" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineCdromInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineCdromInfo">
            <sequence>
               <element name="VirtualMachineCdromInfo" type="vim25:VirtualMachineCdromInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineCloneSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="location" type="vim25:VirtualMachineRelocateSpec" />
                     <element name="template" type="xsd:boolean" />
                     <element name="config" type="vim25:VirtualMachineConfigSpec" minOccurs="0" />
                     <element name="customization" type="vim25:CustomizationSpec" minOccurs="0" />
                     <element name="powerOn" type="xsd:boolean" />
                     <element name="snapshot" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineConfigInfoNpivWwnType">
            <restriction base="xsd:string">
               <enumeration value="vc" />
               <enumeration value="host" />
               <enumeration value="external" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineConfigInfoSwapPlacementType">
            <restriction base="xsd:string">
               <enumeration value="inherit" />
               <enumeration value="vmDirectory" />
               <enumeration value="hostLocal" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineConfigInfoDatastoreUrlPair">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="url" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineConfigInfoDatastoreUrlPair">
            <sequence>
               <element name="VirtualMachineConfigInfoDatastoreUrlPair" type="vim25:VirtualMachineConfigInfoDatastoreUrlPair" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="changeVersion" type="xsd:string" />
                     <element name="modified" type="xsd:dateTime" />
                     <element name="name" type="xsd:string" />
                     <element name="guestFullName" type="xsd:string" />
                     <element name="version" type="xsd:string" />
                     <element name="uuid" type="xsd:string" />
                     <element name="instanceUuid" type="xsd:string" minOccurs="0" />
                     <element name="npivNodeWorldWideName" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                     <element name="npivPortWorldWideName" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                     <element name="npivWorldWideNameType" type="xsd:string" minOccurs="0" />
                     <element name="npivDesiredNodeWwns" type="xsd:short" minOccurs="0" />
                     <element name="npivDesiredPortWwns" type="xsd:short" minOccurs="0" />
                     <element name="npivTemporaryDisabled" type="xsd:boolean" minOccurs="0" />
                     <element name="npivOnNonRdmDisks" type="xsd:boolean" minOccurs="0" />
                     <element name="locationId" type="xsd:string" minOccurs="0" />
                     <element name="template" type="xsd:boolean" />
                     <element name="guestId" type="xsd:string" />
                     <element name="alternateGuestName" type="xsd:string" />
                     <element name="annotation" type="xsd:string" minOccurs="0" />
                     <element name="files" type="vim25:VirtualMachineFileInfo" />
                     <element name="tools" type="vim25:ToolsConfigInfo" minOccurs="0" />
                     <element name="flags" type="vim25:VirtualMachineFlagInfo" />
                     <element name="consolePreferences" type="vim25:VirtualMachineConsolePreferences" minOccurs="0" />
                     <element name="defaultPowerOps" type="vim25:VirtualMachineDefaultPowerOpInfo" />
                     <element name="hardware" type="vim25:VirtualHardware" />
                     <element name="cpuAllocation" type="vim25:ResourceAllocationInfo" minOccurs="0" />
                     <element name="memoryAllocation" type="vim25:ResourceAllocationInfo" minOccurs="0" />
                     <element name="memoryHotAddEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="cpuHotAddEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="cpuHotRemoveEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="hotPlugMemoryLimit" type="xsd:long" minOccurs="0" />
                     <element name="hotPlugMemoryIncrementSize" type="xsd:long" minOccurs="0" />
                     <element name="cpuAffinity" type="vim25:VirtualMachineAffinityInfo" minOccurs="0" />
                     <element name="memoryAffinity" type="vim25:VirtualMachineAffinityInfo" minOccurs="0" />
                     <element name="networkShaper" type="vim25:VirtualMachineNetworkShaperInfo" minOccurs="0" />
                     <element name="extraConfig" type="vim25:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="cpuFeatureMask" type="vim25:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="datastoreUrl" type="vim25:VirtualMachineConfigInfoDatastoreUrlPair" minOccurs="0" maxOccurs="unbounded" />
                     <element name="swapPlacement" type="xsd:string" minOccurs="0" />
                     <element name="bootOptions" type="vim25:VirtualMachineBootOptions" minOccurs="0" />
                     <element name="ftInfo" type="vim25:FaultToleranceConfigInfo" minOccurs="0" />
                     <element name="vAppConfig" type="vim25:VmConfigInfo" minOccurs="0" />
                     <element name="vAssertsEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="changeTrackingEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineConfigOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="version" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="guestOSDescriptor" type="vim25:GuestOsDescriptor" maxOccurs="unbounded" />
                     <element name="guestOSDefaultIndex" type="xsd:int" />
                     <element name="hardwareOptions" type="vim25:VirtualHardwareOption" />
                     <element name="capabilities" type="vim25:VirtualMachineCapability" />
                     <element name="datastore" type="vim25:DatastoreOption" />
                     <element name="defaultDevice" type="vim25:VirtualDevice" minOccurs="0" maxOccurs="unbounded" />
                     <element name="supportedMonitorType" type="xsd:string" maxOccurs="unbounded" />
                     <element name="supportedOvfEnvironmentTransport" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="supportedOvfInstallTransport" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineConfigOptionDescriptor">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:string" />
                     <element name="description" type="xsd:string" minOccurs="0" />
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                     <element name="createSupported" type="xsd:boolean" minOccurs="0" />
                     <element name="defaultConfigOption" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineConfigOptionDescriptor">
            <sequence>
               <element name="VirtualMachineConfigOptionDescriptor" type="vim25:VirtualMachineConfigOptionDescriptor" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualMachineConfigSpecNpivWwnOp">
            <restriction base="xsd:string">
               <enumeration value="generate" />
               <enumeration value="set" />
               <enumeration value="remove" />
               <enumeration value="extend" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineCpuIdInfoSpec">
            <complexContent>
               <extension base="vim25:ArrayUpdateSpec">
                  <sequence>
                     <element name="info" type="vim25:HostCpuIdInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineCpuIdInfoSpec">
            <sequence>
               <element name="VirtualMachineCpuIdInfoSpec" type="vim25:VirtualMachineCpuIdInfoSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="changeVersion" type="xsd:string" minOccurs="0" />
                     <element name="name" type="xsd:string" minOccurs="0" />
                     <element name="version" type="xsd:string" minOccurs="0" />
                     <element name="uuid" type="xsd:string" minOccurs="0" />
                     <element name="instanceUuid" type="xsd:string" minOccurs="0" />
                     <element name="npivNodeWorldWideName" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                     <element name="npivPortWorldWideName" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
                     <element name="npivWorldWideNameType" type="xsd:string" minOccurs="0" />
                     <element name="npivDesiredNodeWwns" type="xsd:short" minOccurs="0" />
                     <element name="npivDesiredPortWwns" type="xsd:short" minOccurs="0" />
                     <element name="npivTemporaryDisabled" type="xsd:boolean" minOccurs="0" />
                     <element name="npivOnNonRdmDisks" type="xsd:boolean" minOccurs="0" />
                     <element name="npivWorldWideNameOp" type="xsd:string" minOccurs="0" />
                     <element name="locationId" type="xsd:string" minOccurs="0" />
                     <element name="guestId" type="xsd:string" minOccurs="0" />
                     <element name="alternateGuestName" type="xsd:string" minOccurs="0" />
                     <element name="annotation" type="xsd:string" minOccurs="0" />
                     <element name="files" type="vim25:VirtualMachineFileInfo" minOccurs="0" />
                     <element name="tools" type="vim25:ToolsConfigInfo" minOccurs="0" />
                     <element name="flags" type="vim25:VirtualMachineFlagInfo" minOccurs="0" />
                     <element name="consolePreferences" type="vim25:VirtualMachineConsolePreferences" minOccurs="0" />
                     <element name="powerOpInfo" type="vim25:VirtualMachineDefaultPowerOpInfo" minOccurs="0" />
                     <element name="numCPUs" type="xsd:int" minOccurs="0" />
                     <element name="memoryMB" type="xsd:long" minOccurs="0" />
                     <element name="memoryHotAddEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="cpuHotAddEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="cpuHotRemoveEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="deviceChange" type="vim25:VirtualDeviceConfigSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="cpuAllocation" type="vim25:ResourceAllocationInfo" minOccurs="0" />
                     <element name="memoryAllocation" type="vim25:ResourceAllocationInfo" minOccurs="0" />
                     <element name="cpuAffinity" type="vim25:VirtualMachineAffinityInfo" minOccurs="0" />
                     <element name="memoryAffinity" type="vim25:VirtualMachineAffinityInfo" minOccurs="0" />
                     <element name="networkShaper" type="vim25:VirtualMachineNetworkShaperInfo" minOccurs="0" />
                     <element name="cpuFeatureMask" type="vim25:VirtualMachineCpuIdInfoSpec" minOccurs="0" maxOccurs="unbounded" />
                     <element name="extraConfig" type="vim25:OptionValue" minOccurs="0" maxOccurs="unbounded" />
                     <element name="swapPlacement" type="xsd:string" minOccurs="0" />
                     <element name="bootOptions" type="vim25:VirtualMachineBootOptions" minOccurs="0" />
                     <element name="vAppConfig" type="vim25:VmConfigSpec" minOccurs="0" />
                     <element name="ftInfo" type="vim25:FaultToleranceConfigInfo" minOccurs="0" />
                     <element name="vAppConfigRemoved" type="xsd:boolean" minOccurs="0" />
                     <element name="vAssertsEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="changeTrackingEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ConfigTarget">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="numCpus" type="xsd:int" />
                     <element name="numCpuCores" type="xsd:int" />
                     <element name="numNumaNodes" type="xsd:int" />
                     <element name="datastore" type="vim25:VirtualMachineDatastoreInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="network" type="vim25:VirtualMachineNetworkInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="distributedVirtualPortgroup" type="vim25:DistributedVirtualPortgroupInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="distributedVirtualSwitch" type="vim25:DistributedVirtualSwitchInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="cdRom" type="vim25:VirtualMachineCdromInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="serial" type="vim25:VirtualMachineSerialInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="parallel" type="vim25:VirtualMachineParallelInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="sound" type="vim25:VirtualMachineSoundInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="usb" type="vim25:VirtualMachineUsbInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="floppy" type="vim25:VirtualMachineFloppyInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="legacyNetworkInfo" type="vim25:VirtualMachineLegacyNetworkSwitchInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="scsiPassthrough" type="vim25:VirtualMachineScsiPassthroughInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="scsiDisk" type="vim25:VirtualMachineScsiDiskDeviceInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ideDisk" type="vim25:VirtualMachineIdeDiskDeviceInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="maxMemMBOptimalPerf" type="xsd:int" />
                     <element name="resourcePool" type="vim25:ResourcePoolRuntimeInfo" minOccurs="0" />
                     <element name="autoVmotion" type="xsd:boolean" minOccurs="0" />
                     <element name="pciPassthrough" type="vim25:VirtualMachinePciPassthroughInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineConsolePreferences">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="powerOnWhenOpened" type="xsd:boolean" minOccurs="0" />
                     <element name="enterFullScreenOnPowerOn" type="xsd:boolean" minOccurs="0" />
                     <element name="closeOnPowerOffOrSuspend" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineDatastoreInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                     <element name="datastore" type="vim25:DatastoreSummary" />
                     <element name="capability" type="vim25:DatastoreCapability" />
                     <element name="maxFileSize" type="xsd:long" />
                     <element name="mode" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineDatastoreInfo">
            <sequence>
               <element name="VirtualMachineDatastoreInfo" type="vim25:VirtualMachineDatastoreInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineDatastoreVolumeOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="fileSystemType" type="xsd:string" />
                     <element name="majorVersion" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineDatastoreVolumeOption">
            <sequence>
               <element name="VirtualMachineDatastoreVolumeOption" type="vim25:VirtualMachineDatastoreVolumeOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="DatastoreOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="unsupportedVolumes" type="vim25:VirtualMachineDatastoreVolumeOption" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachinePowerOpType">
            <restriction base="xsd:string">
               <enumeration value="soft" />
               <enumeration value="hard" />
               <enumeration value="preset" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineStandbyActionType">
            <restriction base="xsd:string">
               <enumeration value="checkpoint" />
               <enumeration value="powerOnSuspend" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineDefaultPowerOpInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="powerOffType" type="xsd:string" minOccurs="0" />
                     <element name="suspendType" type="xsd:string" minOccurs="0" />
                     <element name="resetType" type="xsd:string" minOccurs="0" />
                     <element name="defaultPowerOffType" type="xsd:string" minOccurs="0" />
                     <element name="defaultSuspendType" type="xsd:string" minOccurs="0" />
                     <element name="defaultResetType" type="xsd:string" minOccurs="0" />
                     <element name="standbyAction" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineDiskDeviceInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                     <element name="capacity" type="xsd:long" minOccurs="0" />
                     <element name="vm" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FaultToleranceConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="role" type="xsd:int" />
                     <element name="instanceUuids" type="xsd:string" maxOccurs="unbounded" />
                     <element name="configPaths" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FaultTolerancePrimaryConfigInfo">
            <complexContent>
               <extension base="vim25:FaultToleranceConfigInfo">
                  <sequence>
                     <element name="secondaries" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FaultToleranceSecondaryConfigInfo">
            <complexContent>
               <extension base="vim25:FaultToleranceConfigInfo">
                  <sequence>
                     <element name="primaryVM" type="vim25:ManagedObjectReference" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="FaultToleranceSecondaryOpResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" />
                     <element name="powerOnAttempted" type="xsd:boolean" />
                     <element name="powerOnResult" type="vim25:ClusterPowerOnVmResult" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineFileInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vmPathName" type="xsd:string" minOccurs="0" />
                     <element name="snapshotDirectory" type="xsd:string" minOccurs="0" />
                     <element name="suspendDirectory" type="xsd:string" minOccurs="0" />
                     <element name="logDirectory" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineFileLayoutDiskLayout">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="diskFile" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineFileLayoutDiskLayout">
            <sequence>
               <element name="VirtualMachineFileLayoutDiskLayout" type="vim25:VirtualMachineFileLayoutDiskLayout" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineFileLayoutSnapshotLayout">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="vim25:ManagedObjectReference" />
                     <element name="snapshotFile" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineFileLayoutSnapshotLayout">
            <sequence>
               <element name="VirtualMachineFileLayoutSnapshotLayout" type="vim25:VirtualMachineFileLayoutSnapshotLayout" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineFileLayout">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="configFile" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="logFile" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="disk" type="vim25:VirtualMachineFileLayoutDiskLayout" minOccurs="0" maxOccurs="unbounded" />
                     <element name="snapshot" type="vim25:VirtualMachineFileLayoutSnapshotLayout" minOccurs="0" maxOccurs="unbounded" />
                     <element name="swapFile" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineFileLayoutExFileType">
            <restriction base="xsd:string">
               <enumeration value="config" />
               <enumeration value="extendedConfig" />
               <enumeration value="diskDescriptor" />
               <enumeration value="diskExtent" />
               <enumeration value="log" />
               <enumeration value="stat" />
               <enumeration value="nvram" />
               <enumeration value="snapshotData" />
               <enumeration value="snapshotList" />
               <enumeration value="suspend" />
               <enumeration value="swap" />
               <enumeration value="core" />
               <enumeration value="screenshot" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineFileLayoutExFileInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="name" type="xsd:string" />
                     <element name="type" type="xsd:string" />
                     <element name="size" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineFileLayoutExFileInfo">
            <sequence>
               <element name="VirtualMachineFileLayoutExFileInfo" type="vim25:VirtualMachineFileLayoutExFileInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineFileLayoutExDiskUnit">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="fileKey" type="xsd:int" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineFileLayoutExDiskUnit">
            <sequence>
               <element name="VirtualMachineFileLayoutExDiskUnit" type="vim25:VirtualMachineFileLayoutExDiskUnit" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineFileLayoutExDiskLayout">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="chain" type="vim25:VirtualMachineFileLayoutExDiskUnit" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineFileLayoutExDiskLayout">
            <sequence>
               <element name="VirtualMachineFileLayoutExDiskLayout" type="vim25:VirtualMachineFileLayoutExDiskLayout" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineFileLayoutExSnapshotLayout">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="vim25:ManagedObjectReference" />
                     <element name="dataKey" type="xsd:int" />
                     <element name="disk" type="vim25:VirtualMachineFileLayoutExDiskLayout" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineFileLayoutExSnapshotLayout">
            <sequence>
               <element name="VirtualMachineFileLayoutExSnapshotLayout" type="vim25:VirtualMachineFileLayoutExSnapshotLayout" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineFileLayoutEx">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="file" type="vim25:VirtualMachineFileLayoutExFileInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="disk" type="vim25:VirtualMachineFileLayoutExDiskLayout" minOccurs="0" maxOccurs="unbounded" />
                     <element name="snapshot" type="vim25:VirtualMachineFileLayoutExSnapshotLayout" minOccurs="0" maxOccurs="unbounded" />
                     <element name="timestamp" type="xsd:dateTime" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineHtSharing">
            <restriction base="xsd:string">
               <enumeration value="any" />
               <enumeration value="none" />
               <enumeration value="internal" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachinePowerOffBehavior">
            <restriction base="xsd:string">
               <enumeration value="powerOff" />
               <enumeration value="revert" />
               <enumeration value="prompt" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineFlagInfoMonitorType">
            <restriction base="xsd:string">
               <enumeration value="release" />
               <enumeration value="debug" />
               <enumeration value="stats" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineFlagInfoVirtualMmuUsage">
            <restriction base="xsd:string">
               <enumeration value="automatic" />
               <enumeration value="on" />
               <enumeration value="off" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineFlagInfoVirtualExecUsage">
            <restriction base="xsd:string">
               <enumeration value="hvAuto" />
               <enumeration value="hvOn" />
               <enumeration value="hvOff" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineFlagInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="disableAcceleration" type="xsd:boolean" minOccurs="0" />
                     <element name="enableLogging" type="xsd:boolean" minOccurs="0" />
                     <element name="useToe" type="xsd:boolean" minOccurs="0" />
                     <element name="runWithDebugInfo" type="xsd:boolean" minOccurs="0" />
                     <element name="monitorType" type="xsd:string" minOccurs="0" />
                     <element name="htSharing" type="xsd:string" minOccurs="0" />
                     <element name="snapshotDisabled" type="xsd:boolean" minOccurs="0" />
                     <element name="snapshotLocked" type="xsd:boolean" minOccurs="0" />
                     <element name="diskUuidEnabled" type="xsd:boolean" minOccurs="0" />
                     <element name="virtualMmuUsage" type="xsd:string" minOccurs="0" />
                     <element name="virtualExecUsage" type="xsd:string" minOccurs="0" />
                     <element name="snapshotPowerOffBehavior" type="xsd:string" minOccurs="0" />
                     <element name="recordReplayEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineFloppyInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineFloppyInfo">
            <sequence>
               <element name="VirtualMachineFloppyInfo" type="vim25:VirtualMachineFloppyInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualMachineToolsStatus">
            <restriction base="xsd:string">
               <enumeration value="toolsNotInstalled" />
               <enumeration value="toolsNotRunning" />
               <enumeration value="toolsOld" />
               <enumeration value="toolsOk" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineToolsVersionStatus">
            <restriction base="xsd:string">
               <enumeration value="guestToolsNotInstalled" />
               <enumeration value="guestToolsNeedUpgrade" />
               <enumeration value="guestToolsCurrent" />
               <enumeration value="guestToolsUnmanaged" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineToolsRunningStatus">
            <restriction base="xsd:string">
               <enumeration value="guestToolsNotRunning" />
               <enumeration value="guestToolsRunning" />
               <enumeration value="guestToolsExecutingScripts" />
            </restriction>
         </simpleType>
         <complexType name="GuestDiskInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="diskPath" type="xsd:string" minOccurs="0" />
                     <element name="capacity" type="xsd:long" minOccurs="0" />
                     <element name="freeSpace" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfGuestDiskInfo">
            <sequence>
               <element name="GuestDiskInfo" type="vim25:GuestDiskInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="GuestNicInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="network" type="xsd:string" minOccurs="0" />
                     <element name="ipAddress" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="macAddress" type="xsd:string" minOccurs="0" />
                     <element name="connected" type="xsd:boolean" />
                     <element name="deviceConfigId" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfGuestNicInfo">
            <sequence>
               <element name="GuestNicInfo" type="vim25:GuestNicInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="GuestScreenInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="width" type="xsd:int" />
                     <element name="height" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineGuestState">
            <restriction base="xsd:string">
               <enumeration value="running" />
               <enumeration value="shuttingDown" />
               <enumeration value="resetting" />
               <enumeration value="standby" />
               <enumeration value="notRunning" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="GuestInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="toolsStatus" type="vim25:VirtualMachineToolsStatus" minOccurs="0" />
                     <element name="toolsVersionStatus" type="xsd:string" minOccurs="0" />
                     <element name="toolsRunningStatus" type="xsd:string" minOccurs="0" />
                     <element name="toolsVersion" type="xsd:string" minOccurs="0" />
                     <element name="guestId" type="xsd:string" minOccurs="0" />
                     <element name="guestFamily" type="xsd:string" minOccurs="0" />
                     <element name="guestFullName" type="xsd:string" minOccurs="0" />
                     <element name="hostName" type="xsd:string" minOccurs="0" />
                     <element name="ipAddress" type="xsd:string" minOccurs="0" />
                     <element name="net" type="vim25:GuestNicInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="disk" type="vim25:GuestDiskInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="screen" type="vim25:GuestScreenInfo" minOccurs="0" />
                     <element name="guestState" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineGuestOsFamily">
            <restriction base="xsd:string">
               <enumeration value="windowsGuest" />
               <enumeration value="linuxGuest" />
               <enumeration value="netwareGuest" />
               <enumeration value="solarisGuest" />
               <enumeration value="otherGuestFamily" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineGuestOsIdentifier">
            <restriction base="xsd:string">
               <enumeration value="dosGuest" />
               <enumeration value="win31Guest" />
               <enumeration value="win95Guest" />
               <enumeration value="win98Guest" />
               <enumeration value="winMeGuest" />
               <enumeration value="winNTGuest" />
               <enumeration value="win2000ProGuest" />
               <enumeration value="win2000ServGuest" />
               <enumeration value="win2000AdvServGuest" />
               <enumeration value="winXPHomeGuest" />
               <enumeration value="winXPProGuest" />
               <enumeration value="winXPPro64Guest" />
               <enumeration value="winNetWebGuest" />
               <enumeration value="winNetStandardGuest" />
               <enumeration value="winNetEnterpriseGuest" />
               <enumeration value="winNetDatacenterGuest" />
               <enumeration value="winNetBusinessGuest" />
               <enumeration value="winNetStandard64Guest" />
               <enumeration value="winNetEnterprise64Guest" />
               <enumeration value="winLonghornGuest" />
               <enumeration value="winLonghorn64Guest" />
               <enumeration value="winNetDatacenter64Guest" />
               <enumeration value="winVistaGuest" />
               <enumeration value="winVista64Guest" />
               <enumeration value="windows7Guest" />
               <enumeration value="windows7_64Guest" />
               <enumeration value="windows7Server64Guest" />
               <enumeration value="freebsdGuest" />
               <enumeration value="freebsd64Guest" />
               <enumeration value="redhatGuest" />
               <enumeration value="rhel2Guest" />
               <enumeration value="rhel3Guest" />
               <enumeration value="rhel3_64Guest" />
               <enumeration value="rhel4Guest" />
               <enumeration value="rhel4_64Guest" />
               <enumeration value="rhel5Guest" />
               <enumeration value="rhel5_64Guest" />
               <enumeration value="rhel6Guest" />
               <enumeration value="rhel6_64Guest" />
               <enumeration value="suseGuest" />
               <enumeration value="suse64Guest" />
               <enumeration value="slesGuest" />
               <enumeration value="sles64Guest" />
               <enumeration value="sles10Guest" />
               <enumeration value="sles10_64Guest" />
               <enumeration value="sles11Guest" />
               <enumeration value="sles11_64Guest" />
               <enumeration value="nld9Guest" />
               <enumeration value="oesGuest" />
               <enumeration value="sjdsGuest" />
               <enumeration value="mandrivaGuest" />
               <enumeration value="mandriva64Guest" />
               <enumeration value="turboLinuxGuest" />
               <enumeration value="turboLinux64Guest" />
               <enumeration value="ubuntuGuest" />
               <enumeration value="ubuntu64Guest" />
               <enumeration value="debian4Guest" />
               <enumeration value="debian4_64Guest" />
               <enumeration value="debian5Guest" />
               <enumeration value="debian5_64Guest" />
               <enumeration value="asianux3Guest" />
               <enumeration value="asianux3_64Guest" />
               <enumeration value="asianux4Guest" />
               <enumeration value="asianux4_64Guest" />
               <enumeration value="other24xLinuxGuest" />
               <enumeration value="other26xLinuxGuest" />
               <enumeration value="otherLinuxGuest" />
               <enumeration value="other24xLinux64Guest" />
               <enumeration value="other26xLinux64Guest" />
               <enumeration value="otherLinux64Guest" />
               <enumeration value="solaris6Guest" />
               <enumeration value="solaris7Guest" />
               <enumeration value="solaris8Guest" />
               <enumeration value="solaris9Guest" />
               <enumeration value="solaris10Guest" />
               <enumeration value="solaris10_64Guest" />
               <enumeration value="os2Guest" />
               <enumeration value="netware4Guest" />
               <enumeration value="netware5Guest" />
               <enumeration value="netware6Guest" />
               <enumeration value="openServer5Guest" />
               <enumeration value="openServer6Guest" />
               <enumeration value="unixWare7Guest" />
               <enumeration value="darwinGuest" />
               <enumeration value="darwin64Guest" />
               <enumeration value="otherGuest" />
               <enumeration value="otherGuest64" />
            </restriction>
         </simpleType>
         <complexType name="GuestOsDescriptor">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="family" type="xsd:string" />
                     <element name="fullName" type="xsd:string" />
                     <element name="supportedMaxCPUs" type="xsd:int" />
                     <element name="supportedMinMemMB" type="xsd:int" />
                     <element name="supportedMaxMemMB" type="xsd:int" />
                     <element name="recommendedMemMB" type="xsd:int" />
                     <element name="recommendedColorDepth" type="xsd:int" />
                     <element name="supportedDiskControllerList" type="xsd:string" maxOccurs="unbounded" />
                     <element name="recommendedSCSIController" type="xsd:string" minOccurs="0" />
                     <element name="recommendedDiskController" type="xsd:string" />
                     <element name="supportedNumDisks" type="xsd:int" />
                     <element name="recommendedDiskSizeMB" type="xsd:int" />
                     <element name="supportedEthernetCard" type="xsd:string" maxOccurs="unbounded" />
                     <element name="recommendedEthernetCard" type="xsd:string" minOccurs="0" />
                     <element name="supportsSlaveDisk" type="xsd:boolean" minOccurs="0" />
                     <element name="cpuFeatureMask" type="vim25:HostCpuIdInfo" minOccurs="0" maxOccurs="unbounded" />
                     <element name="supportsWakeOnLan" type="xsd:boolean" />
                     <element name="supportsVMI" type="xsd:boolean" minOccurs="0" />
                     <element name="supportsMemoryHotAdd" type="xsd:boolean" minOccurs="0" />
                     <element name="supportsCpuHotAdd" type="xsd:boolean" minOccurs="0" />
                     <element name="supportsCpuHotRemove" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfGuestOsDescriptor">
            <sequence>
               <element name="GuestOsDescriptor" type="vim25:GuestOsDescriptor" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineIdeDiskDevicePartitionInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:int" />
                     <element name="capacity" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineIdeDiskDevicePartitionInfo">
            <sequence>
               <element name="VirtualMachineIdeDiskDevicePartitionInfo" type="vim25:VirtualMachineIdeDiskDevicePartitionInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineIdeDiskDeviceInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineDiskDeviceInfo">
                  <sequence>
                     <element name="partitionTable" type="vim25:VirtualMachineIdeDiskDevicePartitionInfo" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineIdeDiskDeviceInfo">
            <sequence>
               <element name="VirtualMachineIdeDiskDeviceInfo" type="vim25:VirtualMachineIdeDiskDeviceInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineLegacyNetworkSwitchInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineLegacyNetworkSwitchInfo">
            <sequence>
               <element name="VirtualMachineLegacyNetworkSwitchInfo" type="vim25:VirtualMachineLegacyNetworkSwitchInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineMessage">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="argument" type="xsd:anyType" minOccurs="0" maxOccurs="unbounded" />
                     <element name="text" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineMessage">
            <sequence>
               <element name="VirtualMachineMessage" type="vim25:VirtualMachineMessage" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineNetworkInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                     <element name="network" type="vim25:NetworkSummary" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineNetworkInfo">
            <sequence>
               <element name="VirtualMachineNetworkInfo" type="vim25:VirtualMachineNetworkInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineNetworkShaperInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="enabled" type="xsd:boolean" minOccurs="0" />
                     <element name="peakBps" type="xsd:long" minOccurs="0" />
                     <element name="averageBps" type="xsd:long" minOccurs="0" />
                     <element name="burstSize" type="xsd:long" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineParallelInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineParallelInfo">
            <sequence>
               <element name="VirtualMachineParallelInfo" type="vim25:VirtualMachineParallelInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachinePciPassthroughInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                     <element name="pciDevice" type="vim25:HostPciDevice" />
                     <element name="systemId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachinePciPassthroughInfo">
            <sequence>
               <element name="VirtualMachinePciPassthroughInfo" type="vim25:VirtualMachinePciPassthroughInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineQuestionInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="text" type="xsd:string" />
                     <element name="choice" type="vim25:ChoiceOption" />
                     <element name="message" type="vim25:VirtualMachineMessage" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineRelocateTransformation">
            <restriction base="xsd:string">
               <enumeration value="flat" />
               <enumeration value="sparse" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineRelocateSpecDiskLocator">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="diskId" type="xsd:int" />
                     <element name="datastore" type="vim25:ManagedObjectReference" />
                     <element name="diskMoveType" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineRelocateSpecDiskLocator">
            <sequence>
               <element name="VirtualMachineRelocateSpecDiskLocator" type="vim25:VirtualMachineRelocateSpecDiskLocator" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualMachineRelocateDiskMoveOptions">
            <restriction base="xsd:string">
               <enumeration value="moveAllDiskBackingsAndAllowSharing" />
               <enumeration value="moveAllDiskBackingsAndDisallowSharing" />
               <enumeration value="moveChildMostDiskBacking" />
               <enumeration value="createNewChildDiskBacking" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineRelocateSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="datastore" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="diskMoveType" type="xsd:string" minOccurs="0" />
                     <element name="pool" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="disk" type="vim25:VirtualMachineRelocateSpecDiskLocator" minOccurs="0" maxOccurs="unbounded" />
                     <element name="transform" type="vim25:VirtualMachineRelocateTransformation" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineRuntimeInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="connectionState" type="vim25:VirtualMachineConnectionState" />
                     <element name="powerState" type="vim25:VirtualMachinePowerState" />
                     <element name="faultToleranceState" type="vim25:VirtualMachineFaultToleranceState" minOccurs="0" />
                     <element name="toolsInstallerMounted" type="xsd:boolean" />
                     <element name="suspendTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="bootTime" type="xsd:dateTime" minOccurs="0" />
                     <element name="suspendInterval" type="xsd:long" minOccurs="0" />
                     <element name="question" type="vim25:VirtualMachineQuestionInfo" minOccurs="0" />
                     <element name="memoryOverhead" type="xsd:long" minOccurs="0" />
                     <element name="maxCpuUsage" type="xsd:int" minOccurs="0" />
                     <element name="maxMemoryUsage" type="xsd:int" minOccurs="0" />
                     <element name="numMksConnections" type="xsd:int" />
                     <element name="recordReplayState" type="vim25:VirtualMachineRecordReplayState" minOccurs="0" />
                     <element name="cleanPowerOff" type="xsd:boolean" minOccurs="0" />
                     <element name="needSecondaryReason" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineScsiDiskDeviceInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineDiskDeviceInfo">
                  <sequence>
                     <element name="disk" type="vim25:HostScsiDisk" minOccurs="0" />
                     <element name="transportHint" type="xsd:string" minOccurs="0" />
                     <element name="lunNumber" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineScsiDiskDeviceInfo">
            <sequence>
               <element name="VirtualMachineScsiDiskDeviceInfo" type="vim25:VirtualMachineScsiDiskDeviceInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualMachineScsiPassthroughType">
            <restriction base="xsd:string">
               <enumeration value="disk" />
               <enumeration value="tape" />
               <enumeration value="printer" />
               <enumeration value="processor" />
               <enumeration value="worm" />
               <enumeration value="cdrom" />
               <enumeration value="scanner" />
               <enumeration value="optical" />
               <enumeration value="media" />
               <enumeration value="com" />
               <enumeration value="raid" />
               <enumeration value="unknown" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineScsiPassthroughInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                     <element name="scsiClass" type="xsd:string" />
                     <element name="vendor" type="xsd:string" />
                     <element name="physicalUnitNumber" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineScsiPassthroughInfo">
            <sequence>
               <element name="VirtualMachineScsiPassthroughInfo" type="vim25:VirtualMachineScsiPassthroughInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineSerialInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineSerialInfo">
            <sequence>
               <element name="VirtualMachineSerialInfo" type="vim25:VirtualMachineSerialInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="RevertToSnapshotRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="suppressPowerOn" type="xsd:boolean" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="RevertToSnapshot_Task"  type="vim25:RevertToSnapshotRequestType" />
         <element name="RevertToSnapshot_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RemoveSnapshotRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="removeChildren" type="xsd:boolean" />
            </sequence>
         </complexType>
         <element name="RemoveSnapshot_Task"  type="vim25:RemoveSnapshotRequestType" />
         <element name="RemoveSnapshot_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="RenameSnapshotRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="name" type="xsd:string" minOccurs="0" />
               <element name="description" type="xsd:string" minOccurs="0" />
            </sequence>
         </complexType>
         <element name="RenameSnapshot"  type="vim25:RenameSnapshotRequestType" />
         <element name="RenameSnapshotResponse">
            <complexType />
         </element>
         <complexType name="VirtualMachineSnapshotInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="currentSnapshot" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="rootSnapshotList" type="vim25:VirtualMachineSnapshotTree" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineSnapshotTree">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="snapshot" type="vim25:ManagedObjectReference" />
                     <element name="vm" type="vim25:ManagedObjectReference" />
                     <element name="name" type="xsd:string" />
                     <element name="description" type="xsd:string" />
                     <element name="id" type="xsd:int" minOccurs="0" />
                     <element name="createTime" type="xsd:dateTime" />
                     <element name="state" type="vim25:VirtualMachinePowerState" />
                     <element name="quiesced" type="xsd:boolean" />
                     <element name="backupManifest" type="xsd:string" minOccurs="0" />
                     <element name="childSnapshotList" type="vim25:VirtualMachineSnapshotTree" minOccurs="0" maxOccurs="unbounded" />
                     <element name="replaySupported" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineSnapshotTree">
            <sequence>
               <element name="VirtualMachineSnapshotTree" type="vim25:VirtualMachineSnapshotTree" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineSoundInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineSoundInfo">
            <sequence>
               <element name="VirtualMachineSoundInfo" type="vim25:VirtualMachineSoundInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineUsageOnDatastore">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="datastore" type="vim25:ManagedObjectReference" />
                     <element name="committed" type="xsd:long" />
                     <element name="uncommitted" type="xsd:long" />
                     <element name="unshared" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineUsageOnDatastore">
            <sequence>
               <element name="VirtualMachineUsageOnDatastore" type="vim25:VirtualMachineUsageOnDatastore" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualMachineStorageInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="perDatastoreUsage" type="vim25:VirtualMachineUsageOnDatastore" minOccurs="0" maxOccurs="unbounded" />
                     <element name="timestamp" type="xsd:dateTime" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineConfigSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="template" type="xsd:boolean" />
                     <element name="vmPathName" type="xsd:string" />
                     <element name="memorySizeMB" type="xsd:int" minOccurs="0" />
                     <element name="cpuReservation" type="xsd:int" minOccurs="0" />
                     <element name="memoryReservation" type="xsd:int" minOccurs="0" />
                     <element name="numCpu" type="xsd:int" minOccurs="0" />
                     <element name="numEthernetCards" type="xsd:int" minOccurs="0" />
                     <element name="numVirtualDisks" type="xsd:int" minOccurs="0" />
                     <element name="uuid" type="xsd:string" minOccurs="0" />
                     <element name="instanceUuid" type="xsd:string" minOccurs="0" />
                     <element name="guestId" type="xsd:string" minOccurs="0" />
                     <element name="guestFullName" type="xsd:string" minOccurs="0" />
                     <element name="annotation" type="xsd:string" minOccurs="0" />
                     <element name="product" type="vim25:VAppProductInfo" minOccurs="0" />
                     <element name="installBootRequired" type="xsd:boolean" minOccurs="0" />
                     <element name="ftInfo" type="vim25:FaultToleranceConfigInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineQuickStats">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="overallCpuUsage" type="xsd:int" minOccurs="0" />
                     <element name="overallCpuDemand" type="xsd:int" minOccurs="0" />
                     <element name="guestMemoryUsage" type="xsd:int" minOccurs="0" />
                     <element name="hostMemoryUsage" type="xsd:int" minOccurs="0" />
                     <element name="guestHeartbeatStatus" type="vim25:ManagedEntityStatus" />
                     <element name="distributedCpuEntitlement" type="xsd:int" minOccurs="0" />
                     <element name="distributedMemoryEntitlement" type="xsd:int" minOccurs="0" />
                     <element name="staticCpuEntitlement" type="xsd:int" minOccurs="0" />
                     <element name="staticMemoryEntitlement" type="xsd:int" minOccurs="0" />
                     <element name="privateMemory" type="xsd:int" minOccurs="0" />
                     <element name="sharedMemory" type="xsd:int" minOccurs="0" />
                     <element name="swappedMemory" type="xsd:int" minOccurs="0" />
                     <element name="balloonedMemory" type="xsd:int" minOccurs="0" />
                     <element name="consumedOverheadMemory" type="xsd:int" minOccurs="0" />
                     <element name="ftLogBandwidth" type="xsd:int" minOccurs="0" />
                     <element name="ftSecondaryLatency" type="xsd:int" minOccurs="0" />
                     <element name="ftLatencyStatus" type="vim25:ManagedEntityStatus" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineGuestSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="guestId" type="xsd:string" minOccurs="0" />
                     <element name="guestFullName" type="xsd:string" minOccurs="0" />
                     <element name="toolsStatus" type="vim25:VirtualMachineToolsStatus" minOccurs="0" />
                     <element name="toolsVersionStatus" type="xsd:string" minOccurs="0" />
                     <element name="toolsRunningStatus" type="xsd:string" minOccurs="0" />
                     <element name="hostName" type="xsd:string" minOccurs="0" />
                     <element name="ipAddress" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineStorageSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="committed" type="xsd:long" />
                     <element name="uncommitted" type="xsd:long" />
                     <element name="unshared" type="xsd:long" />
                     <element name="timestamp" type="xsd:dateTime" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineSummary">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="runtime" type="vim25:VirtualMachineRuntimeInfo" />
                     <element name="guest" type="vim25:VirtualMachineGuestSummary" minOccurs="0" />
                     <element name="config" type="vim25:VirtualMachineConfigSummary" />
                     <element name="storage" type="vim25:VirtualMachineStorageSummary" minOccurs="0" />
                     <element name="quickStats" type="vim25:VirtualMachineQuickStats" />
                     <element name="overallStatus" type="vim25:ManagedEntityStatus" />
                     <element name="customValue" type="vim25:CustomFieldValue" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineSummary">
            <sequence>
               <element name="VirtualMachineSummary" type="vim25:VirtualMachineSummary" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualMachineTargetInfoConfigurationTag">
            <restriction base="xsd:string">
               <enumeration value="compliant" />
               <enumeration value="clusterWide" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineTargetInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="configurationTag" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="UpgradePolicy">
            <restriction base="xsd:string">
               <enumeration value="manual" />
               <enumeration value="upgradeAtPowerCycle" />
            </restriction>
         </simpleType>
         <complexType name="ToolsConfigInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="toolsVersion" type="xsd:int" minOccurs="0" />
                     <element name="afterPowerOn" type="xsd:boolean" minOccurs="0" />
                     <element name="afterResume" type="xsd:boolean" minOccurs="0" />
                     <element name="beforeGuestStandby" type="xsd:boolean" minOccurs="0" />
                     <element name="beforeGuestShutdown" type="xsd:boolean" minOccurs="0" />
                     <element name="beforeGuestReboot" type="xsd:boolean" minOccurs="0" />
                     <element name="toolsUpgradePolicy" type="xsd:string" minOccurs="0" />
                     <element name="pendingCustomization" type="xsd:string" minOccurs="0" />
                     <element name="syncTimeWithHost" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualMachineUsbInfoSpeed">
            <restriction base="xsd:string">
               <enumeration value="low" />
               <enumeration value="full" />
               <enumeration value="high" />
               <enumeration value="unknownSpeed" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualMachineUsbInfoFamily">
            <restriction base="xsd:string">
               <enumeration value="audio" />
               <enumeration value="hid" />
               <enumeration value="hid_bootable" />
               <enumeration value="physical" />
               <enumeration value="communication" />
               <enumeration value="imaging" />
               <enumeration value="printer" />
               <enumeration value="storage" />
               <enumeration value="hub" />
               <enumeration value="smart_card" />
               <enumeration value="security" />
               <enumeration value="video" />
               <enumeration value="wireless" />
               <enumeration value="bluetooth" />
               <enumeration value="wusb" />
               <enumeration value="pda" />
               <enumeration value="vendor_specific" />
               <enumeration value="other" />
               <enumeration value="unknownFamily" />
            </restriction>
         </simpleType>
         <complexType name="VirtualMachineUsbInfo">
            <complexContent>
               <extension base="vim25:VirtualMachineTargetInfo">
                  <sequence>
                     <element name="description" type="xsd:string" />
                     <element name="vendor" type="xsd:int" />
                     <element name="product" type="xsd:int" />
                     <element name="physicalPath" type="xsd:string" />
                     <element name="family" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="speed" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="summary" type="vim25:VirtualMachineSummary" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualMachineUsbInfo">
            <sequence>
               <element name="VirtualMachineUsbInfo" type="vim25:VirtualMachineUsbInfo" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualHardware">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="numCPU" type="xsd:int" />
                     <element name="memoryMB" type="xsd:int" />
                     <element name="device" type="vim25:VirtualDevice" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualHardwareOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="hwVersion" type="xsd:int" />
                     <element name="virtualDeviceOption" type="vim25:VirtualDeviceOption" maxOccurs="unbounded" />
                     <element name="deviceListReadonly" type="xsd:boolean" />
                     <element name="numCPU" type="xsd:int" maxOccurs="unbounded" />
                     <element name="numCpuReadonly" type="xsd:boolean" />
                     <element name="memoryMB" type="vim25:LongOption" />
                     <element name="numPCIControllers" type="vim25:IntOption" />
                     <element name="numIDEControllers" type="vim25:IntOption" />
                     <element name="numUSBControllers" type="vim25:IntOption" />
                     <element name="numSIOControllers" type="vim25:IntOption" />
                     <element name="numPS2Controllers" type="vim25:IntOption" />
                     <element name="licensingLimit" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="numSupportedWwnPorts" type="vim25:IntOption" minOccurs="0" />
                     <element name="numSupportedWwnNodes" type="vim25:IntOption" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineImportSpec">
            <complexContent>
               <extension base="vim25:ImportSpec">
                  <sequence>
                     <element name="configSpec" type="vim25:VirtualMachineConfigSpec" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CheckCompatibilityRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="pool" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="testType" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="CheckCompatibility_Task"  type="vim25:CheckCompatibilityRequestType" />
         <element name="CheckCompatibility_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="QueryVMotionCompatibilityExRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
               <element name="host" type="vim25:ManagedObjectReference" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="QueryVMotionCompatibilityEx_Task"  type="vim25:QueryVMotionCompatibilityExRequestType" />
         <element name="QueryVMotionCompatibilityEx_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CheckMigrateRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" />
               <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="pool" type="vim25:ManagedObjectReference" minOccurs="0" />
               <element name="state" type="vim25:VirtualMachinePowerState" minOccurs="0" />
               <element name="testType" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="CheckMigrate_Task"  type="vim25:CheckMigrateRequestType" />
         <element name="CheckMigrate_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CheckRelocateRequestType">
            <sequence>
               <element name="_this" type="vim25:ManagedObjectReference" />
               <element name="vm" type="vim25:ManagedObjectReference" />
               <element name="spec" type="vim25:VirtualMachineRelocateSpec" />
               <element name="testType" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="CheckRelocate_Task"  type="vim25:CheckRelocateRequestType" />
         <element name="CheckRelocate_TaskResponse">
            <complexType>
               <sequence>
                  <element name="returnval" type="vim25:ManagedObjectReference" />
               </sequence>
            </complexType>
         </element>
         <complexType name="CheckResult">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="vm" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="host" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="warning" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                     <element name="error" type="vim25:LocalizedMethodFault" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfCheckResult">
            <sequence>
               <element name="CheckResult" type="vim25:CheckResult" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="CheckTestType">
            <restriction base="xsd:string">
               <enumeration value="sourceTests" />
               <enumeration value="hostTests" />
               <enumeration value="resourcePoolTests" />
               <enumeration value="datastoreTests" />
            </restriction>
         </simpleType>
         <complexType name="CustomizationSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="options" type="vim25:CustomizationOptions" minOccurs="0" />
                     <element name="identity" type="vim25:CustomizationIdentitySettings" />
                     <element name="globalIPSettings" type="vim25:CustomizationGlobalIPSettings" />
                     <element name="nicSettingMap" type="vim25:CustomizationAdapterMapping" minOccurs="0" maxOccurs="unbounded" />
                     <element name="encryptionKey" type="xsd:byte" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationName">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationFixedName">
            <complexContent>
               <extension base="vim25:CustomizationName">
                  <sequence>
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationPrefixName">
            <complexContent>
               <extension base="vim25:CustomizationName">
                  <sequence>
                     <element name="base" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationVirtualMachineName">
            <complexContent>
               <extension base="vim25:CustomizationName">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationUnknownName">
            <complexContent>
               <extension base="vim25:CustomizationName">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationCustomName">
            <complexContent>
               <extension base="vim25:CustomizationName">
                  <sequence>
                     <element name="argument" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationPassword">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="value" type="xsd:string" />
                     <element name="plainText" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationOptions">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="CustomizationSysprepRebootOption">
            <restriction base="xsd:string">
               <enumeration value="reboot" />
               <enumeration value="noreboot" />
               <enumeration value="shutdown" />
            </restriction>
         </simpleType>
         <complexType name="CustomizationWinOptions">
            <complexContent>
               <extension base="vim25:CustomizationOptions">
                  <sequence>
                     <element name="changeSID" type="xsd:boolean" />
                     <element name="deleteAccounts" type="xsd:boolean" />
                     <element name="reboot" type="vim25:CustomizationSysprepRebootOption" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationLinuxOptions">
            <complexContent>
               <extension base="vim25:CustomizationOptions">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationGuiUnattended">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="password" type="vim25:CustomizationPassword" minOccurs="0" />
                     <element name="timeZone" type="xsd:int" />
                     <element name="autoLogon" type="xsd:boolean" />
                     <element name="autoLogonCount" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationUserData">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="fullName" type="xsd:string" />
                     <element name="orgName" type="xsd:string" />
                     <element name="computerName" type="vim25:CustomizationName" />
                     <element name="productId" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationGuiRunOnce">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="commandList" type="xsd:string" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationIdentification">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="joinWorkgroup" type="xsd:string" minOccurs="0" />
                     <element name="joinDomain" type="xsd:string" minOccurs="0" />
                     <element name="domainAdmin" type="xsd:string" minOccurs="0" />
                     <element name="domainAdminPassword" type="vim25:CustomizationPassword" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="CustomizationLicenseDataMode">
            <restriction base="xsd:string">
               <enumeration value="perServer" />
               <enumeration value="perSeat" />
            </restriction>
         </simpleType>
         <complexType name="CustomizationLicenseFilePrintData">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="autoMode" type="vim25:CustomizationLicenseDataMode" />
                     <element name="autoUsers" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationIdentitySettings">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationSysprepText">
            <complexContent>
               <extension base="vim25:CustomizationIdentitySettings">
                  <sequence>
                     <element name="value" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationSysprep">
            <complexContent>
               <extension base="vim25:CustomizationIdentitySettings">
                  <sequence>
                     <element name="guiUnattended" type="vim25:CustomizationGuiUnattended" />
                     <element name="userData" type="vim25:CustomizationUserData" />
                     <element name="guiRunOnce" type="vim25:CustomizationGuiRunOnce" minOccurs="0" />
                     <element name="identification" type="vim25:CustomizationIdentification" />
                     <element name="licenseFilePrintData" type="vim25:CustomizationLicenseFilePrintData" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationLinuxPrep">
            <complexContent>
               <extension base="vim25:CustomizationIdentitySettings">
                  <sequence>
                     <element name="hostName" type="vim25:CustomizationName" />
                     <element name="domain" type="xsd:string" />
                     <element name="timeZone" type="xsd:string" minOccurs="0" />
                     <element name="hwClockUTC" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationGlobalIPSettings">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="dnsSuffixList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dnsServerList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationIPSettingsIpV6AddressSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ip" type="vim25:CustomizationIpV6Generator" maxOccurs="unbounded" />
                     <element name="gateway" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="CustomizationNetBIOSMode">
            <restriction base="xsd:string">
               <enumeration value="enableNetBIOSViaDhcp" />
               <enumeration value="enableNetBIOS" />
               <enumeration value="disableNetBIOS" />
            </restriction>
         </simpleType>
         <complexType name="CustomizationIPSettings">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="ip" type="vim25:CustomizationIpGenerator" />
                     <element name="subnetMask" type="xsd:string" minOccurs="0" />
                     <element name="gateway" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="ipV6Spec" type="vim25:CustomizationIPSettingsIpV6AddressSpec" minOccurs="0" />
                     <element name="dnsServerList" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="dnsDomain" type="xsd:string" minOccurs="0" />
                     <element name="primaryWINS" type="xsd:string" minOccurs="0" />
                     <element name="secondaryWINS" type="xsd:string" minOccurs="0" />
                     <element name="netBIOS" type="vim25:CustomizationNetBIOSMode" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationIpGenerator">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationDhcpIpGenerator">
            <complexContent>
               <extension base="vim25:CustomizationIpGenerator">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationFixedIp">
            <complexContent>
               <extension base="vim25:CustomizationIpGenerator">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationUnknownIpGenerator">
            <complexContent>
               <extension base="vim25:CustomizationIpGenerator">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationCustomIpGenerator">
            <complexContent>
               <extension base="vim25:CustomizationIpGenerator">
                  <sequence>
                     <element name="argument" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationIpV6Generator">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfCustomizationIpV6Generator">
            <sequence>
               <element name="CustomizationIpV6Generator" type="vim25:CustomizationIpV6Generator" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="CustomizationDhcpIpV6Generator">
            <complexContent>
               <extension base="vim25:CustomizationIpV6Generator">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationStatelessIpV6Generator">
            <complexContent>
               <extension base="vim25:CustomizationIpV6Generator">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationFixedIpV6">
            <complexContent>
               <extension base="vim25:CustomizationIpV6Generator">
                  <sequence>
                     <element name="ipAddress" type="xsd:string" />
                     <element name="subnetMask" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationAutoIpV6Generator">
            <complexContent>
               <extension base="vim25:CustomizationIpV6Generator">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationUnknownIpV6Generator">
            <complexContent>
               <extension base="vim25:CustomizationIpV6Generator">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationCustomIpV6Generator">
            <complexContent>
               <extension base="vim25:CustomizationIpV6Generator">
                  <sequence>
                     <element name="argument" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="CustomizationAdapterMapping">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="macAddress" type="xsd:string" minOccurs="0" />
                     <element name="adapter" type="vim25:CustomizationIPSettings" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfCustomizationAdapterMapping">
            <sequence>
               <element name="CustomizationAdapterMapping" type="vim25:CustomizationAdapterMapping" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskMappingPartitionInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="fileSystem" type="xsd:string" />
                     <element name="capacityInKb" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskMappingInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="physicalPartition" type="vim25:HostDiskMappingPartitionInfo" minOccurs="0" />
                     <element name="name" type="xsd:string" />
                     <element name="exclusive" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="HostDiskMappingPartitionOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="name" type="xsd:string" />
                     <element name="fileSystem" type="xsd:string" />
                     <element name="capacityInKb" type="xsd:long" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfHostDiskMappingPartitionOption">
            <sequence>
               <element name="HostDiskMappingPartitionOption" type="vim25:HostDiskMappingPartitionOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="HostDiskMappingOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="physicalPartition" type="vim25:HostDiskMappingPartitionOption" minOccurs="0" maxOccurs="unbounded" />
                     <element name="name" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ParaVirtualSCSIController">
            <complexContent>
               <extension base="vim25:VirtualSCSIController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ParaVirtualSCSIControllerOption">
            <complexContent>
               <extension base="vim25:VirtualSCSIControllerOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualBusLogicController">
            <complexContent>
               <extension base="vim25:VirtualSCSIController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualBusLogicControllerOption">
            <complexContent>
               <extension base="vim25:VirtualSCSIControllerOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromIsoBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromPassthroughBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                     <element name="exclusive" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromRemotePassthroughBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceRemoteDeviceBackingInfo">
                  <sequence>
                     <element name="exclusive" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromAtapiBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromRemoteAtapiBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceRemoteDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdrom">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromIsoBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromPassthroughBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                     <element name="exclusive" type="vim25:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromRemotePassthroughBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceRemoteDeviceBackingOption">
                  <sequence>
                     <element name="exclusive" type="vim25:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromAtapiBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromRemoteAtapiBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualCdromOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualController">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                     <element name="busNumber" type="xsd:int" />
                     <element name="device" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualControllerOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                     <element name="devices" type="vim25:IntOption" />
                     <element name="supportedDevice" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceFileBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceBackingInfo">
                  <sequence>
                     <element name="fileName" type="xsd:string" />
                     <element name="datastore" type="vim25:ManagedObjectReference" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceBackingInfo">
                  <sequence>
                     <element name="deviceName" type="xsd:string" />
                     <element name="useAutoDetect" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceRemoteDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceBackingInfo">
                  <sequence>
                     <element name="deviceName" type="xsd:string" />
                     <element name="useAutoDetect" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDevicePipeBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceBackingInfo">
                  <sequence>
                     <element name="pipeName" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualDeviceConnectInfoStatus">
            <restriction base="xsd:string">
               <enumeration value="ok" />
               <enumeration value="recoverableError" />
               <enumeration value="unrecoverableError" />
               <enumeration value="untried" />
            </restriction>
         </simpleType>
         <complexType name="VirtualDeviceConnectInfo">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="startConnected" type="xsd:boolean" />
                     <element name="allowGuestControl" type="xsd:boolean" />
                     <element name="connected" type="xsd:boolean" />
                     <element name="status" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDevice">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="key" type="xsd:int" />
                     <element name="deviceInfo" type="vim25:Description" minOccurs="0" />
                     <element name="backing" type="vim25:VirtualDeviceBackingInfo" minOccurs="0" />
                     <element name="connectable" type="vim25:VirtualDeviceConnectInfo" minOccurs="0" />
                     <element name="controllerKey" type="xsd:int" minOccurs="0" />
                     <element name="unitNumber" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualDevice">
            <sequence>
               <element name="VirtualDevice" type="vim25:VirtualDevice" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualDeviceBackingOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualDeviceBackingOption">
            <sequence>
               <element name="VirtualDeviceBackingOption" type="vim25:VirtualDeviceBackingOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualDeviceFileExtension">
            <restriction base="xsd:string">
               <enumeration value="iso" />
               <enumeration value="flp" />
               <enumeration value="vmdk" />
               <enumeration value="dsk" />
               <enumeration value="rdm" />
            </restriction>
         </simpleType>
         <complexType name="VirtualDeviceFileBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceBackingOption">
                  <sequence>
                     <element name="fileNameExtensions" type="vim25:ChoiceOption" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceDeviceBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceBackingOption">
                  <sequence>
                     <element name="autoDetectAvailable" type="vim25:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceRemoteDeviceBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceBackingOption">
                  <sequence>
                     <element name="autoDetectAvailable" type="vim25:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDevicePipeBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceConnectOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="startConnected" type="vim25:BoolOption" />
                     <element name="allowGuestControl" type="vim25:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDeviceOption">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="type" type="xsd:string" />
                     <element name="connectOption" type="vim25:VirtualDeviceConnectOption" minOccurs="0" />
                     <element name="controllerType" type="xsd:string" minOccurs="0" />
                     <element name="autoAssignController" type="vim25:BoolOption" minOccurs="0" />
                     <element name="backingOption" type="vim25:VirtualDeviceBackingOption" minOccurs="0" maxOccurs="unbounded" />
                     <element name="defaultBackingOptionIndex" type="xsd:int" minOccurs="0" />
                     <element name="licensingLimit" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
                     <element name="deprecated" type="xsd:boolean" />
                     <element name="plugAndPlay" type="xsd:boolean" />
                     <element name="hotRemoveSupported" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualDeviceOption">
            <sequence>
               <element name="VirtualDeviceOption" type="vim25:VirtualDeviceOption" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualDeviceConfigSpecOperation">
            <restriction base="xsd:string">
               <enumeration value="add" />
               <enumeration value="remove" />
               <enumeration value="edit" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualDeviceConfigSpecFileOperation">
            <restriction base="xsd:string">
               <enumeration value="create" />
               <enumeration value="destroy" />
               <enumeration value="replace" />
            </restriction>
         </simpleType>
         <complexType name="VirtualDeviceConfigSpec">
            <complexContent>
               <extension base="vim25:DynamicData">
                  <sequence>
                     <element name="operation" type="vim25:VirtualDeviceConfigSpecOperation" minOccurs="0" />
                     <element name="fileOperation" type="vim25:VirtualDeviceConfigSpecFileOperation" minOccurs="0" />
                     <element name="device" type="vim25:VirtualDevice" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualDeviceConfigSpec">
            <sequence>
               <element name="VirtualDeviceConfigSpec" type="vim25:VirtualDeviceConfigSpec" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualDiskSparseVer1BackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingInfo">
                  <sequence>
                     <element name="diskMode" type="xsd:string" />
                     <element name="split" type="xsd:boolean" minOccurs="0" />
                     <element name="writeThrough" type="xsd:boolean" minOccurs="0" />
                     <element name="spaceUsedInKB" type="xsd:long" minOccurs="0" />
                     <element name="contentId" type="xsd:string" minOccurs="0" />
                     <element name="parent" type="vim25:VirtualDiskSparseVer1BackingInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskSparseVer2BackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingInfo">
                  <sequence>
                     <element name="diskMode" type="xsd:string" />
                     <element name="split" type="xsd:boolean" minOccurs="0" />
                     <element name="writeThrough" type="xsd:boolean" minOccurs="0" />
                     <element name="spaceUsedInKB" type="xsd:long" minOccurs="0" />
                     <element name="uuid" type="xsd:string" minOccurs="0" />
                     <element name="contentId" type="xsd:string" minOccurs="0" />
                     <element name="changeId" type="xsd:string" minOccurs="0" />
                     <element name="parent" type="vim25:VirtualDiskSparseVer2BackingInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskFlatVer1BackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingInfo">
                  <sequence>
                     <element name="diskMode" type="xsd:string" />
                     <element name="split" type="xsd:boolean" minOccurs="0" />
                     <element name="writeThrough" type="xsd:boolean" minOccurs="0" />
                     <element name="contentId" type="xsd:string" minOccurs="0" />
                     <element name="parent" type="vim25:VirtualDiskFlatVer1BackingInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskFlatVer2BackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingInfo">
                  <sequence>
                     <element name="diskMode" type="xsd:string" />
                     <element name="split" type="xsd:boolean" minOccurs="0" />
                     <element name="writeThrough" type="xsd:boolean" minOccurs="0" />
                     <element name="thinProvisioned" type="xsd:boolean" minOccurs="0" />
                     <element name="eagerlyScrub" type="xsd:boolean" minOccurs="0" />
                     <element name="uuid" type="xsd:string" minOccurs="0" />
                     <element name="contentId" type="xsd:string" minOccurs="0" />
                     <element name="changeId" type="xsd:string" minOccurs="0" />
                     <element name="parent" type="vim25:VirtualDiskFlatVer2BackingInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskRawDiskVer2BackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                     <element name="descriptorFileName" type="xsd:string" />
                     <element name="uuid" type="xsd:string" minOccurs="0" />
                     <element name="changeId" type="xsd:string" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskPartitionedRawDiskVer2BackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDiskRawDiskVer2BackingInfo">
                  <sequence>
                     <element name="partition" type="xsd:int" maxOccurs="unbounded" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskRawDiskMappingVer1BackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingInfo">
                  <sequence>
                     <element name="lunUuid" type="xsd:string" minOccurs="0" />
                     <element name="deviceName" type="xsd:string" minOccurs="0" />
                     <element name="compatibilityMode" type="xsd:string" minOccurs="0" />
                     <element name="diskMode" type="xsd:string" minOccurs="0" />
                     <element name="uuid" type="xsd:string" minOccurs="0" />
                     <element name="contentId" type="xsd:string" minOccurs="0" />
                     <element name="changeId" type="xsd:string" minOccurs="0" />
                     <element name="parent" type="vim25:VirtualDiskRawDiskMappingVer1BackingInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDisk">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                     <element name="capacityInKB" type="xsd:long" />
                     <element name="shares" type="vim25:SharesInfo" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ArrayOfVirtualDisk">
            <sequence>
               <element name="VirtualDisk" type="vim25:VirtualDisk" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <simpleType name="VirtualDiskMode">
            <restriction base="xsd:string">
               <enumeration value="persistent" />
               <enumeration value="nonpersistent" />
               <enumeration value="undoable" />
               <enumeration value="independent_persistent" />
               <enumeration value="independent_nonpersistent" />
               <enumeration value="append" />
            </restriction>
         </simpleType>
         <simpleType name="VirtualDiskCompatibilityMode">
            <restriction base="xsd:string">
               <enumeration value="virtualMode" />
               <enumeration value="physicalMode" />
            </restriction>
         </simpleType>
         <complexType name="VirtualDiskSparseVer1BackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingOption">
                  <sequence>
                     <element name="diskModes" type="vim25:ChoiceOption" />
                     <element name="split" type="vim25:BoolOption" />
                     <element name="writeThrough" type="vim25:BoolOption" />
                     <element name="growable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskSparseVer2BackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingOption">
                  <sequence>
                     <element name="diskMode" type="vim25:ChoiceOption" />
                     <element name="split" type="vim25:BoolOption" />
                     <element name="writeThrough" type="vim25:BoolOption" />
                     <element name="growable" type="xsd:boolean" />
                     <element name="hotGrowable" type="xsd:boolean" />
                     <element name="uuid" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskFlatVer1BackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingOption">
                  <sequence>
                     <element name="diskMode" type="vim25:ChoiceOption" />
                     <element name="split" type="vim25:BoolOption" />
                     <element name="writeThrough" type="vim25:BoolOption" />
                     <element name="growable" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskFlatVer2BackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingOption">
                  <sequence>
                     <element name="diskMode" type="vim25:ChoiceOption" />
                     <element name="split" type="vim25:BoolOption" />
                     <element name="writeThrough" type="vim25:BoolOption" />
                     <element name="growable" type="xsd:boolean" />
                     <element name="hotGrowable" type="xsd:boolean" />
                     <element name="uuid" type="xsd:boolean" />
                     <element name="thinProvisioned" type="vim25:BoolOption" minOccurs="0" />
                     <element name="eagerlyScrub" type="vim25:BoolOption" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskRawDiskVer2BackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                     <element name="descriptorFileNameExtensions" type="vim25:ChoiceOption" />
                     <element name="uuid" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskPartitionedRawDiskVer2BackingOption">
            <complexContent>
               <extension base="vim25:VirtualDiskRawDiskVer2BackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskRawDiskMappingVer1BackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                     <element name="descriptorFileNameExtensions" type="vim25:ChoiceOption" minOccurs="0" />
                     <element name="compatibilityMode" type="vim25:ChoiceOption" />
                     <element name="diskMode" type="vim25:ChoiceOption" />
                     <element name="uuid" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualDiskOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                     <element name="capacityInKB" type="vim25:LongOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualE1000">
            <complexContent>
               <extension base="vim25:VirtualEthernetCard">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualE1000Option">
            <complexContent>
               <extension base="vim25:VirtualEthernetCardOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEnsoniq1371">
            <complexContent>
               <extension base="vim25:VirtualSoundCard">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEnsoniq1371Option">
            <complexContent>
               <extension base="vim25:VirtualSoundCardOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEthernetCardNetworkBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                     <element name="network" type="vim25:ManagedObjectReference" minOccurs="0" />
                     <element name="inPassthroughMode" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEthernetCardLegacyNetworkBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEthernetCardDistributedVirtualPortBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceBackingInfo">
                  <sequence>
                     <element name="port" type="vim25:DistributedVirtualSwitchPortConnection" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEthernetCard">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                     <element name="addressType" type="xsd:string" minOccurs="0" />
                     <element name="macAddress" type="xsd:string" minOccurs="0" />
                     <element name="wakeOnLanEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEthernetCardNetworkBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualEthernetCardLegacyNetworkDeviceName">
            <restriction base="xsd:string">
               <enumeration value="bridged" />
               <enumeration value="nat" />
               <enumeration value="hostonly" />
            </restriction>
         </simpleType>
         <complexType name="VirtualEthernetCardLegacyNetworkBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualEthernetCardDVPortBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualEthernetCardMacType">
            <restriction base="xsd:string">
               <enumeration value="manual" />
               <enumeration value="generated" />
               <enumeration value="assigned" />
            </restriction>
         </simpleType>
         <complexType name="VirtualEthernetCardOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                     <element name="supportedOUI" type="vim25:ChoiceOption" />
                     <element name="macType" type="vim25:ChoiceOption" />
                     <element name="wakeOnLanEnabled" type="vim25:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyImageBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyRemoteDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceRemoteDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppy">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyImageBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyDeviceBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyRemoteDeviceBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceRemoteDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualFloppyOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualIDEController">
            <complexContent>
               <extension base="vim25:VirtualController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualIDEControllerOption">
            <complexContent>
               <extension base="vim25:VirtualControllerOption">
                  <sequence>
                     <element name="numIDEDisks" type="vim25:IntOption" />
                     <element name="numIDECdroms" type="vim25:IntOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualKeyboard">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualKeyboardOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualLsiLogicController">
            <complexContent>
               <extension base="vim25:VirtualSCSIController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualLsiLogicControllerOption">
            <complexContent>
               <extension base="vim25:VirtualSCSIControllerOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualLsiLogicSASController">
            <complexContent>
               <extension base="vim25:VirtualSCSIController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualLsiLogicSASControllerOption">
            <complexContent>
               <extension base="vim25:VirtualSCSIControllerOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCIController">
            <complexContent>
               <extension base="vim25:VirtualController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCIControllerOption">
            <complexContent>
               <extension base="vim25:VirtualControllerOption">
                  <sequence>
                     <element name="numSCSIControllers" type="vim25:IntOption" />
                     <element name="numEthernetCards" type="vim25:IntOption" />
                     <element name="numVideoCards" type="vim25:IntOption" />
                     <element name="numSoundCards" type="vim25:IntOption" />
                     <element name="numVmiRoms" type="vim25:IntOption" />
                     <element name="numVmciDevices" type="vim25:IntOption" minOccurs="0" />
                     <element name="numPCIPassthroughDevices" type="vim25:IntOption" minOccurs="0" />
                     <element name="numSasSCSIControllers" type="vim25:IntOption" minOccurs="0" />
                     <element name="numVmxnet3EthernetCards" type="vim25:IntOption" minOccurs="0" />
                     <element name="numParaVirtualSCSIControllers" type="vim25:IntOption" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCIPassthroughDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                     <element name="id" type="xsd:string" />
                     <element name="deviceId" type="xsd:string" />
                     <element name="systemId" type="xsd:string" />
                     <element name="vendorId" type="xsd:short" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCIPassthrough">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCIPassthroughDeviceBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCIPassthroughOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCNet32">
            <complexContent>
               <extension base="vim25:VirtualEthernetCard">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPCNet32Option">
            <complexContent>
               <extension base="vim25:VirtualEthernetCardOption">
                  <sequence>
                     <element name="supportsMorphing" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPS2Controller">
            <complexContent>
               <extension base="vim25:VirtualController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPS2ControllerOption">
            <complexContent>
               <extension base="vim25:VirtualControllerOption">
                  <sequence>
                     <element name="numKeyboards" type="vim25:IntOption" />
                     <element name="numPointingDevices" type="vim25:IntOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPortFileBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPortDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPort">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPortFileBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPortDeviceBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualParallelPortOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPointingDeviceDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                     <element name="hostPointingDevice" type="xsd:string" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPointingDevice">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualPointingDeviceHostChoice">
            <restriction base="xsd:string">
               <enumeration value="autodetect" />
               <enumeration value="intellimouseExplorer" />
               <enumeration value="intellimousePs2" />
               <enumeration value="logitechMouseman" />
               <enumeration value="microsoft_serial" />
               <enumeration value="mouseSystems" />
               <enumeration value="mousemanSerial" />
               <enumeration value="ps2" />
            </restriction>
         </simpleType>
         <complexType name="VirtualPointingDeviceBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                     <element name="hostPointingDevice" type="vim25:ChoiceOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualPointingDeviceOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualSCSISharing">
            <restriction base="xsd:string">
               <enumeration value="noSharing" />
               <enumeration value="virtualSharing" />
               <enumeration value="physicalSharing" />
            </restriction>
         </simpleType>
         <complexType name="ArrayOfVirtualSCSISharing">
            <sequence>
               <element name="VirtualSCSISharing" type="vim25:VirtualSCSISharing" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="VirtualSCSIController">
            <complexContent>
               <extension base="vim25:VirtualController">
                  <sequence>
                     <element name="hotAddRemove" type="xsd:boolean" minOccurs="0" />
                     <element name="sharedBus" type="vim25:VirtualSCSISharing" />
                     <element name="scsiCtlrUnitNumber" type="xsd:int" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSCSIControllerOption">
            <complexContent>
               <extension base="vim25:VirtualControllerOption">
                  <sequence>
                     <element name="numSCSIDisks" type="vim25:IntOption" />
                     <element name="numSCSICdroms" type="vim25:IntOption" />
                     <element name="numSCSIPassthrough" type="vim25:IntOption" />
                     <element name="sharing" type="vim25:VirtualSCSISharing" maxOccurs="unbounded" />
                     <element name="defaultSharedIndex" type="xsd:int" />
                     <element name="hotAddRemove" type="vim25:BoolOption" />
                     <element name="scsiCtlrUnitNumber" type="xsd:int" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSCSIPassthroughDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSCSIPassthrough">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSCSIPassthroughDeviceBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSCSIPassthroughOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSIOController">
            <complexContent>
               <extension base="vim25:VirtualController">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSIOControllerOption">
            <complexContent>
               <extension base="vim25:VirtualControllerOption">
                  <sequence>
                     <element name="numFloppyDrives" type="vim25:IntOption" />
                     <element name="numSerialPorts" type="vim25:IntOption" />
                     <element name="numParallelPorts" type="vim25:IntOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortFileBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortPipeBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDevicePipeBackingInfo">
                  <sequence>
                     <element name="endpoint" type="xsd:string" />
                     <element name="noRxLoss" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPort">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                     <element name="yieldOnPoll" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <simpleType name="VirtualSerialPortEndPoint">
            <restriction base="xsd:string">
               <enumeration value="client" />
               <enumeration value="server" />
            </restriction>
         </simpleType>
         <complexType name="VirtualSerialPortFileBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceFileBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortDeviceBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortPipeBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDevicePipeBackingOption">
                  <sequence>
                     <element name="endpoint" type="vim25:ChoiceOption" />
                     <element name="noRxLoss" type="vim25:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSerialPortOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                     <element name="yieldOnPoll" type="vim25:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundBlaster16">
            <complexContent>
               <extension base="vim25:VirtualSoundCard">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundBlaster16Option">
            <complexContent>
               <extension base="vim25:VirtualSoundCardOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundCardDeviceBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundCard">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundCardDeviceBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualSoundCardOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualUSBUSBBackingInfo">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingInfo">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualUSB">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                     <element name="connected" type="xsd:boolean" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualUSBController">
            <complexContent>
               <extension base="vim25:VirtualController">
                  <sequence>
                     <element name="autoConnectDevices" type="xsd:boolean" minOccurs="0" />
                     <element name="ehciEnabled" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualUSBControllerOption">
            <complexContent>
               <extension base="vim25:VirtualControllerOption">
                  <sequence>
                     <element name="autoConnectDevices" type="vim25:BoolOption" />
                     <element name="ehciSupported" type="vim25:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualUSBUSBBackingOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceDeviceBackingOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualUSBOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineVMCIDevice">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                     <element name="id" type="xsd:long" minOccurs="0" />
                     <element name="allowUnrestrictedCommunication" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineVMCIDeviceOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                     <element name="allowUnrestrictedCommunication" type="vim25:BoolOption" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineVMIROM">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVMIROMOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualMachineVideoCard">
            <complexContent>
               <extension base="vim25:VirtualDevice">
                  <sequence>
                     <element name="videoRamSizeInKB" type="xsd:long" minOccurs="0" />
                     <element name="numDisplays" type="xsd:int" minOccurs="0" />
                     <element name="useAutoDetect" type="xsd:boolean" minOccurs="0" />
                     <element name="enable3DSupport" type="xsd:boolean" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVideoCardOption">
            <complexContent>
               <extension base="vim25:VirtualDeviceOption">
                  <sequence>
                     <element name="videoRamSizeInKB" type="vim25:LongOption" minOccurs="0" />
                     <element name="numDisplays" type="vim25:IntOption" minOccurs="0" />
                     <element name="useAutoDetect" type="vim25:BoolOption" minOccurs="0" />
                     <element name="support3D" type="vim25:BoolOption" minOccurs="0" />
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVmxnet">
            <complexContent>
               <extension base="vim25:VirtualEthernetCard">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVmxnet2">
            <complexContent>
               <extension base="vim25:VirtualVmxnet">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVmxnet2Option">
            <complexContent>
               <extension base="vim25:VirtualVmxnetOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVmxnet3">
            <complexContent>
               <extension base="vim25:VirtualVmxnet">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVmxnet3Option">
            <complexContent>
               <extension base="vim25:VirtualVmxnetOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="VirtualVmxnetOption">
            <complexContent>
               <extension base="vim25:VirtualEthernetCardOption">
                  <sequence>
                  </sequence>
               </extension>
            </complexContent>
         </complexType>
         <complexType name="ManagedObjectReference">
            <simpleContent>
               <extension base="xsd:string">
                  <attribute name="type" type="xsd:string"/>
               </extension>
            </simpleContent>
         </complexType>
         <complexType name="ArrayOfString">
            <sequence>
               <element name="string" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfAnyType">
            <sequence>
               <element name="anyType" type="xsd:anyType" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfManagedObjectReference">
            <sequence>
               <element name="ManagedObjectReference" type="vim25:ManagedObjectReference" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfByte">
            <sequence>
               <element name="byte" type="xsd:byte" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfInt">
            <sequence>
               <element name="int" type="xsd:int" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfLong">
            <sequence>
               <element name="long" type="xsd:long" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <complexType name="ArrayOfShort">
            <sequence>
               <element name="short" type="xsd:short" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
         </complexType>
         <element name="versionURI" type="xsd:string" />
      </schema>
   </types>
   <message name="HostCommunicationFaultMsg">
      <part name="fault" element="vim25:HostCommunicationFault" />
   </message>
   <message name="HostNotConnectedFaultMsg">
      <part name="fault" element="vim25:HostNotConnectedFault" />
   </message>
   <message name="HostNotReachableFaultMsg">
      <part name="fault" element="vim25:HostNotReachableFault" />
   </message>
   <message name="InvalidArgumentFaultMsg">
      <part name="fault" element="vim25:InvalidArgumentFault" />
   </message>
   <message name="InvalidRequestFaultMsg">
      <part name="fault" element="vim25:InvalidRequestFault" />
   </message>
   <message name="InvalidTypeFaultMsg">
      <part name="fault" element="vim25:InvalidTypeFault" />
   </message>
   <message name="ManagedObjectNotFoundFaultMsg">
      <part name="fault" element="vim25:ManagedObjectNotFoundFault" />
   </message>
   <message name="MethodNotFoundFaultMsg">
      <part name="fault" element="vim25:MethodNotFoundFault" />
   </message>
   <message name="NotEnoughLicensesFaultMsg">
      <part name="fault" element="vim25:NotEnoughLicensesFault" />
   </message>
   <message name="NotImplementedFaultMsg">
      <part name="fault" element="vim25:NotImplementedFault" />
   </message>
   <message name="NotSupportedFaultMsg">
      <part name="fault" element="vim25:NotSupportedFault" />
   </message>
   <message name="RequestCanceledFaultMsg">
      <part name="fault" element="vim25:RequestCanceledFault" />
   </message>
   <message name="SecurityErrorFaultMsg">
      <part name="fault" element="vim25:SecurityErrorFault" />
   </message>
   <message name="SystemErrorFaultMsg">
      <part name="fault" element="vim25:SystemErrorFault" />
   </message>
   <message name="UnexpectedFaultFaultMsg">
      <part name="fault" element="vim25:UnexpectedFaultFault" />
   </message>
   <message name="InvalidCollectorVersionFaultMsg">
      <part name="fault" element="vim25:InvalidCollectorVersionFault" />
   </message>
   <message name="InvalidPropertyFaultMsg">
      <part name="fault" element="vim25:InvalidPropertyFault" />
   </message>
   <message name="DestroyPropertyFilterRequestMsg">
      <part name="parameters" element="vim25:DestroyPropertyFilter" />
   </message>
   <message name="DestroyPropertyFilterResponseMsg">
      <part name="parameters" element="vim25:DestroyPropertyFilterResponse" />
   </message>
   <message name="CreateFilterRequestMsg">
      <part name="parameters" element="vim25:CreateFilter" />
   </message>
   <message name="CreateFilterResponseMsg">
      <part name="parameters" element="vim25:CreateFilterResponse" />
   </message>
   <message name="RetrievePropertiesRequestMsg">
      <part name="parameters" element="vim25:RetrieveProperties" />
   </message>
   <message name="RetrievePropertiesResponseMsg">
      <part name="parameters" element="vim25:RetrievePropertiesResponse" />
   </message>
   <message name="CheckForUpdatesRequestMsg">
      <part name="parameters" element="vim25:CheckForUpdates" />
   </message>
   <message name="CheckForUpdatesResponseMsg">
      <part name="parameters" element="vim25:CheckForUpdatesResponse" />
   </message>
   <message name="WaitForUpdatesRequestMsg">
      <part name="parameters" element="vim25:WaitForUpdates" />
   </message>
   <message name="WaitForUpdatesResponseMsg">
      <part name="parameters" element="vim25:WaitForUpdatesResponse" />
   </message>
   <message name="CancelWaitForUpdatesRequestMsg">
      <part name="parameters" element="vim25:CancelWaitForUpdates" />
   </message>
   <message name="CancelWaitForUpdatesResponseMsg">
      <part name="parameters" element="vim25:CancelWaitForUpdatesResponse" />
   </message>
   <message name="MethodFaultFaultMsg">
      <part name="fault" element="vim25:MethodFaultFault" />
   </message>
   <message name="RuntimeFaultFaultMsg">
      <part name="fault" element="vim25:RuntimeFaultFault" />
   </message>
   <message name="AddAuthorizationRoleRequestMsg">
      <part name="parameters" element="vim25:AddAuthorizationRole" />
   </message>
   <message name="AddAuthorizationRoleResponseMsg">
      <part name="parameters" element="vim25:AddAuthorizationRoleResponse" />
   </message>
   <message name="RemoveAuthorizationRoleRequestMsg">
      <part name="parameters" element="vim25:RemoveAuthorizationRole" />
   </message>
   <message name="RemoveAuthorizationRoleResponseMsg">
      <part name="parameters" element="vim25:RemoveAuthorizationRoleResponse" />
   </message>
   <message name="UpdateAuthorizationRoleRequestMsg">
      <part name="parameters" element="vim25:UpdateAuthorizationRole" />
   </message>
   <message name="UpdateAuthorizationRoleResponseMsg">
      <part name="parameters" element="vim25:UpdateAuthorizationRoleResponse" />
   </message>
   <message name="MergePermissionsRequestMsg">
      <part name="parameters" element="vim25:MergePermissions" />
   </message>
   <message name="MergePermissionsResponseMsg">
      <part name="parameters" element="vim25:MergePermissionsResponse" />
   </message>
   <message name="RetrieveRolePermissionsRequestMsg">
      <part name="parameters" element="vim25:RetrieveRolePermissions" />
   </message>
   <message name="RetrieveRolePermissionsResponseMsg">
      <part name="parameters" element="vim25:RetrieveRolePermissionsResponse" />
   </message>
   <message name="RetrieveEntityPermissionsRequestMsg">
      <part name="parameters" element="vim25:RetrieveEntityPermissions" />
   </message>
   <message name="RetrieveEntityPermissionsResponseMsg">
      <part name="parameters" element="vim25:RetrieveEntityPermissionsResponse" />
   </message>
   <message name="RetrieveAllPermissionsRequestMsg">
      <part name="parameters" element="vim25:RetrieveAllPermissions" />
   </message>
   <message name="RetrieveAllPermissionsResponseMsg">
      <part name="parameters" element="vim25:RetrieveAllPermissionsResponse" />
   </message>
   <message name="SetEntityPermissionsRequestMsg">
      <part name="parameters" element="vim25:SetEntityPermissions" />
   </message>
   <message name="SetEntityPermissionsResponseMsg">
      <part name="parameters" element="vim25:SetEntityPermissionsResponse" />
   </message>
   <message name="ResetEntityPermissionsRequestMsg">
      <part name="parameters" element="vim25:ResetEntityPermissions" />
   </message>
   <message name="ResetEntityPermissionsResponseMsg">
      <part name="parameters" element="vim25:ResetEntityPermissionsResponse" />
   </message>
   <message name="RemoveEntityPermissionRequestMsg">
      <part name="parameters" element="vim25:RemoveEntityPermission" />
   </message>
   <message name="RemoveEntityPermissionResponseMsg">
      <part name="parameters" element="vim25:RemoveEntityPermissionResponse" />
   </message>
   <message name="ReconfigureCluster_TaskRequestMsg">
      <part name="parameters" element="vim25:ReconfigureCluster_Task" />
   </message>
   <message name="ReconfigureCluster_TaskResponseMsg">
      <part name="parameters" element="vim25:ReconfigureCluster_TaskResponse" />
   </message>
   <message name="ApplyRecommendationRequestMsg">
      <part name="parameters" element="vim25:ApplyRecommendation" />
   </message>
   <message name="ApplyRecommendationResponseMsg">
      <part name="parameters" element="vim25:ApplyRecommendationResponse" />
   </message>
   <message name="RecommendHostsForVmRequestMsg">
      <part name="parameters" element="vim25:RecommendHostsForVm" />
   </message>
   <message name="RecommendHostsForVmResponseMsg">
      <part name="parameters" element="vim25:RecommendHostsForVmResponse" />
   </message>
   <message name="AddHost_TaskRequestMsg">
      <part name="parameters" element="vim25:AddHost_Task" />
   </message>
   <message name="AddHost_TaskResponseMsg">
      <part name="parameters" element="vim25:AddHost_TaskResponse" />
   </message>
   <message name="MoveInto_TaskRequestMsg">
      <part name="parameters" element="vim25:MoveInto_Task" />
   </message>
   <message name="MoveInto_TaskResponseMsg">
      <part name="parameters" element="vim25:MoveInto_TaskResponse" />
   </message>
   <message name="MoveHostInto_TaskRequestMsg">
      <part name="parameters" element="vim25:MoveHostInto_Task" />
   </message>
   <message name="MoveHostInto_TaskResponseMsg">
      <part name="parameters" element="vim25:MoveHostInto_TaskResponse" />
   </message>
   <message name="RefreshRecommendationRequestMsg">
      <part name="parameters" element="vim25:RefreshRecommendation" />
   </message>
   <message name="RefreshRecommendationResponseMsg">
      <part name="parameters" element="vim25:RefreshRecommendationResponse" />
   </message>
   <message name="RetrieveDasAdvancedRuntimeInfoRequestMsg">
      <part name="parameters" element="vim25:RetrieveDasAdvancedRuntimeInfo" />
   </message>
   <message name="RetrieveDasAdvancedRuntimeInfoResponseMsg">
      <part name="parameters" element="vim25:RetrieveDasAdvancedRuntimeInfoResponse" />
   </message>
   <message name="ReconfigureComputeResource_TaskRequestMsg">
      <part name="parameters" element="vim25:ReconfigureComputeResource_Task" />
   </message>
   <message name="ReconfigureComputeResource_TaskResponseMsg">
      <part name="parameters" element="vim25:ReconfigureComputeResource_TaskResponse" />
   </message>
   <message name="AddCustomFieldDefRequestMsg">
      <part name="parameters" element="vim25:AddCustomFieldDef" />
   </message>
   <message name="AddCustomFieldDefResponseMsg">
      <part name="parameters" element="vim25:AddCustomFieldDefResponse" />
   </message>
   <message name="RemoveCustomFieldDefRequestMsg">
      <part name="parameters" element="vim25:RemoveCustomFieldDef" />
   </message>
   <message name="RemoveCustomFieldDefResponseMsg">
      <part name="parameters" element="vim25:RemoveCustomFieldDefResponse" />
   </message>
   <message name="RenameCustomFieldDefRequestMsg">
      <part name="parameters" element="vim25:RenameCustomFieldDef" />
   </message>
   <message name="RenameCustomFieldDefResponseMsg">
      <part name="parameters" element="vim25:RenameCustomFieldDefResponse" />
   </message>
   <message name="SetFieldRequestMsg">
      <part name="parameters" element="vim25:SetField" />
   </message>
   <message name="SetFieldResponseMsg">
      <part name="parameters" element="vim25:SetFieldResponse" />
   </message>
   <message name="DoesCustomizationSpecExistRequestMsg">
      <part name="parameters" element="vim25:DoesCustomizationSpecExist" />
   </message>
   <message name="DoesCustomizationSpecExistResponseMsg">
      <part name="parameters" element="vim25:DoesCustomizationSpecExistResponse" />
   </message>
   <message name="GetCustomizationSpecRequestMsg">
      <part name="parameters" element="vim25:GetCustomizationSpec" />
   </message>
   <message name="GetCustomizationSpecResponseMsg">
      <part name="parameters" element="vim25:GetCustomizationSpecResponse" />
   </message>
   <message name="CreateCustomizationSpecRequestMsg">
      <part name="parameters" element="vim25:CreateCustomizationSpec" />
   </message>
   <message name="CreateCustomizationSpecResponseMsg">
      <part name="parameters" element="vim25:CreateCustomizationSpecResponse" />
   </message>
   <message name="OverwriteCustomizationSpecRequestMsg">
      <part name="parameters" element="vim25:OverwriteCustomizationSpec" />
   </message>
   <message name="OverwriteCustomizationSpecResponseMsg">
      <part name="parameters" element="vim25:OverwriteCustomizationSpecResponse" />
   </message>
   <message name="DeleteCustomizationSpecRequestMsg">
      <part name="parameters" element="vim25:DeleteCustomizationSpec" />
   </message>
   <message name="DeleteCustomizationSpecResponseMsg">
      <part name="parameters" element="vim25:DeleteCustomizationSpecResponse" />
   </message>
   <message name="DuplicateCustomizationSpecRequestMsg">
      <part name="parameters" element="vim25:DuplicateCustomizationSpec" />
   </message>
   <message name="DuplicateCustomizationSpecResponseMsg">
      <part name="parameters" element="vim25:DuplicateCustomizationSpecResponse" />
   </message>
   <message name="RenameCustomizationSpecRequestMsg">
      <part name="parameters" element="vim25:RenameCustomizationSpec" />
   </message>
   <message name="RenameCustomizationSpecResponseMsg">
      <part name="parameters" element="vim25:RenameCustomizationSpecResponse" />
   </message>
   <message name="CustomizationSpecItemToXmlRequestMsg">
      <part name="parameters" element="vim25:CustomizationSpecItemToXml" />
   </message>
   <message name="CustomizationSpecItemToXmlResponseMsg">
      <part name="parameters" element="vim25:CustomizationSpecItemToXmlResponse" />
   </message>
   <message name="XmlToCustomizationSpecItemRequestMsg">
      <part name="parameters" element="vim25:XmlToCustomizationSpecItem" />
   </message>
   <message name="XmlToCustomizationSpecItemResponseMsg">
      <part name="parameters" element="vim25:XmlToCustomizationSpecItemResponse" />
   </message>
   <message name="CheckCustomizationResourcesRequestMsg">
      <part name="parameters" element="vim25:CheckCustomizationResources" />
   </message>
   <message name="CheckCustomizationResourcesResponseMsg">
      <part name="parameters" element="vim25:CheckCustomizationResourcesResponse" />
   </message>
   <message name="QueryConnectionInfoRequestMsg">
      <part name="parameters" element="vim25:QueryConnectionInfo" />
   </message>
   <message name="QueryConnectionInfoResponseMsg">
      <part name="parameters" element="vim25:QueryConnectionInfoResponse" />
   </message>
   <message name="PowerOnMultiVM_TaskRequestMsg">
      <part name="parameters" element="vim25:PowerOnMultiVM_Task" />
   </message>
   <message name="PowerOnMultiVM_TaskResponseMsg">
      <part name="parameters" element="vim25:PowerOnMultiVM_TaskResponse" />
   </message>
   <message name="RefreshDatastoreRequestMsg">
      <part name="parameters" element="vim25:RefreshDatastore" />
   </message>
   <message name="RefreshDatastoreResponseMsg">
      <part name="parameters" element="vim25:RefreshDatastoreResponse" />
   </message>
   <message name="RefreshDatastoreStorageInfoRequestMsg">
      <part name="parameters" element="vim25:RefreshDatastoreStorageInfo" />
   </message>
   <message name="RefreshDatastoreStorageInfoResponseMsg">
      <part name="parameters" element="vim25:RefreshDatastoreStorageInfoResponse" />
   </message>
   <message name="RenameDatastoreRequestMsg">
      <part name="parameters" element="vim25:RenameDatastore" />
   </message>
   <message name="RenameDatastoreResponseMsg">
      <part name="parameters" element="vim25:RenameDatastoreResponse" />
   </message>
   <message name="DestroyDatastoreRequestMsg">
      <part name="parameters" element="vim25:DestroyDatastore" />
   </message>
   <message name="DestroyDatastoreResponseMsg">
      <part name="parameters" element="vim25:DestroyDatastoreResponse" />
   </message>
   <message name="QueryDescriptionsRequestMsg">
      <part name="parameters" element="vim25:QueryDescriptions" />
   </message>
   <message name="QueryDescriptionsResponseMsg">
      <part name="parameters" element="vim25:QueryDescriptionsResponse" />
   </message>
   <message name="BrowseDiagnosticLogRequestMsg">
      <part name="parameters" element="vim25:BrowseDiagnosticLog" />
   </message>
   <message name="BrowseDiagnosticLogResponseMsg">
      <part name="parameters" element="vim25:BrowseDiagnosticLogResponse" />
   </message>
   <message name="GenerateLogBundles_TaskRequestMsg">
      <part name="parameters" element="vim25:GenerateLogBundles_Task" />
   </message>
   <message name="GenerateLogBundles_TaskResponseMsg">
      <part name="parameters" element="vim25:GenerateLogBundles_TaskResponse" />
   </message>
   <message name="FetchDVPortKeysRequestMsg">
      <part name="parameters" element="vim25:FetchDVPortKeys" />
   </message>
   <message name="FetchDVPortKeysResponseMsg">
      <part name="parameters" element="vim25:FetchDVPortKeysResponse" />
   </message>
   <message name="FetchDVPortsRequestMsg">
      <part name="parameters" element="vim25:FetchDVPorts" />
   </message>
   <message name="FetchDVPortsResponseMsg">
      <part name="parameters" element="vim25:FetchDVPortsResponse" />
   </message>
   <message name="QueryUsedVlanIdInDvsRequestMsg">
      <part name="parameters" element="vim25:QueryUsedVlanIdInDvs" />
   </message>
   <message name="QueryUsedVlanIdInDvsResponseMsg">
      <part name="parameters" element="vim25:QueryUsedVlanIdInDvsResponse" />
   </message>
   <message name="ReconfigureDvs_TaskRequestMsg">
      <part name="parameters" element="vim25:ReconfigureDvs_Task" />
   </message>
   <message name="ReconfigureDvs_TaskResponseMsg">
      <part name="parameters" element="vim25:ReconfigureDvs_TaskResponse" />
   </message>
   <message name="PerformDvsProductSpecOperation_TaskRequestMsg">
      <part name="parameters" element="vim25:PerformDvsProductSpecOperation_Task" />
   </message>
   <message name="PerformDvsProductSpecOperation_TaskResponseMsg">
      <part name="parameters" element="vim25:PerformDvsProductSpecOperation_TaskResponse" />
   </message>
   <message name="MergeDvs_TaskRequestMsg">
      <part name="parameters" element="vim25:MergeDvs_Task" />
   </message>
   <message name="MergeDvs_TaskResponseMsg">
      <part name="parameters" element="vim25:MergeDvs_TaskResponse" />
   </message>
   <message name="AddDVPortgroup_TaskRequestMsg">
      <part name="parameters" element="vim25:AddDVPortgroup_Task" />
   </message>
   <message name="AddDVPortgroup_TaskResponseMsg">
      <part name="parameters" element="vim25:AddDVPortgroup_TaskResponse" />
   </message>
   <message name="MoveDVPort_TaskRequestMsg">
      <part name="parameters" element="vim25:MoveDVPort_Task" />
   </message>
   <message name="MoveDVPort_TaskResponseMsg">
      <part name="parameters" element="vim25:MoveDVPort_TaskResponse" />
   </message>
   <message name="UpdateDvsCapabilityRequestMsg">
      <part name="parameters" element="vim25:UpdateDvsCapability" />
   </message>
   <message name="UpdateDvsCapabilityResponseMsg">
      <part name="parameters" element="vim25:UpdateDvsCapabilityResponse" />
   </message>
   <message name="ReconfigureDVPort_TaskRequestMsg">
      <part name="parameters" element="vim25:ReconfigureDVPort_Task" />
   </message>
   <message name="ReconfigureDVPort_TaskResponseMsg">
      <part name="parameters" element="vim25:ReconfigureDVPort_TaskResponse" />
   </message>
   <message name="RefreshDVPortStateRequestMsg">
      <part name="parameters" element="vim25:RefreshDVPortState" />
   </message>
   <message name="RefreshDVPortStateResponseMsg">
      <part name="parameters" element="vim25:RefreshDVPortStateResponse" />
   </message>
   <message name="RectifyDvsHost_TaskRequestMsg">
      <part name="parameters" element="vim25:RectifyDvsHost_Task" />
   </message>
   <message name="RectifyDvsHost_TaskResponseMsg">
      <part name="parameters" element="vim25:RectifyDvsHost_TaskResponse" />
   </message>
   <message name="QueryConfigOptionDescriptorRequestMsg">
      <part name="parameters" element="vim25:QueryConfigOptionDescriptor" />
   </message>
   <message name="QueryConfigOptionDescriptorResponseMsg">
      <part name="parameters" element="vim25:QueryConfigOptionDescriptorResponse" />
   </message>
   <message name="QueryConfigOptionRequestMsg">
      <part name="parameters" element="vim25:QueryConfigOption" />
   </message>
   <message name="QueryConfigOptionResponseMsg">
      <part name="parameters" element="vim25:QueryConfigOptionResponse" />
   </message>
   <message name="QueryConfigTargetRequestMsg">
      <part name="parameters" element="vim25:QueryConfigTarget" />
   </message>
   <message name="QueryConfigTargetResponseMsg">
      <part name="parameters" element="vim25:QueryConfigTargetResponse" />
   </message>
   <message name="QueryTargetCapabilitiesRequestMsg">
      <part name="parameters" element="vim25:QueryTargetCapabilities" />
   </message>
   <message name="QueryTargetCapabilitiesResponseMsg">
      <part name="parameters" element="vim25:QueryTargetCapabilitiesResponse" />
   </message>
   <message name="setCustomValueRequestMsg">
      <part name="parameters" element="vim25:setCustomValue" />
   </message>
   <message name="setCustomValueResponseMsg">
      <part name="parameters" element="vim25:setCustomValueResponse" />
   </message>
   <message name="UnregisterExtensionRequestMsg">
      <part name="parameters" element="vim25:UnregisterExtension" />
   </message>
   <message name="UnregisterExtensionResponseMsg">
      <part name="parameters" element="vim25:UnregisterExtensionResponse" />
   </message>
   <message name="FindExtensionRequestMsg">
      <part name="parameters" element="vim25:FindExtension" />
   </message>
   <message name="FindExtensionResponseMsg">
      <part name="parameters" element="vim25:FindExtensionResponse" />
   </message>
   <message name="RegisterExtensionRequestMsg">
      <part name="parameters" element="vim25:RegisterExtension" />
   </message>
   <message name="RegisterExtensionResponseMsg">
      <part name="parameters" element="vim25:RegisterExtensionResponse" />
   </message>
   <message name="UpdateExtensionRequestMsg">
      <part name="parameters" element="vim25:UpdateExtension" />
   </message>
   <message name="UpdateExtensionResponseMsg">
      <part name="parameters" element="vim25:UpdateExtensionResponse" />
   </message>
   <message name="GetPublicKeyRequestMsg">
      <part name="parameters" element="vim25:GetPublicKey" />
   </message>
   <message name="GetPublicKeyResponseMsg">
      <part name="parameters" element="vim25:GetPublicKeyResponse" />
   </message>
   <message name="SetPublicKeyRequestMsg">
      <part name="parameters" element="vim25:SetPublicKey" />
   </message>
   <message name="SetPublicKeyResponseMsg">
      <part name="parameters" element="vim25:SetPublicKeyResponse" />
   </message>
   <message name="SetExtensionCertificateRequestMsg">
      <part name="parameters" element="vim25:SetExtensionCertificate" />
   </message>
   <message name="SetExtensionCertificateResponseMsg">
      <part name="parameters" element="vim25:SetExtensionCertificateResponse" />
   </message>
   <message name="MoveDatastoreFile_TaskRequestMsg">
      <part name="parameters" element="vim25:MoveDatastoreFile_Task" />
   </message>
   <message name="MoveDatastoreFile_TaskResponseMsg">
      <part name="parameters" element="vim25:MoveDatastoreFile_TaskResponse" />
   </message>
   <message name="CopyDatastoreFile_TaskRequestMsg">
      <part name="parameters" element="vim25:CopyDatastoreFile_Task" />
   </message>
   <message name="CopyDatastoreFile_TaskResponseMsg">
      <part name="parameters" element="vim25:CopyDatastoreFile_TaskResponse" />
   </message>
   <message name="DeleteDatastoreFile_TaskRequestMsg">
      <part name="parameters" element="vim25:DeleteDatastoreFile_Task" />
   </message>
   <message name="DeleteDatastoreFile_TaskResponseMsg">
      <part name="parameters" element="vim25:DeleteDatastoreFile_TaskResponse" />
   </message>
   <message name="MakeDirectoryRequestMsg">
      <part name="parameters" element="vim25:MakeDirectory" />
   </message>
   <message name="MakeDirectoryResponseMsg">
      <part name="parameters" element="vim25:MakeDirectoryResponse" />
   </message>
   <message name="ChangeOwnerRequestMsg">
      <part name="parameters" element="vim25:ChangeOwner" />
   </message>
   <message name="ChangeOwnerResponseMsg">
      <part name="parameters" element="vim25:ChangeOwnerResponse" />
   </message>
   <message name="CreateFolderRequestMsg">
      <part name="parameters" element="vim25:CreateFolder" />
   </message>
   <message name="CreateFolderResponseMsg">
      <part name="parameters" element="vim25:CreateFolderResponse" />
   </message>
   <message name="MoveIntoFolder_TaskRequestMsg">
      <part name="parameters" element="vim25:MoveIntoFolder_Task" />
   </message>
   <message name="MoveIntoFolder_TaskResponseMsg">
      <part name="parameters" element="vim25:MoveIntoFolder_TaskResponse" />
   </message>
   <message name="CreateVM_TaskRequestMsg">
      <part name="parameters" element="vim25:CreateVM_Task" />
   </message>
   <message name="CreateVM_TaskResponseMsg">
      <part name="parameters" element="vim25:CreateVM_TaskResponse" />
   </message>
   <message name="RegisterVM_TaskRequestMsg">
      <part name="parameters" element="vim25:RegisterVM_Task" />
   </message>
   <message name="RegisterVM_TaskResponseMsg">
      <part name="parameters" element="vim25:RegisterVM_TaskResponse" />
   </message>
   <message name="CreateClusterRequestMsg">
      <part name="parameters" element="vim25:CreateCluster" />
   </message>
   <message name="CreateClusterResponseMsg">
      <part name="parameters" element="vim25:CreateClusterResponse" />
   </message>
   <message name="CreateClusterExRequestMsg">
      <part name="parameters" element="vim25:CreateClusterEx" />
   </message>
   <message name="CreateClusterExResponseMsg">
      <part name="parameters" element="vim25:CreateClusterExResponse" />
   </message>
   <message name="AddStandaloneHost_TaskRequestMsg">
      <part name="parameters" element="vim25:AddStandaloneHost_Task" />
   </message>
   <message name="AddStandaloneHost_TaskResponseMsg">
      <part name="parameters" element="vim25:AddStandaloneHost_TaskResponse" />
   </message>
   <message name="CreateDatacenterRequestMsg">
      <part name="parameters" element="vim25:CreateDatacenter" />
   </message>
   <message name="CreateDatacenterResponseMsg">
      <part name="parameters" element="vim25:CreateDatacenterResponse" />
   </message>
   <message name="UnregisterAndDestroy_TaskRequestMsg">
      <part name="parameters" element="vim25:UnregisterAndDestroy_Task" />
   </message>
   <message name="UnregisterAndDestroy_TaskResponseMsg">
      <part name="parameters" element="vim25:UnregisterAndDestroy_TaskResponse" />
   </message>
   <message name="CreateDVS_TaskRequestMsg">
      <part name="parameters" element="vim25:CreateDVS_Task" />
   </message>
   <message name="CreateDVS_TaskResponseMsg">
      <part name="parameters" element="vim25:CreateDVS_TaskResponse" />
   </message>
   <message name="SetCollectorPageSizeRequestMsg">
      <part name="parameters" element="vim25:SetCollectorPageSize" />
   </message>
   <message name="SetCollectorPageSizeResponseMsg">
      <part name="parameters" element="vim25:SetCollectorPageSizeResponse" />
   </message>
   <message name="RewindCollectorRequestMsg">
      <part name="parameters" element="vim25:RewindCollector" />
   </message>
   <message name="RewindCollectorResponseMsg">
      <part name="parameters" element="vim25:RewindCollectorResponse" />
   </message>
   <message name="ResetCollectorRequestMsg">
      <part name="parameters" element="vim25:ResetCollector" />
   </message>
   <message name="ResetCollectorResponseMsg">
      <part name="parameters" element="vim25:ResetCollectorResponse" />
   </message>
   <message name="DestroyCollectorRequestMsg">
      <part name="parameters" element="vim25:DestroyCollector" />
   </message>
   <message name="DestroyCollectorResponseMsg">
      <part name="parameters" element="vim25:DestroyCollectorResponse" />
   </message>
   <message name="QueryHostConnectionInfoRequestMsg">
      <part name="parameters" element="vim25:QueryHostConnectionInfo" />
   </message>
   <message name="QueryHostConnectionInfoResponseMsg">
      <part name="parameters" element="vim25:QueryHostConnectionInfoResponse" />
   </message>
   <message name="UpdateSystemResourcesRequestMsg">
      <part name="parameters" element="vim25:UpdateSystemResources" />
   </message>
   <message name="UpdateSystemResourcesResponseMsg">
      <part name="parameters" element="vim25:UpdateSystemResourcesResponse" />
   </message>
   <message name="ReconnectHost_TaskRequestMsg">
      <part name="parameters" element="vim25:ReconnectHost_Task" />
   </message>
   <message name="ReconnectHost_TaskResponseMsg">
      <part name="parameters" element="vim25:ReconnectHost_TaskResponse" />
   </message>
   <message name="DisconnectHost_TaskRequestMsg">
      <part name="parameters" element="vim25:DisconnectHost_Task" />
   </message>
   <message name="DisconnectHost_TaskResponseMsg">
      <part name="parameters" element="vim25:DisconnectHost_TaskResponse" />
   </message>
   <message name="EnterMaintenanceMode_TaskRequestMsg">
      <part name="parameters" element="vim25:EnterMaintenanceMode_Task" />
   </message>
   <message name="EnterMaintenanceMode_TaskResponseMsg">
      <part name="parameters" element="vim25:EnterMaintenanceMode_TaskResponse" />
   </message>
   <message name="ExitMaintenanceMode_TaskRequestMsg">
      <part name="parameters" element="vim25:ExitMaintenanceMode_Task" />
   </message>
   <message name="ExitMaintenanceMode_TaskResponseMsg">
      <part name="parameters" element="vim25:ExitMaintenanceMode_TaskResponse" />
   </message>
   <message name="RebootHost_TaskRequestMsg">
      <part name="parameters" element="vim25:RebootHost_Task" />
   </message>
   <message name="RebootHost_TaskResponseMsg">
      <part name="parameters" element="vim25:RebootHost_TaskResponse" />
   </message>
   <message name="ShutdownHost_TaskRequestMsg">
      <part name="parameters" element="vim25:ShutdownHost_Task" />
   </message>
   <message name="ShutdownHost_TaskResponseMsg">
      <part name="parameters" element="vim25:ShutdownHost_TaskResponse" />
   </message>
   <message name="PowerDownHostToStandBy_TaskRequestMsg">
      <part name="parameters" element="vim25:PowerDownHostToStandBy_Task" />
   </message>
   <message name="PowerDownHostToStandBy_TaskResponseMsg">
      <part name="parameters" element="vim25:PowerDownHostToStandBy_TaskResponse" />
   </message>
   <message name="PowerUpHostFromStandBy_TaskRequestMsg">
      <part name="parameters" element="vim25:PowerUpHostFromStandBy_Task" />
   </message>
   <message name="PowerUpHostFromStandBy_TaskResponseMsg">
      <part name="parameters" element="vim25:PowerUpHostFromStandBy_TaskResponse" />
   </message>
   <message name="QueryMemoryOverheadRequestMsg">
      <part name="parameters" element="vim25:QueryMemoryOverhead" />
   </message>
   <message name="QueryMemoryOverheadResponseMsg">
      <part name="parameters" element="vim25:QueryMemoryOverheadResponse" />
   </message>
   <message name="QueryMemoryOverheadExRequestMsg">
      <part name="parameters" element="vim25:QueryMemoryOverheadEx" />
   </message>
   <message name="QueryMemoryOverheadExResponseMsg">
      <part name="parameters" element="vim25:QueryMemoryOverheadExResponse" />
   </message>
   <message name="ReconfigureHostForDAS_TaskRequestMsg">
      <part name="parameters" element="vim25:ReconfigureHostForDAS_Task" />
   </message>
   <message name="ReconfigureHostForDAS_TaskResponseMsg">
      <part name="parameters" element="vim25:ReconfigureHostForDAS_TaskResponse" />
   </message>
   <message name="UpdateFlagsRequestMsg">
      <part name="parameters" element="vim25:UpdateFlags" />
   </message>
   <message name="UpdateFlagsResponseMsg">
      <part name="parameters" element="vim25:UpdateFlagsResponse" />
   </message>
   <message name="AcquireCimServicesTicketRequestMsg">
      <part name="parameters" element="vim25:AcquireCimServicesTicket" />
   </message>
   <message name="AcquireCimServicesTicketResponseMsg">
      <part name="parameters" element="vim25:AcquireCimServicesTicketResponse" />
   </message>
   <message name="UpdateIpmiRequestMsg">
      <part name="parameters" element="vim25:UpdateIpmi" />
   </message>
   <message name="UpdateIpmiResponseMsg">
      <part name="parameters" element="vim25:UpdateIpmiResponse" />
   </message>
   <message name="HttpNfcLeaseCompleteRequestMsg">
      <part name="parameters" element="vim25:HttpNfcLeaseComplete" />
   </message>
   <message name="HttpNfcLeaseCompleteResponseMsg">
      <part name="parameters" element="vim25:HttpNfcLeaseCompleteResponse" />
   </message>
   <message name="HttpNfcLeaseAbortRequestMsg">
      <part name="parameters" element="vim25:HttpNfcLeaseAbort" />
   </message>
   <message name="HttpNfcLeaseAbortResponseMsg">
      <part name="parameters" element="vim25:HttpNfcLeaseAbortResponse" />
   </message>
   <message name="HttpNfcLeaseProgressRequestMsg">
      <part name="parameters" element="vim25:HttpNfcLeaseProgress" />
   </message>
   <message name="HttpNfcLeaseProgressResponseMsg">
      <part name="parameters" element="vim25:HttpNfcLeaseProgressResponse" />
   </message>
   <message name="QueryIpPoolsRequestMsg">
      <part name="parameters" element="vim25:QueryIpPools" />
   </message>
   <message name="QueryIpPoolsResponseMsg">
      <part name="parameters" element="vim25:QueryIpPoolsResponse" />
   </message>
   <message name="CreateIpPoolRequestMsg">
      <part name="parameters" element="vim25:CreateIpPool" />
   </message>
   <message name="CreateIpPoolResponseMsg">
      <part name="parameters" element="vim25:CreateIpPoolResponse" />
   </message>
   <message name="UpdateIpPoolRequestMsg">
      <part name="parameters" element="vim25:UpdateIpPool" />
   </message>
   <message name="UpdateIpPoolResponseMsg">
      <part name="parameters" element="vim25:UpdateIpPoolResponse" />
   </message>
   <message name="DestroyIpPoolRequestMsg">
      <part name="parameters" element="vim25:DestroyIpPool" />
   </message>
   <message name="DestroyIpPoolResponseMsg">
      <part name="parameters" element="vim25:DestroyIpPoolResponse" />
   </message>
   <message name="UpdateAssignedLicenseRequestMsg">
      <part name="parameters" element="vim25:UpdateAssignedLicense" />
   </message>
   <message name="UpdateAssignedLicenseResponseMsg">
      <part name="parameters" element="vim25:UpdateAssignedLicenseResponse" />
   </message>
   <message name="RemoveAssignedLicenseRequestMsg">
      <part name="parameters" element="vim25:RemoveAssignedLicense" />
   </message>
   <message name="RemoveAssignedLicenseResponseMsg">
      <part name="parameters" element="vim25:RemoveAssignedLicenseResponse" />
   </message>
   <message name="QueryAssignedLicensesRequestMsg">
      <part name="parameters" element="vim25:QueryAssignedLicenses" />
   </message>
   <message name="QueryAssignedLicensesResponseMsg">
      <part name="parameters" element="vim25:QueryAssignedLicensesResponse" />
   </message>
   <message name="QuerySupportedFeaturesRequestMsg">
      <part name="parameters" element="vim25:QuerySupportedFeatures" />
   </message>
   <message name="QuerySupportedFeaturesResponseMsg">
      <part name="parameters" element="vim25:QuerySupportedFeaturesResponse" />
   </message>
   <message name="QueryLicenseSourceAvailabilityRequestMsg">
      <part name="parameters" element="vim25:QueryLicenseSourceAvailability" />
   </message>
   <message name="QueryLicenseSourceAvailabilityResponseMsg">
      <part name="parameters" element="vim25:QueryLicenseSourceAvailabilityResponse" />
   </message>
   <message name="QueryLicenseUsageRequestMsg">
      <part name="parameters" element="vim25:QueryLicenseUsage" />
   </message>
   <message name="QueryLicenseUsageResponseMsg">
      <part name="parameters" element="vim25:QueryLicenseUsageResponse" />
   </message>
   <message name="SetLicenseEditionRequestMsg">
      <part name="parameters" element="vim25:SetLicenseEdition" />
   </message>
   <message name="SetLicenseEditionResponseMsg">
      <part name="parameters" element="vim25:SetLicenseEditionResponse" />
   </message>
   <message name="CheckLicenseFeatureRequestMsg">
      <part name="parameters" element="vim25:CheckLicenseFeature" />
   </message>
   <message name="CheckLicenseFeatureResponseMsg">
      <part name="parameters" element="vim25:CheckLicenseFeatureResponse" />
   </message>
   <message name="EnableFeatureRequestMsg">
      <part name="parameters" element="vim25:EnableFeature" />
   </message>
   <message name="EnableFeatureResponseMsg">
      <part name="parameters" element="vim25:EnableFeatureResponse" />
   </message>
   <message name="DisableFeatureRequestMsg">
      <part name="parameters" element="vim25:DisableFeature" />
   </message>
   <message name="DisableFeatureResponseMsg">
      <part name="parameters" element="vim25:DisableFeatureResponse" />
   </message>
   <message name="ConfigureLicenseSourceRequestMsg">
      <part name="parameters" element="vim25:ConfigureLicenseSource" />
   </message>
   <message name="ConfigureLicenseSourceResponseMsg">
      <part name="parameters" element="vim25:ConfigureLicenseSourceResponse" />
   </message>
   <message name="UpdateLicenseRequestMsg">
      <part name="parameters" element="vim25:UpdateLicense" />
   </message>
   <message name="UpdateLicenseResponseMsg">
      <part name="parameters" element="vim25:UpdateLicenseResponse" />
   </message>
   <message name="AddLicenseRequestMsg">
      <part name="parameters" element="vim25:AddLicense" />
   </message>
   <message name="AddLicenseResponseMsg">
      <part name="parameters" element="vim25:AddLicenseResponse" />
   </message>
   <message name="RemoveLicenseRequestMsg">
      <part name="parameters" element="vim25:RemoveLicense" />
   </message>
   <message name="RemoveLicenseResponseMsg">
      <part name="parameters" element="vim25:RemoveLicenseResponse" />
   </message>
   <message name="DecodeLicenseRequestMsg">
      <part name="parameters" element="vim25:DecodeLicense" />
   </message>
   <message name="DecodeLicenseResponseMsg">
      <part name="parameters" element="vim25:DecodeLicenseResponse" />
   </message>
   <message name="UpdateLicenseLabelRequestMsg">
      <part name="parameters" element="vim25:UpdateLicenseLabel" />
   </message>
   <message name="UpdateLicenseLabelResponseMsg">
      <part name="parameters" element="vim25:UpdateLicenseLabelResponse" />
   </message>
   <message name="RemoveLicenseLabelRequestMsg">
      <part name="parameters" element="vim25:RemoveLicenseLabel" />
   </message>
   <message name="RemoveLicenseLabelResponseMsg">
      <part name="parameters" element="vim25:RemoveLicenseLabelResponse" />
   </message>
   <message name="ReloadRequestMsg">
      <part name="parameters" element="vim25:Reload" />
   </message>
   <message name="ReloadResponseMsg">
      <part name="parameters" element="vim25:ReloadResponse" />
   </message>
   <message name="Rename_TaskRequestMsg">
      <part name="parameters" element="vim25:Rename_Task" />
   </message>
   <message name="Rename_TaskResponseMsg">
      <part name="parameters" element="vim25:Rename_TaskResponse" />
   </message>
   <message name="Destroy_TaskRequestMsg">
      <part name="parameters" element="vim25:Destroy_Task" />
   </message>
   <message name="Destroy_TaskResponseMsg">
      <part name="parameters" element="vim25:Destroy_TaskResponse" />
   </message>
   <message name="DestroyNetworkRequestMsg">
      <part name="parameters" element="vim25:DestroyNetwork" />
   </message>
   <message name="DestroyNetworkResponseMsg">
      <part name="parameters" element="vim25:DestroyNetworkResponse" />
   </message>
   <message name="ValidateHostRequestMsg">
      <part name="parameters" element="vim25:ValidateHost" />
   </message>
   <message name="ValidateHostResponseMsg">
      <part name="parameters" element="vim25:ValidateHostResponse" />
   </message>
   <message name="ParseDescriptorRequestMsg">
      <part name="parameters" element="vim25:ParseDescriptor" />
   </message>
   <message name="ParseDescriptorResponseMsg">
      <part name="parameters" element="vim25:ParseDescriptorResponse" />
   </message>
   <message name="CreateImportSpecRequestMsg">
      <part name="parameters" element="vim25:CreateImportSpec" />
   </message>
   <message name="CreateImportSpecResponseMsg">
      <part name="parameters" element="vim25:CreateImportSpecResponse" />
   </message>
   <message name="CreateDescriptorRequestMsg">
      <part name="parameters" element="vim25:CreateDescriptor" />
   </message>
   <message name="CreateDescriptorResponseMsg">
      <part name="parameters" element="vim25:CreateDescriptorResponse" />
   </message>
   <message name="QueryPerfProviderSummaryRequestMsg">
      <part name="parameters" element="vim25:QueryPerfProviderSummary" />
   </message>
   <message name="QueryPerfProviderSummaryResponseMsg">
      <part name="parameters" element="vim25:QueryPerfProviderSummaryResponse" />
   </message>
   <message name="QueryAvailablePerfMetricRequestMsg">
      <part name="parameters" element="vim25:QueryAvailablePerfMetric" />
   </message>
   <message name="QueryAvailablePerfMetricResponseMsg">
      <part name="parameters" element="vim25:QueryAvailablePerfMetricResponse" />
   </message>
   <message name="QueryPerfCounterRequestMsg">
      <part name="parameters" element="vim25:QueryPerfCounter" />
   </message>
   <message name="QueryPerfCounterResponseMsg">
      <part name="parameters" element="vim25:QueryPerfCounterResponse" />
   </message>
   <message name="QueryPerfCounterByLevelRequestMsg">
      <part name="parameters" element="vim25:QueryPerfCounterByLevel" />
   </message>
   <message name="QueryPerfCounterByLevelResponseMsg">
      <part name="parameters" element="vim25:QueryPerfCounterByLevelResponse" />
   </message>
   <message name="QueryPerfRequestMsg">
      <part name="parameters" element="vim25:QueryPerf" />
   </message>
   <message name="QueryPerfResponseMsg">
      <part name="parameters" element="vim25:QueryPerfResponse" />
   </message>
   <message name="QueryPerfCompositeRequestMsg">
      <part name="parameters" element="vim25:QueryPerfComposite" />
   </message>
   <message name="QueryPerfCompositeResponseMsg">
      <part name="parameters" element="vim25:QueryPerfCompositeResponse" />
   </message>
   <message name="CreatePerfIntervalRequestMsg">
      <part name="parameters" element="vim25:CreatePerfInterval" />
   </message>
   <message name="CreatePerfIntervalResponseMsg">
      <part name="parameters" element="vim25:CreatePerfIntervalResponse" />
   </message>
   <message name="RemovePerfIntervalRequestMsg">
      <part name="parameters" element="vim25:RemovePerfInterval" />
   </message>
   <message name="RemovePerfIntervalResponseMsg">
      <part name="parameters" element="vim25:RemovePerfIntervalResponse" />
   </message>
   <message name="UpdatePerfIntervalRequestMsg">
      <part name="parameters" element="vim25:UpdatePerfInterval" />
   </message>
   <message name="UpdatePerfIntervalResponseMsg">
      <part name="parameters" element="vim25:UpdatePerfIntervalResponse" />
   </message>
   <message name="EstimateDatabaseSizeRequestMsg">
      <part name="parameters" element="vim25:EstimateDatabaseSize" />
   </message>
   <message name="EstimateDatabaseSizeResponseMsg">
      <part name="parameters" element="vim25:EstimateDatabaseSizeResponse" />
   </message>
   <message name="UpdateConfigRequestMsg">
      <part name="parameters" element="vim25:UpdateConfig" />
   </message>
   <message name="UpdateConfigResponseMsg">
      <part name="parameters" element="vim25:UpdateConfigResponse" />
   </message>
   <message name="MoveIntoResourcePoolRequestMsg">
      <part name="parameters" element="vim25:MoveIntoResourcePool" />
   </message>
   <message name="MoveIntoResourcePoolResponseMsg">
      <part name="parameters" element="vim25:MoveIntoResourcePoolResponse" />
   </message>
   <message name="UpdateChildResourceConfigurationRequestMsg">
      <part name="parameters" element="vim25:UpdateChildResourceConfiguration" />
   </message>
   <message name="UpdateChildResourceConfigurationResponseMsg">
      <part name="parameters" element="vim25:UpdateChildResourceConfigurationResponse" />
   </message>
   <message name="CreateResourcePoolRequestMsg">
      <part name="parameters" element="vim25:CreateResourcePool" />
   </message>
   <message name="CreateResourcePoolResponseMsg">
      <part name="parameters" element="vim25:CreateResourcePoolResponse" />
   </message>
   <message name="DestroyChildrenRequestMsg">
      <part name="parameters" element="vim25:DestroyChildren" />
   </message>
   <message name="DestroyChildrenResponseMsg">
      <part name="parameters" element="vim25:DestroyChildrenResponse" />
   </message>
   <message name="CreateVAppRequestMsg">
      <part name="parameters" element="vim25:CreateVApp" />
   </message>
   <message name="CreateVAppResponseMsg">
      <part name="parameters" element="vim25:CreateVAppResponse" />
   </message>
   <message name="CreateChildVM_TaskRequestMsg">
      <part name="parameters" element="vim25:CreateChildVM_Task" />
   </message>
   <message name="CreateChildVM_TaskResponseMsg">
      <part name="parameters" element="vim25:CreateChildVM_TaskResponse" />
   </message>
   <message name="RegisterChildVM_TaskRequestMsg">
      <part name="parameters" element="vim25:RegisterChildVM_Task" />
   </message>
   <message name="RegisterChildVM_TaskResponseMsg">
      <part name="parameters" element="vim25:RegisterChildVM_TaskResponse" />
   </message>
   <message name="ImportVAppRequestMsg">
      <part name="parameters" element="vim25:ImportVApp" />
   </message>
   <message name="ImportVAppResponseMsg">
      <part name="parameters" element="vim25:ImportVAppResponse" />
   </message>
   <message name="FindByUuidRequestMsg">
      <part name="parameters" element="vim25:FindByUuid" />
   </message>
   <message name="FindByUuidResponseMsg">
      <part name="parameters" element="vim25:FindByUuidResponse" />
   </message>
   <message name="FindByDatastorePathRequestMsg">
      <part name="parameters" element="vim25:FindByDatastorePath" />
   </message>
   <message name="FindByDatastorePathResponseMsg">
      <part name="parameters" element="vim25:FindByDatastorePathResponse" />
   </message>
   <message name="FindByDnsNameRequestMsg">
      <part name="parameters" element="vim25:FindByDnsName" />
   </message>
   <message name="FindByDnsNameResponseMsg">
      <part name="parameters" element="vim25:FindByDnsNameResponse" />
   </message>
   <message name="FindByIpRequestMsg">
      <part name="parameters" element="vim25:FindByIp" />
   </message>
   <message name="FindByIpResponseMsg">
      <part name="parameters" element="vim25:FindByIpResponse" />
   </message>
   <message name="FindByInventoryPathRequestMsg">
      <part name="parameters" element="vim25:FindByInventoryPath" />
   </message>
   <message name="FindByInventoryPathResponseMsg">
      <part name="parameters" element="vim25:FindByInventoryPathResponse" />
   </message>
   <message name="FindChildRequestMsg">
      <part name="parameters" element="vim25:FindChild" />
   </message>
   <message name="FindChildResponseMsg">
      <part name="parameters" element="vim25:FindChildResponse" />
   </message>
   <message name="FindAllByUuidRequestMsg">
      <part name="parameters" element="vim25:FindAllByUuid" />
   </message>
   <message name="FindAllByUuidResponseMsg">
      <part name="parameters" element="vim25:FindAllByUuidResponse" />
   </message>
   <message name="FindAllByDnsNameRequestMsg">
      <part name="parameters" element="vim25:FindAllByDnsName" />
   </message>
   <message name="FindAllByDnsNameResponseMsg">
      <part name="parameters" element="vim25:FindAllByDnsNameResponse" />
   </message>
   <message name="FindAllByIpRequestMsg">
      <part name="parameters" element="vim25:FindAllByIp" />
   </message>
   <message name="FindAllByIpResponseMsg">
      <part name="parameters" element="vim25:FindAllByIpResponse" />
   </message>
   <message name="CurrentTimeRequestMsg">
      <part name="parameters" element="vim25:CurrentTime" />
   </message>
   <message name="CurrentTimeResponseMsg">
      <part name="parameters" element="vim25:CurrentTimeResponse" />
   </message>
   <message name="RetrieveServiceContentRequestMsg">
      <part name="parameters" element="vim25:RetrieveServiceContent" />
   </message>
   <message name="RetrieveServiceContentResponseMsg">
      <part name="parameters" element="vim25:RetrieveServiceContentResponse" />
   </message>
   <message name="ValidateMigrationRequestMsg">
      <part name="parameters" element="vim25:ValidateMigration" />
   </message>
   <message name="ValidateMigrationResponseMsg">
      <part name="parameters" element="vim25:ValidateMigrationResponse" />
   </message>
   <message name="QueryVMotionCompatibilityRequestMsg">
      <part name="parameters" element="vim25:QueryVMotionCompatibility" />
   </message>
   <message name="QueryVMotionCompatibilityResponseMsg">
      <part name="parameters" element="vim25:QueryVMotionCompatibilityResponse" />
   </message>
   <message name="RetrieveProductComponentsRequestMsg">
      <part name="parameters" element="vim25:RetrieveProductComponents" />
   </message>
   <message name="RetrieveProductComponentsResponseMsg">
      <part name="parameters" element="vim25:RetrieveProductComponentsResponse" />
   </message>
   <message name="UpdateServiceMessageRequestMsg">
      <part name="parameters" element="vim25:UpdateServiceMessage" />
   </message>
   <message name="UpdateServiceMessageResponseMsg">
      <part name="parameters" element="vim25:UpdateServiceMessageResponse" />
   </message>
   <message name="LoginRequestMsg">
      <part name="parameters" element="vim25:Login" />
   </message>
   <message name="LoginResponseMsg">
      <part name="parameters" element="vim25:LoginResponse" />
   </message>
   <message name="LoginBySSPIRequestMsg">
      <part name="parameters" element="vim25:LoginBySSPI" />
   </message>
   <message name="LoginBySSPIResponseMsg">
      <part name="parameters" element="vim25:LoginBySSPIResponse" />
   </message>
   <message name="LogoutRequestMsg">
      <part name="parameters" element="vim25:Logout" />
   </message>
   <message name="LogoutResponseMsg">
      <part name="parameters" element="vim25:LogoutResponse" />
   </message>
   <message name="AcquireLocalTicketRequestMsg">
      <part name="parameters" element="vim25:AcquireLocalTicket" />
   </message>
   <message name="AcquireLocalTicketResponseMsg">
      <part name="parameters" element="vim25:AcquireLocalTicketResponse" />
   </message>
   <message name="TerminateSessionRequestMsg">
      <part name="parameters" element="vim25:TerminateSession" />
   </message>
   <message name="TerminateSessionResponseMsg">
      <part name="parameters" element="vim25:TerminateSessionResponse" />
   </message>
   <message name="SetLocaleRequestMsg">
      <part name="parameters" element="vim25:SetLocale" />
   </message>
   <message name="SetLocaleResponseMsg">
      <part name="parameters" element="vim25:SetLocaleResponse" />
   </message>
   <message name="LoginExtensionBySubjectNameRequestMsg">
      <part name="parameters" element="vim25:LoginExtensionBySubjectName" />
   </message>
   <message name="LoginExtensionBySubjectNameResponseMsg">
      <part name="parameters" element="vim25:LoginExtensionBySubjectNameResponse" />
   </message>
   <message name="LoginExtensionByCertificateRequestMsg">
      <part name="parameters" element="vim25:LoginExtensionByCertificate" />
   </message>
   <message name="LoginExtensionByCertificateResponseMsg">
      <part name="parameters" element="vim25:LoginExtensionByCertificateResponse" />
   </message>
   <message name="ImpersonateUserRequestMsg">
      <part name="parameters" element="vim25:ImpersonateUser" />
   </message>
   <message name="ImpersonateUserResponseMsg">
      <part name="parameters" element="vim25:ImpersonateUserResponse" />
   </message>
   <message name="SessionIsActiveRequestMsg">
      <part name="parameters" element="vim25:SessionIsActive" />
   </message>
   <message name="SessionIsActiveResponseMsg">
      <part name="parameters" element="vim25:SessionIsActiveResponse" />
   </message>
   <message name="AcquireCloneTicketRequestMsg">
      <part name="parameters" element="vim25:AcquireCloneTicket" />
   </message>
   <message name="AcquireCloneTicketResponseMsg">
      <part name="parameters" element="vim25:AcquireCloneTicketResponse" />
   </message>
   <message name="CloneSessionRequestMsg">
      <part name="parameters" element="vim25:CloneSession" />
   </message>
   <message name="CloneSessionResponseMsg">
      <part name="parameters" element="vim25:CloneSessionResponse" />
   </message>
   <message name="CancelTaskRequestMsg">
      <part name="parameters" element="vim25:CancelTask" />
   </message>
   <message name="CancelTaskResponseMsg">
      <part name="parameters" element="vim25:CancelTaskResponse" />
   </message>
   <message name="UpdateProgressRequestMsg">
      <part name="parameters" element="vim25:UpdateProgress" />
   </message>
   <message name="UpdateProgressResponseMsg">
      <part name="parameters" element="vim25:UpdateProgressResponse" />
   </message>
   <message name="SetTaskStateRequestMsg">
      <part name="parameters" element="vim25:SetTaskState" />
   </message>
   <message name="SetTaskStateResponseMsg">
      <part name="parameters" element="vim25:SetTaskStateResponse" />
   </message>
   <message name="SetTaskDescriptionRequestMsg">
      <part name="parameters" element="vim25:SetTaskDescription" />
   </message>
   <message name="SetTaskDescriptionResponseMsg">
      <part name="parameters" element="vim25:SetTaskDescriptionResponse" />
   </message>
   <message name="ReadNextTasksRequestMsg">
      <part name="parameters" element="vim25:ReadNextTasks" />
   </message>
   <message name="ReadNextTasksResponseMsg">
      <part name="parameters" element="vim25:ReadNextTasksResponse" />
   </message>
   <message name="ReadPreviousTasksRequestMsg">
      <part name="parameters" element="vim25:ReadPreviousTasks" />
   </message>
   <message name="ReadPreviousTasksResponseMsg">
      <part name="parameters" element="vim25:ReadPreviousTasksResponse" />
   </message>
   <message name="CreateCollectorForTasksRequestMsg">
      <part name="parameters" element="vim25:CreateCollectorForTasks" />
   </message>
   <message name="CreateCollectorForTasksResponseMsg">
      <part name="parameters" element="vim25:CreateCollectorForTasksResponse" />
   </message>
   <message name="CreateTaskRequestMsg">
      <part name="parameters" element="vim25:CreateTask" />
   </message>
   <message name="CreateTaskResponseMsg">
      <part name="parameters" element="vim25:CreateTaskResponse" />
   </message>
   <message name="RetrieveUserGroupsRequestMsg">
      <part name="parameters" element="vim25:RetrieveUserGroups" />
   </message>
   <message name="RetrieveUserGroupsResponseMsg">
      <part name="parameters" element="vim25:RetrieveUserGroupsResponse" />
   </message>
   <message name="UpdateVAppConfigRequestMsg">
      <part name="parameters" element="vim25:UpdateVAppConfig" />
   </message>
   <message name="UpdateVAppConfigResponseMsg">
      <part name="parameters" element="vim25:UpdateVAppConfigResponse" />
   </message>
   <message name="CloneVApp_TaskRequestMsg">
      <part name="parameters" element="vim25:CloneVApp_Task" />
   </message>
   <message name="CloneVApp_TaskResponseMsg">
      <part name="parameters" element="vim25:CloneVApp_TaskResponse" />
   </message>
   <message name="ExportVAppRequestMsg">
      <part name="parameters" element="vim25:ExportVApp" />
   </message>
   <message name="ExportVAppResponseMsg">
      <part name="parameters" element="vim25:ExportVAppResponse" />
   </message>
   <message name="PowerOnVApp_TaskRequestMsg">
      <part name="parameters" element="vim25:PowerOnVApp_Task" />
   </message>
   <message name="PowerOnVApp_TaskResponseMsg">
      <part name="parameters" element="vim25:PowerOnVApp_TaskResponse" />
   </message>
   <message name="PowerOffVApp_TaskRequestMsg">
      <part name="parameters" element="vim25:PowerOffVApp_Task" />
   </message>
   <message name="PowerOffVApp_TaskResponseMsg">
      <part name="parameters" element="vim25:PowerOffVApp_TaskResponse" />
   </message>
   <message name="unregisterVApp_TaskRequestMsg">
      <part name="parameters" element="vim25:unregisterVApp_Task" />
   </message>
   <message name="unregisterVApp_TaskResponseMsg">
      <part name="parameters" element="vim25:unregisterVApp_TaskResponse" />
   </message>
   <message name="CreateVirtualDisk_TaskRequestMsg">
      <part name="parameters" element="vim25:CreateVirtualDisk_Task" />
   </message>
   <message name="CreateVirtualDisk_TaskResponseMsg">
      <part name="parameters" element="vim25:CreateVirtualDisk_TaskResponse" />
   </message>
   <message name="DeleteVirtualDisk_TaskRequestMsg">
      <part name="parameters" element="vim25:DeleteVirtualDisk_Task" />
   </message>
   <message name="DeleteVirtualDisk_TaskResponseMsg">
      <part name="parameters" element="vim25:DeleteVirtualDisk_TaskResponse" />
   </message>
   <message name="MoveVirtualDisk_TaskRequestMsg">
      <part name="parameters" element="vim25:MoveVirtualDisk_Task" />
   </message>
   <message name="MoveVirtualDisk_TaskResponseMsg">
      <part name="parameters" element="vim25:MoveVirtualDisk_TaskResponse" />
   </message>
   <message name="CopyVirtualDisk_TaskRequestMsg">
      <part name="parameters" element="vim25:CopyVirtualDisk_Task" />
   </message>
   <message name="CopyVirtualDisk_TaskResponseMsg">
      <part name="parameters" element="vim25:CopyVirtualDisk_TaskResponse" />
   </message>
   <message name="ExtendVirtualDisk_TaskRequestMsg">
      <part name="parameters" element="vim25:ExtendVirtualDisk_Task" />
   </message>
   <message name="ExtendVirtualDisk_TaskResponseMsg">
      <part name="parameters" element="vim25:ExtendVirtualDisk_TaskResponse" />
   </message>
   <message name="QueryVirtualDiskFragmentationRequestMsg">
      <part name="parameters" element="vim25:QueryVirtualDiskFragmentation" />
   </message>
   <message name="QueryVirtualDiskFragmentationResponseMsg">
      <part name="parameters" element="vim25:QueryVirtualDiskFragmentationResponse" />
   </message>
   <message name="DefragmentVirtualDisk_TaskRequestMsg">
      <part name="parameters" element="vim25:DefragmentVirtualDisk_Task" />
   </message>
   <message name="DefragmentVirtualDisk_TaskResponseMsg">
      <part name="parameters" element="vim25:DefragmentVirtualDisk_TaskResponse" />
   </message>
   <message name="ShrinkVirtualDisk_TaskRequestMsg">
      <part name="parameters" element="vim25:ShrinkVirtualDisk_Task" />
   </message>
   <message name="ShrinkVirtualDisk_TaskResponseMsg">
      <part name="parameters" element="vim25:ShrinkVirtualDisk_TaskResponse" />
   </message>
   <message name="InflateVirtualDisk_TaskRequestMsg">
      <part name="parameters" element="vim25:InflateVirtualDisk_Task" />
   </message>
   <message name="InflateVirtualDisk_TaskResponseMsg">
      <part name="parameters" element="vim25:InflateVirtualDisk_TaskResponse" />
   </message>
   <message name="EagerZeroVirtualDisk_TaskRequestMsg">
      <part name="parameters" element="vim25:EagerZeroVirtualDisk_Task" />
   </message>
   <message name="EagerZeroVirtualDisk_TaskResponseMsg">
      <part name="parameters" element="vim25:EagerZeroVirtualDisk_TaskResponse" />
   </message>
   <message name="ZeroFillVirtualDisk_TaskRequestMsg">
      <part name="parameters" element="vim25:ZeroFillVirtualDisk_Task" />
   </message>
   <message name="ZeroFillVirtualDisk_TaskResponseMsg">
      <part name="parameters" element="vim25:ZeroFillVirtualDisk_TaskResponse" />
   </message>
   <message name="SetVirtualDiskUuidRequestMsg">
      <part name="parameters" element="vim25:SetVirtualDiskUuid" />
   </message>
   <message name="SetVirtualDiskUuidResponseMsg">
      <part name="parameters" element="vim25:SetVirtualDiskUuidResponse" />
   </message>
   <message name="QueryVirtualDiskUuidRequestMsg">
      <part name="parameters" element="vim25:QueryVirtualDiskUuid" />
   </message>
   <message name="QueryVirtualDiskUuidResponseMsg">
      <part name="parameters" element="vim25:QueryVirtualDiskUuidResponse" />
   </message>
   <message name="QueryVirtualDiskGeometryRequestMsg">
      <part name="parameters" element="vim25:QueryVirtualDiskGeometry" />
   </message>
   <message name="QueryVirtualDiskGeometryResponseMsg">
      <part name="parameters" element="vim25:QueryVirtualDiskGeometryResponse" />
   </message>
   <message name="RefreshStorageInfoRequestMsg">
      <part name="parameters" element="vim25:RefreshStorageInfo" />
   </message>
   <message name="RefreshStorageInfoResponseMsg">
      <part name="parameters" element="vim25:RefreshStorageInfoResponse" />
   </message>
   <message name="CreateSnapshot_TaskRequestMsg">
      <part name="parameters" element="vim25:CreateSnapshot_Task" />
   </message>
   <message name="CreateSnapshot_TaskResponseMsg">
      <part name="parameters" element="vim25:CreateSnapshot_TaskResponse" />
   </message>
   <message name="RevertToCurrentSnapshot_TaskRequestMsg">
      <part name="parameters" element="vim25:RevertToCurrentSnapshot_Task" />
   </message>
   <message name="RevertToCurrentSnapshot_TaskResponseMsg">
      <part name="parameters" element="vim25:RevertToCurrentSnapshot_TaskResponse" />
   </message>
   <message name="RemoveAllSnapshots_TaskRequestMsg">
      <part name="parameters" element="vim25:RemoveAllSnapshots_Task" />
   </message>
   <message name="RemoveAllSnapshots_TaskResponseMsg">
      <part name="parameters" element="vim25:RemoveAllSnapshots_TaskResponse" />
   </message>
   <message name="ReconfigVM_TaskRequestMsg">
      <part name="parameters" element="vim25:ReconfigVM_Task" />
   </message>
   <message name="ReconfigVM_TaskResponseMsg">
      <part name="parameters" element="vim25:ReconfigVM_TaskResponse" />
   </message>
   <message name="UpgradeVM_TaskRequestMsg">
      <part name="parameters" element="vim25:UpgradeVM_Task" />
   </message>
   <message name="UpgradeVM_TaskResponseMsg">
      <part name="parameters" element="vim25:UpgradeVM_TaskResponse" />
   </message>
   <message name="ExtractOvfEnvironmentRequestMsg">
      <part name="parameters" element="vim25:ExtractOvfEnvironment" />
   </message>
   <message name="ExtractOvfEnvironmentResponseMsg">
      <part name="parameters" element="vim25:ExtractOvfEnvironmentResponse" />
   </message>
   <message name="PowerOnVM_TaskRequestMsg">
      <part name="parameters" element="vim25:PowerOnVM_Task" />
   </message>
   <message name="PowerOnVM_TaskResponseMsg">
      <part name="parameters" element="vim25:PowerOnVM_TaskResponse" />
   </message>
   <message name="PowerOffVM_TaskRequestMsg">
      <part name="parameters" element="vim25:PowerOffVM_Task" />
   </message>
   <message name="PowerOffVM_TaskResponseMsg">
      <part name="parameters" element="vim25:PowerOffVM_TaskResponse" />
   </message>
   <message name="SuspendVM_TaskRequestMsg">
      <part name="parameters" element="vim25:SuspendVM_Task" />
   </message>
   <message name="SuspendVM_TaskResponseMsg">
      <part name="parameters" element="vim25:SuspendVM_TaskResponse" />
   </message>
   <message name="ResetVM_TaskRequestMsg">
      <part name="parameters" element="vim25:ResetVM_Task" />
   </message>
   <message name="ResetVM_TaskResponseMsg">
      <part name="parameters" element="vim25:ResetVM_TaskResponse" />
   </message>
   <message name="ShutdownGuestRequestMsg">
      <part name="parameters" element="vim25:ShutdownGuest" />
   </message>
   <message name="ShutdownGuestResponseMsg">
      <part name="parameters" element="vim25:ShutdownGuestResponse" />
   </message>
   <message name="RebootGuestRequestMsg">
      <part name="parameters" element="vim25:RebootGuest" />
   </message>
   <message name="RebootGuestResponseMsg">
      <part name="parameters" element="vim25:RebootGuestResponse" />
   </message>
   <message name="StandbyGuestRequestMsg">
      <part name="parameters" element="vim25:StandbyGuest" />
   </message>
   <message name="StandbyGuestResponseMsg">
      <part name="parameters" element="vim25:StandbyGuestResponse" />
   </message>
   <message name="AnswerVMRequestMsg">
      <part name="parameters" element="vim25:AnswerVM" />
   </message>
   <message name="AnswerVMResponseMsg">
      <part name="parameters" element="vim25:AnswerVMResponse" />
   </message>
   <message name="CustomizeVM_TaskRequestMsg">
      <part name="parameters" element="vim25:CustomizeVM_Task" />
   </message>
   <message name="CustomizeVM_TaskResponseMsg">
      <part name="parameters" element="vim25:CustomizeVM_TaskResponse" />
   </message>
   <message name="CheckCustomizationSpecRequestMsg">
      <part name="parameters" element="vim25:CheckCustomizationSpec" />
   </message>
   <message name="CheckCustomizationSpecResponseMsg">
      <part name="parameters" element="vim25:CheckCustomizationSpecResponse" />
   </message>
   <message name="MigrateVM_TaskRequestMsg">
      <part name="parameters" element="vim25:MigrateVM_Task" />
   </message>
   <message name="MigrateVM_TaskResponseMsg">
      <part name="parameters" element="vim25:MigrateVM_TaskResponse" />
   </message>
   <message name="RelocateVM_TaskRequestMsg">
      <part name="parameters" element="vim25:RelocateVM_Task" />
   </message>
   <message name="RelocateVM_TaskResponseMsg">
      <part name="parameters" element="vim25:RelocateVM_TaskResponse" />
   </message>
   <message name="CloneVM_TaskRequestMsg">
      <part name="parameters" element="vim25:CloneVM_Task" />
   </message>
   <message name="CloneVM_TaskResponseMsg">
      <part name="parameters" element="vim25:CloneVM_TaskResponse" />
   </message>
   <message name="ExportVmRequestMsg">
      <part name="parameters" element="vim25:ExportVm" />
   </message>
   <message name="ExportVmResponseMsg">
      <part name="parameters" element="vim25:ExportVmResponse" />
   </message>
   <message name="MarkAsTemplateRequestMsg">
      <part name="parameters" element="vim25:MarkAsTemplate" />
   </message>
   <message name="MarkAsTemplateResponseMsg">
      <part name="parameters" element="vim25:MarkAsTemplateResponse" />
   </message>
   <message name="MarkAsVirtualMachineRequestMsg">
      <part name="parameters" element="vim25:MarkAsVirtualMachine" />
   </message>
   <message name="MarkAsVirtualMachineResponseMsg">
      <part name="parameters" element="vim25:MarkAsVirtualMachineResponse" />
   </message>
   <message name="UnregisterVMRequestMsg">
      <part name="parameters" element="vim25:UnregisterVM" />
   </message>
   <message name="UnregisterVMResponseMsg">
      <part name="parameters" element="vim25:UnregisterVMResponse" />
   </message>
   <message name="ResetGuestInformationRequestMsg">
      <part name="parameters" element="vim25:ResetGuestInformation" />
   </message>
   <message name="ResetGuestInformationResponseMsg">
      <part name="parameters" element="vim25:ResetGuestInformationResponse" />
   </message>
   <message name="MountToolsInstallerRequestMsg">
      <part name="parameters" element="vim25:MountToolsInstaller" />
   </message>
   <message name="MountToolsInstallerResponseMsg">
      <part name="parameters" element="vim25:MountToolsInstallerResponse" />
   </message>
   <message name="UnmountToolsInstallerRequestMsg">
      <part name="parameters" element="vim25:UnmountToolsInstaller" />
   </message>
   <message name="UnmountToolsInstallerResponseMsg">
      <part name="parameters" element="vim25:UnmountToolsInstallerResponse" />
   </message>
   <message name="UpgradeTools_TaskRequestMsg">
      <part name="parameters" element="vim25:UpgradeTools_Task" />
   </message>
   <message name="UpgradeTools_TaskResponseMsg">
      <part name="parameters" element="vim25:UpgradeTools_TaskResponse" />
   </message>
   <message name="AcquireMksTicketRequestMsg">
      <part name="parameters" element="vim25:AcquireMksTicket" />
   </message>
   <message name="AcquireMksTicketResponseMsg">
      <part name="parameters" element="vim25:AcquireMksTicketResponse" />
   </message>
   <message name="SetScreenResolutionRequestMsg">
      <part name="parameters" element="vim25:SetScreenResolution" />
   </message>
   <message name="SetScreenResolutionResponseMsg">
      <part name="parameters" element="vim25:SetScreenResolutionResponse" />
   </message>
   <message name="DefragmentAllDisksRequestMsg">
      <part name="parameters" element="vim25:DefragmentAllDisks" />
   </message>
   <message name="DefragmentAllDisksResponseMsg">
      <part name="parameters" element="vim25:DefragmentAllDisksResponse" />
   </message>
   <message name="CreateSecondaryVM_TaskRequestMsg">
      <part name="parameters" element="vim25:CreateSecondaryVM_Task" />
   </message>
   <message name="CreateSecondaryVM_TaskResponseMsg">
      <part name="parameters" element="vim25:CreateSecondaryVM_TaskResponse" />
   </message>
   <message name="TurnOffFaultToleranceForVM_TaskRequestMsg">
      <part name="parameters" element="vim25:TurnOffFaultToleranceForVM_Task" />
   </message>
   <message name="TurnOffFaultToleranceForVM_TaskResponseMsg">
      <part name="parameters" element="vim25:TurnOffFaultToleranceForVM_TaskResponse" />
   </message>
   <message name="MakePrimaryVM_TaskRequestMsg">
      <part name="parameters" element="vim25:MakePrimaryVM_Task" />
   </message>
   <message name="MakePrimaryVM_TaskResponseMsg">
      <part name="parameters" element="vim25:MakePrimaryVM_TaskResponse" />
   </message>
   <message name="TerminateFaultTolerantVM_TaskRequestMsg">
      <part name="parameters" element="vim25:TerminateFaultTolerantVM_Task" />
   </message>
   <message name="TerminateFaultTolerantVM_TaskResponseMsg">
      <part name="parameters" element="vim25:TerminateFaultTolerantVM_TaskResponse" />
   </message>
   <message name="DisableSecondaryVM_TaskRequestMsg">
      <part name="parameters" element="vim25:DisableSecondaryVM_Task" />
   </message>
   <message name="DisableSecondaryVM_TaskResponseMsg">
      <part name="parameters" element="vim25:DisableSecondaryVM_TaskResponse" />
   </message>
   <message name="EnableSecondaryVM_TaskRequestMsg">
      <part name="parameters" element="vim25:EnableSecondaryVM_Task" />
   </message>
   <message name="EnableSecondaryVM_TaskResponseMsg">
      <part name="parameters" element="vim25:EnableSecondaryVM_TaskResponse" />
   </message>
   <message name="SetDisplayTopologyRequestMsg">
      <part name="parameters" element="vim25:SetDisplayTopology" />
   </message>
   <message name="SetDisplayTopologyResponseMsg">
      <part name="parameters" element="vim25:SetDisplayTopologyResponse" />
   </message>
   <message name="StartRecording_TaskRequestMsg">
      <part name="parameters" element="vim25:StartRecording_Task" />
   </message>
   <message name="StartRecording_TaskResponseMsg">
      <part name="parameters" element="vim25:StartRecording_TaskResponse" />
   </message>
   <message name="StopRecording_TaskRequestMsg">
      <part name="parameters" element="vim25:StopRecording_Task" />
   </message>
   <message name="StopRecording_TaskResponseMsg">
      <part name="parameters" element="vim25:StopRecording_TaskResponse" />
   </message>
   <message name="StartReplaying_TaskRequestMsg">
      <part name="parameters" element="vim25:StartReplaying_Task" />
   </message>
   <message name="StartReplaying_TaskResponseMsg">
      <part name="parameters" element="vim25:StartReplaying_TaskResponse" />
   </message>
   <message name="StopReplaying_TaskRequestMsg">
      <part name="parameters" element="vim25:StopReplaying_Task" />
   </message>
   <message name="StopReplaying_TaskResponseMsg">
      <part name="parameters" element="vim25:StopReplaying_TaskResponse" />
   </message>
   <message name="PromoteDisks_TaskRequestMsg">
      <part name="parameters" element="vim25:PromoteDisks_Task" />
   </message>
   <message name="PromoteDisks_TaskResponseMsg">
      <part name="parameters" element="vim25:PromoteDisks_TaskResponse" />
   </message>
   <message name="CreateScreenshot_TaskRequestMsg">
      <part name="parameters" element="vim25:CreateScreenshot_Task" />
   </message>
   <message name="CreateScreenshot_TaskResponseMsg">
      <part name="parameters" element="vim25:CreateScreenshot_TaskResponse" />
   </message>
   <message name="QueryChangedDiskAreasRequestMsg">
      <part name="parameters" element="vim25:QueryChangedDiskAreas" />
   </message>
   <message name="QueryChangedDiskAreasResponseMsg">
      <part name="parameters" element="vim25:QueryChangedDiskAreasResponse" />
   </message>
   <message name="QueryUnownedFilesRequestMsg">
      <part name="parameters" element="vim25:QueryUnownedFiles" />
   </message>
   <message name="QueryUnownedFilesResponseMsg">
      <part name="parameters" element="vim25:QueryUnownedFilesResponse" />
   </message>
   <message name="RemoveAlarmRequestMsg">
      <part name="parameters" element="vim25:RemoveAlarm" />
   </message>
   <message name="RemoveAlarmResponseMsg">
      <part name="parameters" element="vim25:RemoveAlarmResponse" />
   </message>
   <message name="ReconfigureAlarmRequestMsg">
      <part name="parameters" element="vim25:ReconfigureAlarm" />
   </message>
   <message name="ReconfigureAlarmResponseMsg">
      <part name="parameters" element="vim25:ReconfigureAlarmResponse" />
   </message>
   <message name="CreateAlarmRequestMsg">
      <part name="parameters" element="vim25:CreateAlarm" />
   </message>
   <message name="CreateAlarmResponseMsg">
      <part name="parameters" element="vim25:CreateAlarmResponse" />
   </message>
   <message name="GetAlarmRequestMsg">
      <part name="parameters" element="vim25:GetAlarm" />
   </message>
   <message name="GetAlarmResponseMsg">
      <part name="parameters" element="vim25:GetAlarmResponse" />
   </message>
   <message name="AreAlarmActionsEnabledRequestMsg">
      <part name="parameters" element="vim25:AreAlarmActionsEnabled" />
   </message>
   <message name="AreAlarmActionsEnabledResponseMsg">
      <part name="parameters" element="vim25:AreAlarmActionsEnabledResponse" />
   </message>
   <message name="EnableAlarmActionsRequestMsg">
      <part name="parameters" element="vim25:EnableAlarmActions" />
   </message>
   <message name="EnableAlarmActionsResponseMsg">
      <part name="parameters" element="vim25:EnableAlarmActionsResponse" />
   </message>
   <message name="GetAlarmStateRequestMsg">
      <part name="parameters" element="vim25:GetAlarmState" />
   </message>
   <message name="GetAlarmStateResponseMsg">
      <part name="parameters" element="vim25:GetAlarmStateResponse" />
   </message>
   <message name="AcknowledgeAlarmRequestMsg">
      <part name="parameters" element="vim25:AcknowledgeAlarm" />
   </message>
   <message name="AcknowledgeAlarmResponseMsg">
      <part name="parameters" element="vim25:AcknowledgeAlarmResponse" />
   </message>
   <message name="ReconfigureDVPortgroup_TaskRequestMsg">
      <part name="parameters" element="vim25:ReconfigureDVPortgroup_Task" />
   </message>
   <message name="ReconfigureDVPortgroup_TaskResponseMsg">
      <part name="parameters" element="vim25:ReconfigureDVPortgroup_TaskResponse" />
   </message>
   <message name="QueryAvailableDvsSpecRequestMsg">
      <part name="parameters" element="vim25:QueryAvailableDvsSpec" />
   </message>
   <message name="QueryAvailableDvsSpecResponseMsg">
      <part name="parameters" element="vim25:QueryAvailableDvsSpecResponse" />
   </message>
   <message name="QueryCompatibleHostForNewDvsRequestMsg">
      <part name="parameters" element="vim25:QueryCompatibleHostForNewDvs" />
   </message>
   <message name="QueryCompatibleHostForNewDvsResponseMsg">
      <part name="parameters" element="vim25:QueryCompatibleHostForNewDvsResponse" />
   </message>
   <message name="QueryCompatibleHostForExistingDvsRequestMsg">
      <part name="parameters" element="vim25:QueryCompatibleHostForExistingDvs" />
   </message>
   <message name="QueryCompatibleHostForExistingDvsResponseMsg">
      <part name="parameters" element="vim25:QueryCompatibleHostForExistingDvsResponse" />
   </message>
   <message name="QueryDvsCompatibleHostSpecRequestMsg">
      <part name="parameters" element="vim25:QueryDvsCompatibleHostSpec" />
   </message>
   <message name="QueryDvsCompatibleHostSpecResponseMsg">
      <part name="parameters" element="vim25:QueryDvsCompatibleHostSpecResponse" />
   </message>
   <message name="QueryDvsByUuidRequestMsg">
      <part name="parameters" element="vim25:QueryDvsByUuid" />
   </message>
   <message name="QueryDvsByUuidResponseMsg">
      <part name="parameters" element="vim25:QueryDvsByUuidResponse" />
   </message>
   <message name="QueryDvsConfigTargetRequestMsg">
      <part name="parameters" element="vim25:QueryDvsConfigTarget" />
   </message>
   <message name="QueryDvsConfigTargetResponseMsg">
      <part name="parameters" element="vim25:QueryDvsConfigTargetResponse" />
   </message>
   <message name="ReadNextEventsRequestMsg">
      <part name="parameters" element="vim25:ReadNextEvents" />
   </message>
   <message name="ReadNextEventsResponseMsg">
      <part name="parameters" element="vim25:ReadNextEventsResponse" />
   </message>
   <message name="ReadPreviousEventsRequestMsg">
      <part name="parameters" element="vim25:ReadPreviousEvents" />
   </message>
   <message name="ReadPreviousEventsResponseMsg">
      <part name="parameters" element="vim25:ReadPreviousEventsResponse" />
   </message>
   <message name="RetrieveArgumentDescriptionRequestMsg">
      <part name="parameters" element="vim25:RetrieveArgumentDescription" />
   </message>
   <message name="RetrieveArgumentDescriptionResponseMsg">
      <part name="parameters" element="vim25:RetrieveArgumentDescriptionResponse" />
   </message>
   <message name="CreateCollectorForEventsRequestMsg">
      <part name="parameters" element="vim25:CreateCollectorForEvents" />
   </message>
   <message name="CreateCollectorForEventsResponseMsg">
      <part name="parameters" element="vim25:CreateCollectorForEventsResponse" />
   </message>
   <message name="LogUserEventRequestMsg">
      <part name="parameters" element="vim25:LogUserEvent" />
   </message>
   <message name="LogUserEventResponseMsg">
      <part name="parameters" element="vim25:LogUserEventResponse" />
   </message>
   <message name="QueryEventsRequestMsg">
      <part name="parameters" element="vim25:QueryEvents" />
   </message>
   <message name="QueryEventsResponseMsg">
      <part name="parameters" element="vim25:QueryEventsResponse" />
   </message>
   <message name="PostEventRequestMsg">
      <part name="parameters" element="vim25:PostEvent" />
   </message>
   <message name="PostEventResponseMsg">
      <part name="parameters" element="vim25:PostEventResponse" />
   </message>
   <message name="AdminDisabledFaultMsg">
      <part name="fault" element="vim25:AdminDisabledFault" />
   </message>
   <message name="AdminNotDisabledFaultMsg">
      <part name="fault" element="vim25:AdminNotDisabledFault" />
   </message>
   <message name="AffinityConfiguredFaultMsg">
      <part name="fault" element="vim25:AffinityConfiguredFault" />
   </message>
   <message name="AgentInstallFailedFaultMsg">
      <part name="fault" element="vim25:AgentInstallFailedFault" />
   </message>
   <message name="AlreadyBeingManagedFaultMsg">
      <part name="fault" element="vim25:AlreadyBeingManagedFault" />
   </message>
   <message name="AlreadyConnectedFaultMsg">
      <part name="fault" element="vim25:AlreadyConnectedFault" />
   </message>
   <message name="AlreadyExistsFaultMsg">
      <part name="fault" element="vim25:AlreadyExistsFault" />
   </message>
   <message name="AlreadyUpgradedFaultMsg">
      <part name="fault" element="vim25:AlreadyUpgradedFault" />
   </message>
   <message name="ApplicationQuiesceFaultFaultMsg">
      <part name="fault" element="vim25:ApplicationQuiesceFaultFault" />
   </message>
   <message name="AuthMinimumAdminPermissionFaultMsg">
      <part name="fault" element="vim25:AuthMinimumAdminPermissionFault" />
   </message>
   <message name="CannotAccessFileFaultMsg">
      <part name="fault" element="vim25:CannotAccessFileFault" />
   </message>
   <message name="CannotAccessLocalSourceFaultMsg">
      <part name="fault" element="vim25:CannotAccessLocalSourceFault" />
   </message>
   <message name="CannotAccessNetworkFaultMsg">
      <part name="fault" element="vim25:CannotAccessNetworkFault" />
   </message>
   <message name="CannotAccessVmComponentFaultMsg">
      <part name="fault" element="vim25:CannotAccessVmComponentFault" />
   </message>
   <message name="CannotAccessVmConfigFaultMsg">
      <part name="fault" element="vim25:CannotAccessVmConfigFault" />
   </message>
   <message name="CannotAccessVmDeviceFaultMsg">
      <part name="fault" element="vim25:CannotAccessVmDeviceFault" />
   </message>
   <message name="CannotAccessVmDiskFaultMsg">
      <part name="fault" element="vim25:CannotAccessVmDiskFault" />
   </message>
   <message name="CannotAddHostWithFTVmAsStandaloneFaultMsg">
      <part name="fault" element="vim25:CannotAddHostWithFTVmAsStandaloneFault" />
   </message>
   <message name="CannotAddHostWithFTVmToDifferentClusterFaultMsg">
      <part name="fault" element="vim25:CannotAddHostWithFTVmToDifferentClusterFault" />
   </message>
   <message name="CannotAddHostWithFTVmToNonHAClusterFaultMsg">
      <part name="fault" element="vim25:CannotAddHostWithFTVmToNonHAClusterFault" />
   </message>
   <message name="CannotCreateFileFaultMsg">
      <part name="fault" element="vim25:CannotCreateFileFault" />
   </message>
   <message name="CannotDecryptPasswordsFaultMsg">
      <part name="fault" element="vim25:CannotDecryptPasswordsFault" />
   </message>
   <message name="CannotDeleteFileFaultMsg">
      <part name="fault" element="vim25:CannotDeleteFileFault" />
   </message>
   <message name="CannotDisableSnapshotFaultMsg">
      <part name="fault" element="vim25:CannotDisableSnapshotFault" />
   </message>
   <message name="CannotDisconnectHostWithFaultToleranceVmFaultMsg">
      <part name="fault" element="vim25:CannotDisconnectHostWithFaultToleranceVmFault" />
   </message>
   <message name="CannotModifyConfigCpuRequirementsFaultMsg">
      <part name="fault" element="vim25:CannotModifyConfigCpuRequirementsFault" />
   </message>
   <message name="CannotMoveFaultToleranceVmFaultMsg">
      <part name="fault" element="vim25:CannotMoveFaultToleranceVmFault" />
   </message>
   <message name="CannotMoveHostWithFaultToleranceVmFaultMsg">
      <part name="fault" element="vim25:CannotMoveHostWithFaultToleranceVmFault" />
   </message>
   <message name="CloneFromSnapshotNotSupportedFaultMsg">
      <part name="fault" element="vim25:CloneFromSnapshotNotSupportedFault" />
   </message>
   <message name="ConcurrentAccessFaultMsg">
      <part name="fault" element="vim25:ConcurrentAccessFault" />
   </message>
   <message name="ConnectedIsoFaultMsg">
      <part name="fault" element="vim25:ConnectedIsoFault" />
   </message>
   <message name="CpuCompatibilityUnknownFaultMsg">
      <part name="fault" element="vim25:CpuCompatibilityUnknownFault" />
   </message>
   <message name="CpuHotPlugNotSupportedFaultMsg">
      <part name="fault" element="vim25:CpuHotPlugNotSupportedFault" />
   </message>
   <message name="CpuIncompatibleFaultMsg">
      <part name="fault" element="vim25:CpuIncompatibleFault" />
   </message>
   <message name="CpuIncompatible1ECXFaultMsg">
      <part name="fault" element="vim25:CpuIncompatible1ECXFault" />
   </message>
   <message name="CpuIncompatible81EDXFaultMsg">
      <part name="fault" element="vim25:CpuIncompatible81EDXFault" />
   </message>
   <message name="CustomizationFaultFaultMsg">
      <part name="fault" element="vim25:CustomizationFaultFault" />
   </message>
   <message name="CustomizationPendingFaultMsg">
      <part name="fault" element="vim25:CustomizationPendingFault" />
   </message>
   <message name="DasConfigFaultFaultMsg">
      <part name="fault" element="vim25:DasConfigFaultFault" />
   </message>
   <message name="DatabaseErrorFaultMsg">
      <part name="fault" element="vim25:DatabaseErrorFault" />
   </message>
   <message name="DatacenterMismatchFaultMsg">
      <part name="fault" element="vim25:DatacenterMismatchFault" />
   </message>
   <message name="DatastoreNotWritableOnHostFaultMsg">
      <part name="fault" element="vim25:DatastoreNotWritableOnHostFault" />
   </message>
   <message name="DestinationSwitchFullFaultMsg">
      <part name="fault" element="vim25:DestinationSwitchFullFault" />
   </message>
   <message name="DeviceBackingNotSupportedFaultMsg">
      <part name="fault" element="vim25:DeviceBackingNotSupportedFault" />
   </message>
   <message name="DeviceControllerNotSupportedFaultMsg">
      <part name="fault" element="vim25:DeviceControllerNotSupportedFault" />
   </message>
   <message name="DeviceHotPlugNotSupportedFaultMsg">
      <part name="fault" element="vim25:DeviceHotPlugNotSupportedFault" />
   </message>
   <message name="DeviceNotFoundFaultMsg">
      <part name="fault" element="vim25:DeviceNotFoundFault" />
   </message>
   <message name="DeviceNotSupportedFaultMsg">
      <part name="fault" element="vim25:DeviceNotSupportedFault" />
   </message>
   <message name="DeviceUnsupportedForVmPlatformFaultMsg">
      <part name="fault" element="vim25:DeviceUnsupportedForVmPlatformFault" />
   </message>
   <message name="DeviceUnsupportedForVmVersionFaultMsg">
      <part name="fault" element="vim25:DeviceUnsupportedForVmVersionFault" />
   </message>
   <message name="DisableAdminNotSupportedFaultMsg">
      <part name="fault" element="vim25:DisableAdminNotSupportedFault" />
   </message>
   <message name="DisallowedDiskModeChangeFaultMsg">
      <part name="fault" element="vim25:DisallowedDiskModeChangeFault" />
   </message>
   <message name="DisallowedMigrationDeviceAttachedFaultMsg">
      <part name="fault" element="vim25:DisallowedMigrationDeviceAttachedFault" />
   </message>
   <message name="DisallowedOperationOnFailoverHostFaultMsg">
      <part name="fault" element="vim25:DisallowedOperationOnFailoverHostFault" />
   </message>
   <message name="DiskMoveTypeNotSupportedFaultMsg">
      <part name="fault" element="vim25:DiskMoveTypeNotSupportedFault" />
   </message>
   <message name="DiskNotSupportedFaultMsg">
      <part name="fault" element="vim25:DiskNotSupportedFault" />
   </message>
   <message name="DrsDisabledOnVmFaultMsg">
      <part name="fault" element="vim25:DrsDisabledOnVmFault" />
   </message>
   <message name="DrsVmotionIncompatibleFaultFaultMsg">
      <part name="fault" element="vim25:DrsVmotionIncompatibleFaultFault" />
   </message>
   <message name="DuplicateNameFaultMsg">
      <part name="fault" element="vim25:DuplicateNameFault" />
   </message>
   <message name="DvsFaultFaultMsg">
      <part name="fault" element="vim25:DvsFaultFault" />
   </message>
   <message name="DvsNotAuthorizedFaultMsg">
      <part name="fault" element="vim25:DvsNotAuthorizedFault" />
   </message>
   <message name="DvsOperationBulkFaultFaultMsg">
      <part name="fault" element="vim25:DvsOperationBulkFaultFault" />
   </message>
   <message name="DvsScopeViolatedFaultMsg">
      <part name="fault" element="vim25:DvsScopeViolatedFault" />
   </message>
   <message name="EVCAdmissionFailedFaultMsg">
      <part name="fault" element="vim25:EVCAdmissionFailedFault" />
   </message>
   <message name="EVCAdmissionFailedCPUFeaturesForModeFaultMsg">
      <part name="fault" element="vim25:EVCAdmissionFailedCPUFeaturesForModeFault" />
   </message>
   <message name="EVCAdmissionFailedCPUModelFaultMsg">
      <part name="fault" element="vim25:EVCAdmissionFailedCPUModelFault" />
   </message>
   <message name="EVCAdmissionFailedCPUModelForModeFaultMsg">
      <part name="fault" element="vim25:EVCAdmissionFailedCPUModelForModeFault" />
   </message>
   <message name="EVCAdmissionFailedCPUVendorFaultMsg">
      <part name="fault" element="vim25:EVCAdmissionFailedCPUVendorFault" />
   </message>
   <message name="EVCAdmissionFailedCPUVendorUnknownFaultMsg">
      <part name="fault" element="vim25:EVCAdmissionFailedCPUVendorUnknownFault" />
   </message>
   <message name="EVCAdmissionFailedHostDisconnectedFaultMsg">
      <part name="fault" element="vim25:EVCAdmissionFailedHostDisconnectedFault" />
   </message>
   <message name="EVCAdmissionFailedHostSoftwareFaultMsg">
      <part name="fault" element="vim25:EVCAdmissionFailedHostSoftwareFault" />
   </message>
   <message name="EVCAdmissionFailedHostSoftwareForModeFaultMsg">
      <part name="fault" element="vim25:EVCAdmissionFailedHostSoftwareForModeFault" />
   </message>
   <message name="EVCAdmissionFailedVmActiveFaultMsg">
      <part name="fault" element="vim25:EVCAdmissionFailedVmActiveFault" />
   </message>
   <message name="EightHostLimitViolatedFaultMsg">
      <part name="fault" element="vim25:EightHostLimitViolatedFault" />
   </message>
   <message name="ExpiredAddonLicenseFaultMsg">
      <part name="fault" element="vim25:ExpiredAddonLicenseFault" />
   </message>
   <message name="ExpiredEditionLicenseFaultMsg">
      <part name="fault" element="vim25:ExpiredEditionLicenseFault" />
   </message>
   <message name="ExpiredFeatureLicenseFaultMsg">
      <part name="fault" element="vim25:ExpiredFeatureLicenseFault" />
   </message>
   <message name="ExtendedFaultFaultMsg">
      <part name="fault" element="vim25:ExtendedFaultFault" />
   </message>
   <message name="FaultToleranceAntiAffinityViolatedFaultMsg">
      <part name="fault" element="vim25:FaultToleranceAntiAffinityViolatedFault" />
   </message>
   <message name="FaultToleranceCpuIncompatibleFaultMsg">
      <part name="fault" element="vim25:FaultToleranceCpuIncompatibleFault" />
   </message>
   <message name="FaultToleranceNotLicensedFaultMsg">
      <part name="fault" element="vim25:FaultToleranceNotLicensedFault" />
   </message>
   <message name="FaultToleranceNotSameBuildFaultMsg">
      <part name="fault" element="vim25:FaultToleranceNotSameBuildFault" />
   </message>
   <message name="FaultTolerancePrimaryPowerOnNotAttemptedFaultMsg">
      <part name="fault" element="vim25:FaultTolerancePrimaryPowerOnNotAttemptedFault" />
   </message>
   <message name="FileAlreadyExistsFaultMsg">
      <part name="fault" element="vim25:FileAlreadyExistsFault" />
   </message>
   <message name="FileBackedPortNotSupportedFaultMsg">
      <part name="fault" element="vim25:FileBackedPortNotSupportedFault" />
   </message>
   <message name="FileFaultFaultMsg">
      <part name="fault" element="vim25:FileFaultFault" />
   </message>
   <message name="FileLockedFaultMsg">
      <part name="fault" element="vim25:FileLockedFault" />
   </message>
   <message name="FileNotFoundFaultMsg">
      <part name="fault" element="vim25:FileNotFoundFault" />
   </message>
   <message name="FileNotWritableFaultMsg">
      <part name="fault" element="vim25:FileNotWritableFault" />
   </message>
   <message name="FileTooLargeFaultMsg">
      <part name="fault" element="vim25:FileTooLargeFault" />
   </message>
   <message name="FilesystemQuiesceFaultFaultMsg">
      <part name="fault" element="vim25:FilesystemQuiesceFaultFault" />
   </message>
   <message name="FtIssuesOnHostFaultMsg">
      <part name="fault" element="vim25:FtIssuesOnHostFault" />
   </message>
   <message name="FullStorageVMotionNotSupportedFaultMsg">
      <part name="fault" element="vim25:FullStorageVMotionNotSupportedFault" />
   </message>
   <message name="GenericDrsFaultFaultMsg">
      <part name="fault" element="vim25:GenericDrsFaultFault" />
   </message>
   <message name="GenericVmConfigFaultFaultMsg">
      <part name="fault" element="vim25:GenericVmConfigFaultFault" />
   </message>
   <message name="HAErrorsAtDestFaultMsg">
      <part name="fault" element="vim25:HAErrorsAtDestFault" />
   </message>
   <message name="HostConfigFailedFaultMsg">
      <part name="fault" element="vim25:HostConfigFailedFault" />
   </message>
   <message name="HostConfigFaultFaultMsg">
      <part name="fault" element="vim25:HostConfigFaultFault" />
   </message>
   <message name="HostConnectFaultFaultMsg">
      <part name="fault" element="vim25:HostConnectFaultFault" />
   </message>
   <message name="HostIncompatibleForFaultToleranceFaultMsg">
      <part name="fault" element="vim25:HostIncompatibleForFaultToleranceFault" />
   </message>
   <message name="HostIncompatibleForRecordReplayFaultMsg">
      <part name="fault" element="vim25:HostIncompatibleForRecordReplayFault" />
   </message>
   <message name="HostInventoryFullFaultMsg">
      <part name="fault" element="vim25:HostInventoryFullFault" />
   </message>
   <message name="HostPowerOpFailedFaultMsg">
      <part name="fault" element="vim25:HostPowerOpFailedFault" />
   </message>
   <message name="HotSnapshotMoveNotSupportedFaultMsg">
      <part name="fault" element="vim25:HotSnapshotMoveNotSupportedFault" />
   </message>
   <message name="IDEDiskNotSupportedFaultMsg">
      <part name="fault" element="vim25:IDEDiskNotSupportedFault" />
   </message>
   <message name="InUseFeatureManipulationDisallowedFaultMsg">
      <part name="fault" element="vim25:InUseFeatureManipulationDisallowedFault" />
   </message>
   <message name="InaccessibleDatastoreFaultMsg">
      <part name="fault" element="vim25:InaccessibleDatastoreFault" />
   </message>
   <message name="IncompatibleDefaultDeviceFaultMsg">
      <part name="fault" element="vim25:IncompatibleDefaultDeviceFault" />
   </message>
   <message name="IncompatibleHostForFtSecondaryFaultMsg">
      <part name="fault" element="vim25:IncompatibleHostForFtSecondaryFault" />
   </message>
   <message name="IncompatibleSettingFaultMsg">
      <part name="fault" element="vim25:IncompatibleSettingFault" />
   </message>
   <message name="IncorrectFileTypeFaultMsg">
      <part name="fault" element="vim25:IncorrectFileTypeFault" />
   </message>
   <message name="IncorrectHostInformationFaultMsg">
      <part name="fault" element="vim25:IncorrectHostInformationFault" />
   </message>
   <message name="IndependentDiskVMotionNotSupportedFaultMsg">
      <part name="fault" element="vim25:IndependentDiskVMotionNotSupportedFault" />
   </message>
   <message name="InsufficientCpuResourcesFaultFaultMsg">
      <part name="fault" element="vim25:InsufficientCpuResourcesFaultFault" />
   </message>
   <message name="InsufficientFailoverResourcesFaultFaultMsg">
      <part name="fault" element="vim25:InsufficientFailoverResourcesFaultFault" />
   </message>
   <message name="InsufficientHostCapacityFaultFaultMsg">
      <part name="fault" element="vim25:InsufficientHostCapacityFaultFault" />
   </message>
   <message name="InsufficientHostCpuCapacityFaultFaultMsg">
      <part name="fault" element="vim25:InsufficientHostCpuCapacityFaultFault" />
   </message>
   <message name="InsufficientHostMemoryCapacityFaultFaultMsg">
      <part name="fault" element="vim25:InsufficientHostMemoryCapacityFaultFault" />
   </message>
   <message name="InsufficientMemoryResourcesFaultFaultMsg">
      <part name="fault" element="vim25:InsufficientMemoryResourcesFaultFault" />
   </message>
   <message name="InsufficientPerCpuCapacityFaultMsg">
      <part name="fault" element="vim25:InsufficientPerCpuCapacityFault" />
   </message>
   <message name="InsufficientResourcesFaultFaultMsg">
      <part name="fault" element="vim25:InsufficientResourcesFaultFault" />
   </message>
   <message name="InsufficientStandbyCpuResourceFaultMsg">
      <part name="fault" element="vim25:InsufficientStandbyCpuResourceFault" />
   </message>
   <message name="InsufficientStandbyMemoryResourceFaultMsg">
      <part name="fault" element="vim25:InsufficientStandbyMemoryResourceFault" />
   </message>
   <message name="InsufficientStandbyResourceFaultMsg">
      <part name="fault" element="vim25:InsufficientStandbyResourceFault" />
   </message>
   <message name="InvalidAffinitySettingFaultFaultMsg">
      <part name="fault" element="vim25:InvalidAffinitySettingFaultFault" />
   </message>
   <message name="InvalidBmcRoleFaultMsg">
      <part name="fault" element="vim25:InvalidBmcRoleFault" />
   </message>
   <message name="InvalidBundleFaultMsg">
      <part name="fault" element="vim25:InvalidBundleFault" />
   </message>
   <message name="InvalidClientCertificateFaultMsg">
      <part name="fault" element="vim25:InvalidClientCertificateFault" />
   </message>
   <message name="InvalidControllerFaultMsg">
      <part name="fault" element="vim25:InvalidControllerFault" />
   </message>
   <message name="InvalidDatastoreFaultMsg">
      <part name="fault" element="vim25:InvalidDatastoreFault" />
   </message>
   <message name="InvalidDatastorePathFaultMsg">
      <part name="fault" element="vim25:InvalidDatastorePathFault" />
   </message>
   <message name="InvalidDeviceBackingFaultMsg">
      <part name="fault" element="vim25:InvalidDeviceBackingFault" />
   </message>
   <message name="InvalidDeviceOperationFaultMsg">
      <part name="fault" element="vim25:InvalidDeviceOperationFault" />
   </message>
   <message name="InvalidDeviceSpecFaultMsg">
      <part name="fault" element="vim25:InvalidDeviceSpecFault" />
   </message>
   <message name="InvalidDiskFormatFaultMsg">
      <part name="fault" element="vim25:InvalidDiskFormatFault" />
   </message>
   <message name="InvalidDrsBehaviorForFtVmFaultMsg">
      <part name="fault" element="vim25:InvalidDrsBehaviorForFtVmFault" />
   </message>
   <message name="InvalidEditionLicenseFaultMsg">
      <part name="fault" element="vim25:InvalidEditionLicenseFault" />
   </message>
   <message name="InvalidEventFaultMsg">
      <part name="fault" element="vim25:InvalidEventFault" />
   </message>
   <message name="InvalidFolderFaultMsg">
      <part name="fault" element="vim25:InvalidFolderFault" />
   </message>
   <message name="InvalidFormatFaultMsg">
      <part name="fault" element="vim25:InvalidFormatFault" />
   </message>
   <message name="InvalidHostStateFaultMsg">
      <part name="fault" element="vim25:InvalidHostStateFault" />
   </message>
   <message name="InvalidIndexArgumentFaultMsg">
      <part name="fault" element="vim25:InvalidIndexArgumentFault" />
   </message>
   <message name="InvalidIpmiLoginInfoFaultMsg">
      <part name="fault" element="vim25:InvalidIpmiLoginInfoFault" />
   </message>
   <message name="InvalidIpmiMacAddressFaultMsg">
      <part name="fault" element="vim25:InvalidIpmiMacAddressFault" />
   </message>
   <message name="InvalidLicenseFaultMsg">
      <part name="fault" element="vim25:InvalidLicenseFault" />
   </message>
   <message name="InvalidLocaleFaultMsg">
      <part name="fault" element="vim25:InvalidLocaleFault" />
   </message>
   <message name="InvalidLoginFaultMsg">
      <part name="fault" element="vim25:InvalidLoginFault" />
   </message>
   <message name="InvalidNameFaultMsg">
      <part name="fault" element="vim25:InvalidNameFault" />
   </message>
   <message name="InvalidNasCredentialsFaultMsg">
      <part name="fault" element="vim25:InvalidNasCredentialsFault" />
   </message>
   <message name="InvalidNetworkInTypeFaultMsg">
      <part name="fault" element="vim25:InvalidNetworkInTypeFault" />
   </message>
   <message name="InvalidNetworkResourceFaultMsg">
      <part name="fault" element="vim25:InvalidNetworkResourceFault" />
   </message>
   <message name="InvalidOperationOnSecondaryVmFaultMsg">
      <part name="fault" element="vim25:InvalidOperationOnSecondaryVmFault" />
   </message>
   <message name="InvalidPowerStateFaultMsg">
      <part name="fault" element="vim25:InvalidPowerStateFault" />
   </message>
   <message name="InvalidPrivilegeFaultMsg">
      <part name="fault" element="vim25:InvalidPrivilegeFault" />
   </message>
   <message name="InvalidPropertyTypeFaultMsg">
      <part name="fault" element="vim25:InvalidPropertyTypeFault" />
   </message>
   <message name="InvalidPropertyValueFaultMsg">
      <part name="fault" element="vim25:InvalidPropertyValueFault" />
   </message>
   <message name="InvalidResourcePoolStructureFaultFaultMsg">
      <part name="fault" element="vim25:InvalidResourcePoolStructureFaultFault" />
   </message>
   <message name="InvalidSnapshotFormatFaultMsg">
      <part name="fault" element="vim25:InvalidSnapshotFormatFault" />
   </message>
   <message name="InvalidStateFaultMsg">
      <part name="fault" element="vim25:InvalidStateFault" />
   </message>
   <message name="InvalidVmConfigFaultMsg">
      <part name="fault" element="vim25:InvalidVmConfigFault" />
   </message>
   <message name="InventoryHasStandardAloneHostsFaultMsg">
      <part name="fault" element="vim25:InventoryHasStandardAloneHostsFault" />
   </message>
   <message name="IpHostnameGeneratorErrorFaultMsg">
      <part name="fault" element="vim25:IpHostnameGeneratorErrorFault" />
   </message>
   <message name="LegacyNetworkInterfaceInUseFaultMsg">
      <part name="fault" element="vim25:LegacyNetworkInterfaceInUseFault" />
   </message>
   <message name="LicenseAssignmentFailedFaultMsg">
      <part name="fault" element="vim25:LicenseAssignmentFailedFault" />
   </message>
   <message name="LicenseDowngradeDisallowedFaultMsg">
      <part name="fault" element="vim25:LicenseDowngradeDisallowedFault" />
   </message>
   <message name="LicenseEntityNotFoundFaultMsg">
      <part name="fault" element="vim25:LicenseEntityNotFoundFault" />
   </message>
   <message name="LicenseExpiredFaultMsg">
      <part name="fault" element="vim25:LicenseExpiredFault" />
   </message>
   <message name="LicenseKeyEntityMismatchFaultMsg">
      <part name="fault" element="vim25:LicenseKeyEntityMismatchFault" />
   </message>
   <message name="LicenseRestrictedFaultMsg">
      <part name="fault" element="vim25:LicenseRestrictedFault" />
   </message>
   <message name="LicenseServerUnavailableFaultMsg">
      <part name="fault" element="vim25:LicenseServerUnavailableFault" />
   </message>
   <message name="LicenseSourceUnavailableFaultMsg">
      <part name="fault" element="vim25:LicenseSourceUnavailableFault" />
   </message>
   <message name="LimitExceededFaultMsg">
      <part name="fault" element="vim25:LimitExceededFault" />
   </message>
   <message name="LinuxVolumeNotCleanFaultMsg">
      <part name="fault" element="vim25:LinuxVolumeNotCleanFault" />
   </message>
   <message name="LogBundlingFailedFaultMsg">
      <part name="fault" element="vim25:LogBundlingFailedFault" />
   </message>
   <message name="MaintenanceModeFileMoveFaultMsg">
      <part name="fault" element="vim25:MaintenanceModeFileMoveFault" />
   </message>
   <message name="MemoryHotPlugNotSupportedFaultMsg">
      <part name="fault" element="vim25:MemoryHotPlugNotSupportedFault" />
   </message>
   <message name="MemorySizeNotRecommendedFaultMsg">
      <part name="fault" element="vim25:MemorySizeNotRecommendedFault" />
   </message>
   <message name="MemorySizeNotSupportedFaultMsg">
      <part name="fault" element="vim25:MemorySizeNotSupportedFault" />
   </message>
   <message name="MemorySnapshotOnIndependentDiskFaultMsg">
      <part name="fault" element="vim25:MemorySnapshotOnIndependentDiskFault" />
   </message>
   <message name="MethodDisabledFaultMsg">
      <part name="fault" element="vim25:MethodDisabledFault" />
   </message>
   <message name="MigrationDisabledFaultMsg">
      <part name="fault" element="vim25:MigrationDisabledFault" />
   </message>
   <message name="MigrationFaultFaultMsg">
      <part name="fault" element="vim25:MigrationFaultFault" />
   </message>
   <message name="MigrationFeatureNotSupportedFaultMsg">
      <part name="fault" element="vim25:MigrationFeatureNotSupportedFault" />
   </message>
   <message name="MigrationNotReadyFaultMsg">
      <part name="fault" element="vim25:MigrationNotReadyFault" />
   </message>
   <message name="MismatchedBundleFaultMsg">
      <part name="fault" element="vim25:MismatchedBundleFault" />
   </message>
   <message name="MismatchedNetworkPoliciesFaultMsg">
      <part name="fault" element="vim25:MismatchedNetworkPoliciesFault" />
   </message>
   <message name="MismatchedVMotionNetworkNamesFaultMsg">
      <part name="fault" element="vim25:MismatchedVMotionNetworkNamesFault" />
   </message>
   <message name="MissingBmcSupportFaultMsg">
      <part name="fault" element="vim25:MissingBmcSupportFault" />
   </message>
   <message name="MissingControllerFaultMsg">
      <part name="fault" element="vim25:MissingControllerFault" />
   </message>
   <message name="MissingLinuxCustResourcesFaultMsg">
      <part name="fault" element="vim25:MissingLinuxCustResourcesFault" />
   </message>
   <message name="MissingNetworkIpConfigFaultMsg">
      <part name="fault" element="vim25:MissingNetworkIpConfigFault" />
   </message>
   <message name="MissingPowerOffConfigurationFaultMsg">
      <part name="fault" element="vim25:MissingPowerOffConfigurationFault" />
   </message>
   <message name="MissingPowerOnConfigurationFaultMsg">
      <part name="fault" element="vim25:MissingPowerOnConfigurationFault" />
   </message>
   <message name="MissingWindowsCustResourcesFaultMsg">
      <part name="fault" element="vim25:MissingWindowsCustResourcesFault" />
   </message>
   <message name="MountErrorFaultMsg">
      <part name="fault" element="vim25:MountErrorFault" />
   </message>
   <message name="MultipleCertificatesVerifyFaultFaultMsg">
      <part name="fault" element="vim25:MultipleCertificatesVerifyFaultFault" />
   </message>
   <message name="MultipleSnapshotsNotSupportedFaultMsg">
      <part name="fault" element="vim25:MultipleSnapshotsNotSupportedFault" />
   </message>
   <message name="NasConfigFaultFaultMsg">
      <part name="fault" element="vim25:NasConfigFaultFault" />
   </message>
   <message name="NasConnectionLimitReachedFaultMsg">
      <part name="fault" element="vim25:NasConnectionLimitReachedFault" />
   </message>
   <message name="NasSessionCredentialConflictFaultMsg">
      <part name="fault" element="vim25:NasSessionCredentialConflictFault" />
   </message>
   <message name="NasVolumeNotMountedFaultMsg">
      <part name="fault" element="vim25:NasVolumeNotMountedFault" />
   </message>
   <message name="NetworkCopyFaultFaultMsg">
      <part name="fault" element="vim25:NetworkCopyFaultFault" />
   </message>
   <message name="NetworkInaccessibleFaultMsg">
      <part name="fault" element="vim25:NetworkInaccessibleFault" />
   </message>
   <message name="NetworksMayNotBeTheSameFaultMsg">
      <part name="fault" element="vim25:NetworksMayNotBeTheSameFault" />
   </message>
   <message name="NicSettingMismatchFaultMsg">
      <part name="fault" element="vim25:NicSettingMismatchFault" />
   </message>
   <message name="NoActiveHostInClusterFaultMsg">
      <part name="fault" element="vim25:NoActiveHostInClusterFault" />
   </message>
   <message name="NoAvailableIpFaultMsg">
      <part name="fault" element="vim25:NoAvailableIpFault" />
   </message>
   <message name="NoClientCertificateFaultMsg">
      <part name="fault" element="vim25:NoClientCertificateFault" />
   </message>
   <message name="NoCompatibleHostFaultMsg">
      <part name="fault" element="vim25:NoCompatibleHostFault" />
   </message>
   <message name="NoDiskFoundFaultMsg">
      <part name="fault" element="vim25:NoDiskFoundFault" />
   </message>
   <message name="NoDiskSpaceFaultMsg">
      <part name="fault" element="vim25:NoDiskSpaceFault" />
   </message>
   <message name="NoDisksToCustomizeFaultMsg">
      <part name="fault" element="vim25:NoDisksToCustomizeFault" />
   </message>
   <message name="NoGatewayFaultMsg">
      <part name="fault" element="vim25:NoGatewayFault" />
   </message>
   <message name="NoGuestHeartbeatFaultMsg">
      <part name="fault" element="vim25:NoGuestHeartbeatFault" />
   </message>
   <message name="NoHostFaultMsg">
      <part name="fault" element="vim25:NoHostFault" />
   </message>
   <message name="NoHostSuitableForFtSecondaryFaultMsg">
      <part name="fault" element="vim25:NoHostSuitableForFtSecondaryFault" />
   </message>
   <message name="NoLicenseServerConfiguredFaultMsg">
      <part name="fault" element="vim25:NoLicenseServerConfiguredFault" />
   </message>
   <message name="NoPeerHostFoundFaultMsg">
      <part name="fault" element="vim25:NoPeerHostFoundFault" />
   </message>
   <message name="NoPermissionFaultMsg">
      <part name="fault" element="vim25:NoPermissionFault" />
   </message>
   <message name="NoPermissionOnHostFaultMsg">
      <part name="fault" element="vim25:NoPermissionOnHostFault" />
   </message>
   <message name="NoPermissionOnNasVolumeFaultMsg">
      <part name="fault" element="vim25:NoPermissionOnNasVolumeFault" />
   </message>
   <message name="NoSubjectNameFaultMsg">
      <part name="fault" element="vim25:NoSubjectNameFault" />
   </message>
   <message name="NoVcManagedIpConfiguredFaultMsg">
      <part name="fault" element="vim25:NoVcManagedIpConfiguredFault" />
   </message>
   <message name="NoVirtualNicFaultMsg">
      <part name="fault" element="vim25:NoVirtualNicFault" />
   </message>
   <message name="NoVmInVAppFaultMsg">
      <part name="fault" element="vim25:NoVmInVAppFault" />
   </message>
   <message name="NonHomeRDMVMotionNotSupportedFaultMsg">
      <part name="fault" element="vim25:NonHomeRDMVMotionNotSupportedFault" />
   </message>
   <message name="NonPersistentDisksNotSupportedFaultMsg">
      <part name="fault" element="vim25:NonPersistentDisksNotSupportedFault" />
   </message>
   <message name="NotAuthenticatedFaultMsg">
      <part name="fault" element="vim25:NotAuthenticatedFault" />
   </message>
   <message name="NotEnoughCpusFaultMsg">
      <part name="fault" element="vim25:NotEnoughCpusFault" />
   </message>
   <message name="NotEnoughLogicalCpusFaultMsg">
      <part name="fault" element="vim25:NotEnoughLogicalCpusFault" />
   </message>
   <message name="NotFoundFaultMsg">
      <part name="fault" element="vim25:NotFoundFault" />
   </message>
   <message name="NotSupportedHostFaultMsg">
      <part name="fault" element="vim25:NotSupportedHostFault" />
   </message>
   <message name="NotSupportedHostInClusterFaultMsg">
      <part name="fault" element="vim25:NotSupportedHostInClusterFault" />
   </message>
   <message name="NotUserConfigurablePropertyFaultMsg">
      <part name="fault" element="vim25:NotUserConfigurablePropertyFault" />
   </message>
   <message name="NumVirtualCpusIncompatibleFaultMsg">
      <part name="fault" element="vim25:NumVirtualCpusIncompatibleFault" />
   </message>
   <message name="NumVirtualCpusNotSupportedFaultMsg">
      <part name="fault" element="vim25:NumVirtualCpusNotSupportedFault" />
   </message>
   <message name="OutOfBoundsFaultMsg">
      <part name="fault" element="vim25:OutOfBoundsFault" />
   </message>
   <message name="OvfAttributeFaultMsg">
      <part name="fault" element="vim25:OvfAttributeFault" />
   </message>
   <message name="OvfConnectedDeviceFaultMsg">
      <part name="fault" element="vim25:OvfConnectedDeviceFault" />
   </message>
   <message name="OvfConnectedDeviceFloppyFaultMsg">
      <part name="fault" element="vim25:OvfConnectedDeviceFloppyFault" />
   </message>
   <message name="OvfConnectedDeviceIsoFaultMsg">
      <part name="fault" element="vim25:OvfConnectedDeviceIsoFault" />
   </message>
   <message name="OvfDiskMappingNotFoundFaultMsg">
      <part name="fault" element="vim25:OvfDiskMappingNotFoundFault" />
   </message>
   <message name="OvfDuplicateElementFaultMsg">
      <part name="fault" element="vim25:OvfDuplicateElementFault" />
   </message>
   <message name="OvfDuplicatedElementBoundaryFaultMsg">
      <part name="fault" element="vim25:OvfDuplicatedElementBoundaryFault" />
   </message>
   <message name="OvfElementFaultMsg">
      <part name="fault" element="vim25:OvfElementFault" />
   </message>
   <message name="OvfElementInvalidValueFaultMsg">
      <part name="fault" element="vim25:OvfElementInvalidValueFault" />
   </message>
   <message name="OvfExportFaultMsg">
      <part name="fault" element="vim25:OvfExportFault" />
   </message>
   <message name="OvfFaultFaultMsg">
      <part name="fault" element="vim25:OvfFaultFault" />
   </message>
   <message name="OvfHardwareCheckFaultMsg">
      <part name="fault" element="vim25:OvfHardwareCheckFault" />
   </message>
   <message name="OvfHardwareExportFaultMsg">
      <part name="fault" element="vim25:OvfHardwareExportFault" />
   </message>
   <message name="OvfHostValueNotParsedFaultMsg">
      <part name="fault" element="vim25:OvfHostValueNotParsedFault" />
   </message>
   <message name="OvfImportFaultMsg">
      <part name="fault" element="vim25:OvfImportFault" />
   </message>
   <message name="OvfInvalidPackageFaultMsg">
      <part name="fault" element="vim25:OvfInvalidPackageFault" />
   </message>
   <message name="OvfInvalidValueFaultMsg">
      <part name="fault" element="vim25:OvfInvalidValueFault" />
   </message>
   <message name="OvfInvalidValueConfigurationFaultMsg">
      <part name="fault" element="vim25:OvfInvalidValueConfigurationFault" />
   </message>
   <message name="OvfInvalidValueEmptyFaultMsg">
      <part name="fault" element="vim25:OvfInvalidValueEmptyFault" />
   </message>
   <message name="OvfInvalidValueFormatMalformedFaultMsg">
      <part name="fault" element="vim25:OvfInvalidValueFormatMalformedFault" />
   </message>
   <message name="OvfInvalidValueReferenceFaultMsg">
      <part name="fault" element="vim25:OvfInvalidValueReferenceFault" />
   </message>
   <message name="OvfInvalidVmNameFaultMsg">
      <part name="fault" element="vim25:OvfInvalidVmNameFault" />
   </message>
   <message name="OvfMappedOsIdFaultMsg">
      <part name="fault" element="vim25:OvfMappedOsIdFault" />
   </message>
   <message name="OvfMissingAttributeFaultMsg">
      <part name="fault" element="vim25:OvfMissingAttributeFault" />
   </message>
   <message name="OvfMissingElementFaultMsg">
      <part name="fault" element="vim25:OvfMissingElementFault" />
   </message>
   <message name="OvfMissingElementNormalBoundaryFaultMsg">
      <part name="fault" element="vim25:OvfMissingElementNormalBoundaryFault" />
   </message>
   <message name="OvfMissingHardwareFaultMsg">
      <part name="fault" element="vim25:OvfMissingHardwareFault" />
   </message>
   <message name="OvfNoHostNicFaultMsg">
      <part name="fault" element="vim25:OvfNoHostNicFault" />
   </message>
   <message name="OvfNoSupportedHardwareFamilyFaultMsg">
      <part name="fault" element="vim25:OvfNoSupportedHardwareFamilyFault" />
   </message>
   <message name="OvfPropertyFaultMsg">
      <part name="fault" element="vim25:OvfPropertyFault" />
   </message>
   <message name="OvfPropertyExportFaultMsg">
      <part name="fault" element="vim25:OvfPropertyExportFault" />
   </message>
   <message name="OvfPropertyNetworkFaultMsg">
      <part name="fault" element="vim25:OvfPropertyNetworkFault" />
   </message>
   <message name="OvfPropertyQualifierFaultMsg">
      <part name="fault" element="vim25:OvfPropertyQualifierFault" />
   </message>
   <message name="OvfPropertyQualifierDuplicateFaultMsg">
      <part name="fault" element="vim25:OvfPropertyQualifierDuplicateFault" />
   </message>
   <message name="OvfPropertyQualifierIgnoredFaultMsg">
      <part name="fault" element="vim25:OvfPropertyQualifierIgnoredFault" />
   </message>
   <message name="OvfPropertyTypeFaultMsg">
      <part name="fault" element="vim25:OvfPropertyTypeFault" />
   </message>
   <message name="OvfPropertyValueFaultMsg">
      <part name="fault" element="vim25:OvfPropertyValueFault" />
   </message>
   <message name="OvfSystemFaultFaultMsg">
      <part name="fault" element="vim25:OvfSystemFaultFault" />
   </message>
   <message name="OvfToXmlUnsupportedElementFaultMsg">
      <part name="fault" element="vim25:OvfToXmlUnsupportedElementFault" />
   </message>
   <message name="OvfUnableToExportDiskFaultMsg">
      <part name="fault" element="vim25:OvfUnableToExportDiskFault" />
   </message>
   <message name="OvfUnexpectedElementFaultMsg">
      <part name="fault" element="vim25:OvfUnexpectedElementFault" />
   </message>
   <message name="OvfUnknownDeviceFaultMsg">
      <part name="fault" element="vim25:OvfUnknownDeviceFault" />
   </message>
   <message name="OvfUnknownDeviceBackingFaultMsg">
      <part name="fault" element="vim25:OvfUnknownDeviceBackingFault" />
   </message>
   <message name="OvfUnknownEntityFaultMsg">
      <part name="fault" element="vim25:OvfUnknownEntityFault" />
   </message>
   <message name="OvfUnsupportedAttributeFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedAttributeFault" />
   </message>
   <message name="OvfUnsupportedAttributeValueFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedAttributeValueFault" />
   </message>
   <message name="OvfUnsupportedDeviceBackingInfoFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedDeviceBackingInfoFault" />
   </message>
   <message name="OvfUnsupportedDeviceBackingOptionFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedDeviceBackingOptionFault" />
   </message>
   <message name="OvfUnsupportedDeviceExportFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedDeviceExportFault" />
   </message>
   <message name="OvfUnsupportedElementFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedElementFault" />
   </message>
   <message name="OvfUnsupportedElementValueFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedElementValueFault" />
   </message>
   <message name="OvfUnsupportedPackageFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedPackageFault" />
   </message>
   <message name="OvfUnsupportedSectionFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedSectionFault" />
   </message>
   <message name="OvfUnsupportedSubTypeFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedSubTypeFault" />
   </message>
   <message name="OvfUnsupportedTypeFaultMsg">
      <part name="fault" element="vim25:OvfUnsupportedTypeFault" />
   </message>
   <message name="OvfWrongElementFaultMsg">
      <part name="fault" element="vim25:OvfWrongElementFault" />
   </message>
   <message name="OvfWrongNamespaceFaultMsg">
      <part name="fault" element="vim25:OvfWrongNamespaceFault" />
   </message>
   <message name="OvfXmlFormatFaultMsg">
      <part name="fault" element="vim25:OvfXmlFormatFault" />
   </message>
   <message name="PatchAlreadyInstalledFaultMsg">
      <part name="fault" element="vim25:PatchAlreadyInstalledFault" />
   </message>
   <message name="PatchBinariesNotFoundFaultMsg">
      <part name="fault" element="vim25:PatchBinariesNotFoundFault" />
   </message>
   <message name="PatchInstallFailedFaultMsg">
      <part name="fault" element="vim25:PatchInstallFailedFault" />
   </message>
   <message name="PatchIntegrityErrorFaultMsg">
      <part name="fault" element="vim25:PatchIntegrityErrorFault" />
   </message>
   <message name="PatchMetadataCorruptedFaultMsg">
      <part name="fault" element="vim25:PatchMetadataCorruptedFault" />
   </message>
   <message name="PatchMetadataInvalidFaultMsg">
      <part name="fault" element="vim25:PatchMetadataInvalidFault" />
   </message>
   <message name="PatchMetadataNotFoundFaultMsg">
      <part name="fault" element="vim25:PatchMetadataNotFoundFault" />
   </message>
   <message name="PatchMissingDependenciesFaultMsg">
      <part name="fault" element="vim25:PatchMissingDependenciesFault" />
   </message>
   <message name="PatchNotApplicableFaultMsg">
      <part name="fault" element="vim25:PatchNotApplicableFault" />
   </message>
   <message name="PatchSupersededFaultMsg">
      <part name="fault" element="vim25:PatchSupersededFault" />
   </message>
   <message name="PhysCompatRDMNotSupportedFaultMsg">
      <part name="fault" element="vim25:PhysCompatRDMNotSupportedFault" />
   </message>
   <message name="PlatformConfigFaultFaultMsg">
      <part name="fault" element="vim25:PlatformConfigFaultFault" />
   </message>
   <message name="PowerOnFtSecondaryFailedFaultMsg">
      <part name="fault" element="vim25:PowerOnFtSecondaryFailedFault" />
   </message>
   <message name="PowerOnFtSecondaryTimedoutFaultMsg">
      <part name="fault" element="vim25:PowerOnFtSecondaryTimedoutFault" />
   </message>
   <message name="ProfileUpdateFailedFaultMsg">
      <part name="fault" element="vim25:ProfileUpdateFailedFault" />
   </message>
   <message name="RDMConversionNotSupportedFaultMsg">
      <part name="fault" element="vim25:RDMConversionNotSupportedFault" />
   </message>
   <message name="RDMNotPreservedFaultMsg">
      <part name="fault" element="vim25:RDMNotPreservedFault" />
   </message>
   <message name="RDMNotSupportedFaultMsg">
      <part name="fault" element="vim25:RDMNotSupportedFault" />
   </message>
   <message name="RDMNotSupportedOnDatastoreFaultMsg">
      <part name="fault" element="vim25:RDMNotSupportedOnDatastoreFault" />
   </message>
   <message name="RDMPointsToInaccessibleDiskFaultMsg">
      <part name="fault" element="vim25:RDMPointsToInaccessibleDiskFault" />
   </message>
   <message name="RawDiskNotSupportedFaultMsg">
      <part name="fault" element="vim25:RawDiskNotSupportedFault" />
   </message>
   <message name="ReadOnlyDisksWithLegacyDestinationFaultMsg">
      <part name="fault" element="vim25:ReadOnlyDisksWithLegacyDestinationFault" />
   </message>
   <message name="RebootRequiredFaultMsg">
      <part name="fault" element="vim25:RebootRequiredFault" />
   </message>
   <message name="RecordReplayDisabledFaultMsg">
      <part name="fault" element="vim25:RecordReplayDisabledFault" />
   </message>
   <message name="RemoteDeviceNotSupportedFaultMsg">
      <part name="fault" element="vim25:RemoteDeviceNotSupportedFault" />
   </message>
   <message name="RemoveFailedFaultMsg">
      <part name="fault" element="vim25:RemoveFailedFault" />
   </message>
   <message name="ResourceInUseFaultMsg">
      <part name="fault" element="vim25:ResourceInUseFault" />
   </message>
   <message name="ResourceNotAvailableFaultMsg">
      <part name="fault" element="vim25:ResourceNotAvailableFault" />
   </message>
   <message name="RestrictedVersionFaultMsg">
      <part name="fault" element="vim25:RestrictedVersionFault" />
   </message>
   <message name="RuleViolationFaultMsg">
      <part name="fault" element="vim25:RuleViolationFault" />
   </message>
   <message name="SSLDisabledFaultFaultMsg">
      <part name="fault" element="vim25:SSLDisabledFaultFault" />
   </message>
   <message name="SSLVerifyFaultFaultMsg">
      <part name="fault" element="vim25:SSLVerifyFaultFault" />
   </message>
   <message name="SSPIChallengeFaultMsg">
      <part name="fault" element="vim25:SSPIChallengeFault" />
   </message>
   <message name="SecondaryVmAlreadyDisabledFaultMsg">
      <part name="fault" element="vim25:SecondaryVmAlreadyDisabledFault" />
   </message>
   <message name="SecondaryVmAlreadyEnabledFaultMsg">
      <part name="fault" element="vim25:SecondaryVmAlreadyEnabledFault" />
   </message>
   <message name="SecondaryVmAlreadyRegisteredFaultMsg">
      <part name="fault" element="vim25:SecondaryVmAlreadyRegisteredFault" />
   </message>
   <message name="SecondaryVmNotRegisteredFaultMsg">
      <part name="fault" element="vim25:SecondaryVmNotRegisteredFault" />
   </message>
   <message name="SharedBusControllerNotSupportedFaultMsg">
      <part name="fault" element="vim25:SharedBusControllerNotSupportedFault" />
   </message>
   <message name="SnapshotCloneNotSupportedFaultMsg">
      <part name="fault" element="vim25:SnapshotCloneNotSupportedFault" />
   </message>
   <message name="SnapshotCopyNotSupportedFaultMsg">
      <part name="fault" element="vim25:SnapshotCopyNotSupportedFault" />
   </message>
   <message name="SnapshotDisabledFaultMsg">
      <part name="fault" element="vim25:SnapshotDisabledFault" />
   </message>
   <message name="SnapshotFaultFaultMsg">
      <part name="fault" element="vim25:SnapshotFaultFault" />
   </message>
   <message name="SnapshotIncompatibleDeviceInVmFaultMsg">
      <part name="fault" element="vim25:SnapshotIncompatibleDeviceInVmFault" />
   </message>
   <message name="SnapshotLockedFaultMsg">
      <part name="fault" element="vim25:SnapshotLockedFault" />
   </message>
   <message name="SnapshotMoveFromNonHomeNotSupportedFaultMsg">
      <part name="fault" element="vim25:SnapshotMoveFromNonHomeNotSupportedFault" />
   </message>
   <message name="SnapshotMoveNotSupportedFaultMsg">
      <part name="fault" element="vim25:SnapshotMoveNotSupportedFault" />
   </message>
   <message name="SnapshotMoveToNonHomeNotSupportedFaultMsg">
      <part name="fault" element="vim25:SnapshotMoveToNonHomeNotSupportedFault" />
   </message>
   <message name="SnapshotNoChangeFaultMsg">
      <part name="fault" element="vim25:SnapshotNoChangeFault" />
   </message>
   <message name="SnapshotRevertIssueFaultMsg">
      <part name="fault" element="vim25:SnapshotRevertIssueFault" />
   </message>
   <message name="StorageVMotionNotSupportedFaultMsg">
      <part name="fault" element="vim25:StorageVMotionNotSupportedFault" />
   </message>
   <message name="SuspendedRelocateNotSupportedFaultMsg">
      <part name="fault" element="vim25:SuspendedRelocateNotSupportedFault" />
   </message>
   <message name="SwapDatastoreNotWritableOnHostFaultMsg">
      <part name="fault" element="vim25:SwapDatastoreNotWritableOnHostFault" />
   </message>
   <message name="SwapDatastoreUnsetFaultMsg">
      <part name="fault" element="vim25:SwapDatastoreUnsetFault" />
   </message>
   <message name="SwapPlacementOverrideNotSupportedFaultMsg">
      <part name="fault" element="vim25:SwapPlacementOverrideNotSupportedFault" />
   </message>
   <message name="SwitchNotInUpgradeModeFaultMsg">
      <part name="fault" element="vim25:SwitchNotInUpgradeModeFault" />
   </message>
   <message name="TaskInProgressFaultMsg">
      <part name="fault" element="vim25:TaskInProgressFault" />
   </message>
   <message name="TimedoutFaultMsg">
      <part name="fault" element="vim25:TimedoutFault" />
   </message>
   <message name="TooManyConsecutiveOverridesFaultMsg">
      <part name="fault" element="vim25:TooManyConsecutiveOverridesFault" />
   </message>
   <message name="TooManyDevicesFaultMsg">
      <part name="fault" element="vim25:TooManyDevicesFault" />
   </message>
   <message name="TooManyDisksOnLegacyHostFaultMsg">
      <part name="fault" element="vim25:TooManyDisksOnLegacyHostFault" />
   </message>
   <message name="TooManyHostsFaultMsg">
      <part name="fault" element="vim25:TooManyHostsFault" />
   </message>
   <message name="TooManySnapshotLevelsFaultMsg">
      <part name="fault" element="vim25:TooManySnapshotLevelsFault" />
   </message>
   <message name="ToolsAlreadyUpgradedFaultMsg">
      <part name="fault" element="vim25:ToolsAlreadyUpgradedFault" />
   </message>
   <message name="ToolsAutoUpgradeNotSupportedFaultMsg">
      <part name="fault" element="vim25:ToolsAutoUpgradeNotSupportedFault" />
   </message>
   <message name="ToolsImageNotAvailableFaultMsg">
      <part name="fault" element="vim25:ToolsImageNotAvailableFault" />
   </message>
   <message name="ToolsImageSignatureCheckFailedFaultMsg">
      <part name="fault" element="vim25:ToolsImageSignatureCheckFailedFault" />
   </message>
   <message name="ToolsInstallationInProgressFaultMsg">
      <part name="fault" element="vim25:ToolsInstallationInProgressFault" />
   </message>
   <message name="ToolsUnavailableFaultMsg">
      <part name="fault" element="vim25:ToolsUnavailableFault" />
   </message>
   <message name="ToolsUpgradeCancelledFaultMsg">
      <part name="fault" element="vim25:ToolsUpgradeCancelledFault" />
   </message>
   <message name="UncommittedUndoableDiskFaultMsg">
      <part name="fault" element="vim25:UncommittedUndoableDiskFault" />
   </message>
   <message name="UnconfiguredPropertyValueFaultMsg">
      <part name="fault" element="vim25:UnconfiguredPropertyValueFault" />
   </message>
   <message name="UncustomizableGuestFaultMsg">
      <part name="fault" element="vim25:UncustomizableGuestFault" />
   </message>
   <message name="UnexpectedCustomizationFaultFaultMsg">
      <part name="fault" element="vim25:UnexpectedCustomizationFaultFault" />
   </message>
   <message name="UnrecognizedHostFaultMsg">
      <part name="fault" element="vim25:UnrecognizedHostFault" />
   </message>
   <message name="UnsharedSwapVMotionNotSupportedFaultMsg">
      <part name="fault" element="vim25:UnsharedSwapVMotionNotSupportedFault" />
   </message>
   <message name="UnsupportedDatastoreFaultMsg">
      <part name="fault" element="vim25:UnsupportedDatastoreFault" />
   </message>
   <message name="UnsupportedGuestFaultMsg">
      <part name="fault" element="vim25:UnsupportedGuestFault" />
   </message>
   <message name="UnsupportedVimApiVersionFaultMsg">
      <part name="fault" element="vim25:UnsupportedVimApiVersionFault" />
   </message>
   <message name="UnsupportedVmxLocationFaultMsg">
      <part name="fault" element="vim25:UnsupportedVmxLocationFault" />
   </message>
   <message name="UnusedVirtualDiskBlocksNotScrubbedFaultMsg">
      <part name="fault" element="vim25:UnusedVirtualDiskBlocksNotScrubbedFault" />
   </message>
   <message name="UserNotFoundFaultMsg">
      <part name="fault" element="vim25:UserNotFoundFault" />
   </message>
   <message name="VAppConfigFaultFaultMsg">
      <part name="fault" element="vim25:VAppConfigFaultFault" />
   </message>
   <message name="VAppNotRunningFaultMsg">
      <part name="fault" element="vim25:VAppNotRunningFault" />
   </message>
   <message name="VAppPropertyFaultFaultMsg">
      <part name="fault" element="vim25:VAppPropertyFaultFault" />
   </message>
   <message name="VAppTaskInProgressFaultMsg">
      <part name="fault" element="vim25:VAppTaskInProgressFault" />
   </message>
   <message name="VMINotSupportedFaultMsg">
      <part name="fault" element="vim25:VMINotSupportedFault" />
   </message>
   <message name="VMOnConflictDVPortFaultMsg">
      <part name="fault" element="vim25:VMOnConflictDVPortFault" />
   </message>
   <message name="VMOnVirtualIntranetFaultMsg">
      <part name="fault" element="vim25:VMOnVirtualIntranetFault" />
   </message>
   <message name="VMotionInterfaceIssueFaultMsg">
      <part name="fault" element="vim25:VMotionInterfaceIssueFault" />
   </message>
   <message name="VMotionLinkCapacityLowFaultMsg">
      <part name="fault" element="vim25:VMotionLinkCapacityLowFault" />
   </message>
   <message name="VMotionLinkDownFaultMsg">
      <part name="fault" element="vim25:VMotionLinkDownFault" />
   </message>
   <message name="VMotionNotConfiguredFaultMsg">
      <part name="fault" element="vim25:VMotionNotConfiguredFault" />
   </message>
   <message name="VMotionNotLicensedFaultMsg">
      <part name="fault" element="vim25:VMotionNotLicensedFault" />
   </message>
   <message name="VMotionNotSupportedFaultMsg">
      <part name="fault" element="vim25:VMotionNotSupportedFault" />
   </message>
   <message name="VMotionProtocolIncompatibleFaultMsg">
      <part name="fault" element="vim25:VMotionProtocolIncompatibleFault" />
   </message>
   <message name="VimFaultFaultMsg">
      <part name="fault" element="vim25:VimFaultFault" />
   </message>
   <message name="VirtualDiskBlocksNotFullyProvisionedFaultMsg">
      <part name="fault" element="vim25:VirtualDiskBlocksNotFullyProvisionedFault" />
   </message>
   <message name="VirtualEthernetCardNotSupportedFaultMsg">
      <part name="fault" element="vim25:VirtualEthernetCardNotSupportedFault" />
   </message>
   <message name="VirtualHardwareCompatibilityIssueFaultMsg">
      <part name="fault" element="vim25:VirtualHardwareCompatibilityIssueFault" />
   </message>
   <message name="VirtualHardwareVersionNotSupportedFaultMsg">
      <part name="fault" element="vim25:VirtualHardwareVersionNotSupportedFault" />
   </message>
   <message name="VmAlreadyExistsInDatacenterFaultMsg">
      <part name="fault" element="vim25:VmAlreadyExistsInDatacenterFault" />
   </message>
   <message name="VmConfigFaultFaultMsg">
      <part name="fault" element="vim25:VmConfigFaultFault" />
   </message>
   <message name="VmConfigIncompatibleForFaultToleranceFaultMsg">
      <part name="fault" element="vim25:VmConfigIncompatibleForFaultToleranceFault" />
   </message>
   <message name="VmConfigIncompatibleForRecordReplayFaultMsg">
      <part name="fault" element="vim25:VmConfigIncompatibleForRecordReplayFault" />
   </message>
   <message name="VmFaultToleranceConfigIssueFaultMsg">
      <part name="fault" element="vim25:VmFaultToleranceConfigIssueFault" />
   </message>
   <message name="VmFaultToleranceInvalidFileBackingFaultMsg">
      <part name="fault" element="vim25:VmFaultToleranceInvalidFileBackingFault" />
   </message>
   <message name="VmFaultToleranceIssueFaultMsg">
      <part name="fault" element="vim25:VmFaultToleranceIssueFault" />
   </message>
   <message name="VmFaultToleranceOpIssuesListFaultMsg">
      <part name="fault" element="vim25:VmFaultToleranceOpIssuesListFault" />
   </message>
   <message name="VmLimitLicenseFaultMsg">
      <part name="fault" element="vim25:VmLimitLicenseFault" />
   </message>
   <message name="VmPowerOnDisabledFaultMsg">
      <part name="fault" element="vim25:VmPowerOnDisabledFault" />
   </message>
   <message name="VmToolsUpgradeFaultFaultMsg">
      <part name="fault" element="vim25:VmToolsUpgradeFaultFault" />
   </message>
   <message name="VmValidateMaxDeviceFaultMsg">
      <part name="fault" element="vim25:VmValidateMaxDeviceFault" />
   </message>
   <message name="VmWwnConflictFaultMsg">
      <part name="fault" element="vim25:VmWwnConflictFault" />
   </message>
   <message name="VmfsAlreadyMountedFaultMsg">
      <part name="fault" element="vim25:VmfsAlreadyMountedFault" />
   </message>
   <message name="VmfsAmbiguousMountFaultMsg">
      <part name="fault" element="vim25:VmfsAmbiguousMountFault" />
   </message>
   <message name="VmfsMountFaultFaultMsg">
      <part name="fault" element="vim25:VmfsMountFaultFault" />
   </message>
   <message name="VmotionInterfaceNotEnabledFaultMsg">
      <part name="fault" element="vim25:VmotionInterfaceNotEnabledFault" />
   </message>
   <message name="VolumeEditorErrorFaultMsg">
      <part name="fault" element="vim25:VolumeEditorErrorFault" />
   </message>
   <message name="WakeOnLanNotSupportedFaultMsg">
      <part name="fault" element="vim25:WakeOnLanNotSupportedFault" />
   </message>
   <message name="WakeOnLanNotSupportedByVmotionNICFaultMsg">
      <part name="fault" element="vim25:WakeOnLanNotSupportedByVmotionNICFault" />
   </message>
   <message name="WillModifyConfigCpuRequirementsFaultMsg">
      <part name="fault" element="vim25:WillModifyConfigCpuRequirementsFault" />
   </message>
   <message name="ReconfigureAutostartRequestMsg">
      <part name="parameters" element="vim25:ReconfigureAutostart" />
   </message>
   <message name="ReconfigureAutostartResponseMsg">
      <part name="parameters" element="vim25:ReconfigureAutostartResponse" />
   </message>
   <message name="AutoStartPowerOnRequestMsg">
      <part name="parameters" element="vim25:AutoStartPowerOn" />
   </message>
   <message name="AutoStartPowerOnResponseMsg">
      <part name="parameters" element="vim25:AutoStartPowerOnResponse" />
   </message>
   <message name="AutoStartPowerOffRequestMsg">
      <part name="parameters" element="vim25:AutoStartPowerOff" />
   </message>
   <message name="AutoStartPowerOffResponseMsg">
      <part name="parameters" element="vim25:AutoStartPowerOffResponse" />
   </message>
   <message name="QueryBootDevicesRequestMsg">
      <part name="parameters" element="vim25:QueryBootDevices" />
   </message>
   <message name="QueryBootDevicesResponseMsg">
      <part name="parameters" element="vim25:QueryBootDevicesResponse" />
   </message>
   <message name="UpdateBootDeviceRequestMsg">
      <part name="parameters" element="vim25:UpdateBootDevice" />
   </message>
   <message name="UpdateBootDeviceResponseMsg">
      <part name="parameters" element="vim25:UpdateBootDeviceResponse" />
   </message>
   <message name="EnableHyperThreadingRequestMsg">
      <part name="parameters" element="vim25:EnableHyperThreading" />
   </message>
   <message name="EnableHyperThreadingResponseMsg">
      <part name="parameters" element="vim25:EnableHyperThreadingResponse" />
   </message>
   <message name="DisableHyperThreadingRequestMsg">
      <part name="parameters" element="vim25:DisableHyperThreading" />
   </message>
   <message name="DisableHyperThreadingResponseMsg">
      <part name="parameters" element="vim25:DisableHyperThreadingResponse" />
   </message>
   <message name="SearchDatastore_TaskRequestMsg">
      <part name="parameters" element="vim25:SearchDatastore_Task" />
   </message>
   <message name="SearchDatastore_TaskResponseMsg">
      <part name="parameters" element="vim25:SearchDatastore_TaskResponse" />
   </message>
   <message name="SearchDatastoreSubFolders_TaskRequestMsg">
      <part name="parameters" element="vim25:SearchDatastoreSubFolders_Task" />
   </message>
   <message name="SearchDatastoreSubFolders_TaskResponseMsg">
      <part name="parameters" element="vim25:SearchDatastoreSubFolders_TaskResponse" />
   </message>
   <message name="DeleteFileRequestMsg">
      <part name="parameters" element="vim25:DeleteFile" />
   </message>
   <message name="DeleteFileResponseMsg">
      <part name="parameters" element="vim25:DeleteFileResponse" />
   </message>
   <message name="UpdateLocalSwapDatastoreRequestMsg">
      <part name="parameters" element="vim25:UpdateLocalSwapDatastore" />
   </message>
   <message name="UpdateLocalSwapDatastoreResponseMsg">
      <part name="parameters" element="vim25:UpdateLocalSwapDatastoreResponse" />
   </message>
   <message name="QueryAvailableDisksForVmfsRequestMsg">
      <part name="parameters" element="vim25:QueryAvailableDisksForVmfs" />
   </message>
   <message name="QueryAvailableDisksForVmfsResponseMsg">
      <part name="parameters" element="vim25:QueryAvailableDisksForVmfsResponse" />
   </message>
   <message name="QueryVmfsDatastoreCreateOptionsRequestMsg">
      <part name="parameters" element="vim25:QueryVmfsDatastoreCreateOptions" />
   </message>
   <message name="QueryVmfsDatastoreCreateOptionsResponseMsg">
      <part name="parameters" element="vim25:QueryVmfsDatastoreCreateOptionsResponse" />
   </message>
   <message name="CreateVmfsDatastoreRequestMsg">
      <part name="parameters" element="vim25:CreateVmfsDatastore" />
   </message>
   <message name="CreateVmfsDatastoreResponseMsg">
      <part name="parameters" element="vim25:CreateVmfsDatastoreResponse" />
   </message>
   <message name="QueryVmfsDatastoreExtendOptionsRequestMsg">
      <part name="parameters" element="vim25:QueryVmfsDatastoreExtendOptions" />
   </message>
   <message name="QueryVmfsDatastoreExtendOptionsResponseMsg">
      <part name="parameters" element="vim25:QueryVmfsDatastoreExtendOptionsResponse" />
   </message>
   <message name="QueryVmfsDatastoreExpandOptionsRequestMsg">
      <part name="parameters" element="vim25:QueryVmfsDatastoreExpandOptions" />
   </message>
   <message name="QueryVmfsDatastoreExpandOptionsResponseMsg">
      <part name="parameters" element="vim25:QueryVmfsDatastoreExpandOptionsResponse" />
   </message>
   <message name="ExtendVmfsDatastoreRequestMsg">
      <part name="parameters" element="vim25:ExtendVmfsDatastore" />
   </message>
   <message name="ExtendVmfsDatastoreResponseMsg">
      <part name="parameters" element="vim25:ExtendVmfsDatastoreResponse" />
   </message>
   <message name="ExpandVmfsDatastoreRequestMsg">
      <part name="parameters" element="vim25:ExpandVmfsDatastore" />
   </message>
   <message name="ExpandVmfsDatastoreResponseMsg">
      <part name="parameters" element="vim25:ExpandVmfsDatastoreResponse" />
   </message>
   <message name="CreateNasDatastoreRequestMsg">
      <part name="parameters" element="vim25:CreateNasDatastore" />
   </message>
   <message name="CreateNasDatastoreResponseMsg">
      <part name="parameters" element="vim25:CreateNasDatastoreResponse" />
   </message>
   <message name="CreateLocalDatastoreRequestMsg">
      <part name="parameters" element="vim25:CreateLocalDatastore" />
   </message>
   <message name="CreateLocalDatastoreResponseMsg">
      <part name="parameters" element="vim25:CreateLocalDatastoreResponse" />
   </message>
   <message name="RemoveDatastoreRequestMsg">
      <part name="parameters" element="vim25:RemoveDatastore" />
   </message>
   <message name="RemoveDatastoreResponseMsg">
      <part name="parameters" element="vim25:RemoveDatastoreResponse" />
   </message>
   <message name="ConfigureDatastorePrincipalRequestMsg">
      <part name="parameters" element="vim25:ConfigureDatastorePrincipal" />
   </message>
   <message name="ConfigureDatastorePrincipalResponseMsg">
      <part name="parameters" element="vim25:ConfigureDatastorePrincipalResponse" />
   </message>
   <message name="QueryUnresolvedVmfsVolumesRequestMsg">
      <part name="parameters" element="vim25:QueryUnresolvedVmfsVolumes" />
   </message>
   <message name="QueryUnresolvedVmfsVolumesResponseMsg">
      <part name="parameters" element="vim25:QueryUnresolvedVmfsVolumesResponse" />
   </message>
   <message name="ResignatureUnresolvedVmfsVolume_TaskRequestMsg">
      <part name="parameters" element="vim25:ResignatureUnresolvedVmfsVolume_Task" />
   </message>
   <message name="ResignatureUnresolvedVmfsVolume_TaskResponseMsg">
      <part name="parameters" element="vim25:ResignatureUnresolvedVmfsVolume_TaskResponse" />
   </message>
   <message name="UpdateDateTimeConfigRequestMsg">
      <part name="parameters" element="vim25:UpdateDateTimeConfig" />
   </message>
   <message name="UpdateDateTimeConfigResponseMsg">
      <part name="parameters" element="vim25:UpdateDateTimeConfigResponse" />
   </message>
   <message name="QueryAvailableTimeZonesRequestMsg">
      <part name="parameters" element="vim25:QueryAvailableTimeZones" />
   </message>
   <message name="QueryAvailableTimeZonesResponseMsg">
      <part name="parameters" element="vim25:QueryAvailableTimeZonesResponse" />
   </message>
   <message name="QueryDateTimeRequestMsg">
      <part name="parameters" element="vim25:QueryDateTime" />
   </message>
   <message name="QueryDateTimeResponseMsg">
      <part name="parameters" element="vim25:QueryDateTimeResponse" />
   </message>
   <message name="UpdateDateTimeRequestMsg">
      <part name="parameters" element="vim25:UpdateDateTime" />
   </message>
   <message name="UpdateDateTimeResponseMsg">
      <part name="parameters" element="vim25:UpdateDateTimeResponse" />
   </message>
   <message name="RefreshDateTimeSystemRequestMsg">
      <part name="parameters" element="vim25:RefreshDateTimeSystem" />
   </message>
   <message name="RefreshDateTimeSystemResponseMsg">
      <part name="parameters" element="vim25:RefreshDateTimeSystemResponse" />
   </message>
   <message name="QueryAvailablePartitionRequestMsg">
      <part name="parameters" element="vim25:QueryAvailablePartition" />
   </message>
   <message name="QueryAvailablePartitionResponseMsg">
      <part name="parameters" element="vim25:QueryAvailablePartitionResponse" />
   </message>
   <message name="SelectActivePartitionRequestMsg">
      <part name="parameters" element="vim25:SelectActivePartition" />
   </message>
   <message name="SelectActivePartitionResponseMsg">
      <part name="parameters" element="vim25:SelectActivePartitionResponse" />
   </message>
   <message name="QueryPartitionCreateOptionsRequestMsg">
      <part name="parameters" element="vim25:QueryPartitionCreateOptions" />
   </message>
   <message name="QueryPartitionCreateOptionsResponseMsg">
      <part name="parameters" element="vim25:QueryPartitionCreateOptionsResponse" />
   </message>
   <message name="QueryPartitionCreateDescRequestMsg">
      <part name="parameters" element="vim25:QueryPartitionCreateDesc" />
   </message>
   <message name="QueryPartitionCreateDescResponseMsg">
      <part name="parameters" element="vim25:QueryPartitionCreateDescResponse" />
   </message>
   <message name="CreateDiagnosticPartitionRequestMsg">
      <part name="parameters" element="vim25:CreateDiagnosticPartition" />
   </message>
   <message name="CreateDiagnosticPartitionResponseMsg">
      <part name="parameters" element="vim25:CreateDiagnosticPartitionResponse" />
   </message>
   <message name="UpdateDefaultPolicyRequestMsg">
      <part name="parameters" element="vim25:UpdateDefaultPolicy" />
   </message>
   <message name="UpdateDefaultPolicyResponseMsg">
      <part name="parameters" element="vim25:UpdateDefaultPolicyResponse" />
   </message>
   <message name="EnableRulesetRequestMsg">
      <part name="parameters" element="vim25:EnableRuleset" />
   </message>
   <message name="EnableRulesetResponseMsg">
      <part name="parameters" element="vim25:EnableRulesetResponse" />
   </message>
   <message name="DisableRulesetRequestMsg">
      <part name="parameters" element="vim25:DisableRuleset" />
   </message>
   <message name="DisableRulesetResponseMsg">
      <part name="parameters" element="vim25:DisableRulesetResponse" />
   </message>
   <message name="RefreshFirewallRequestMsg">
      <part name="parameters" element="vim25:RefreshFirewall" />
   </message>
   <message name="RefreshFirewallResponseMsg">
      <part name="parameters" element="vim25:RefreshFirewallResponse" />
   </message>
   <message name="ResetFirmwareToFactoryDefaultsRequestMsg">
      <part name="parameters" element="vim25:ResetFirmwareToFactoryDefaults" />
   </message>
   <message name="ResetFirmwareToFactoryDefaultsResponseMsg">
      <part name="parameters" element="vim25:ResetFirmwareToFactoryDefaultsResponse" />
   </message>
   <message name="BackupFirmwareConfigurationRequestMsg">
      <part name="parameters" element="vim25:BackupFirmwareConfiguration" />
   </message>
   <message name="BackupFirmwareConfigurationResponseMsg">
      <part name="parameters" element="vim25:BackupFirmwareConfigurationResponse" />
   </message>
   <message name="QueryFirmwareConfigUploadURLRequestMsg">
      <part name="parameters" element="vim25:QueryFirmwareConfigUploadURL" />
   </message>
   <message name="QueryFirmwareConfigUploadURLResponseMsg">
      <part name="parameters" element="vim25:QueryFirmwareConfigUploadURLResponse" />
   </message>
   <message name="RestoreFirmwareConfigurationRequestMsg">
      <part name="parameters" element="vim25:RestoreFirmwareConfiguration" />
   </message>
   <message name="RestoreFirmwareConfigurationResponseMsg">
      <part name="parameters" element="vim25:RestoreFirmwareConfigurationResponse" />
   </message>
   <message name="RefreshHealthStatusSystemRequestMsg">
      <part name="parameters" element="vim25:RefreshHealthStatusSystem" />
   </message>
   <message name="RefreshHealthStatusSystemResponseMsg">
      <part name="parameters" element="vim25:RefreshHealthStatusSystemResponse" />
   </message>
   <message name="ResetSystemHealthInfoRequestMsg">
      <part name="parameters" element="vim25:ResetSystemHealthInfo" />
   </message>
   <message name="ResetSystemHealthInfoResponseMsg">
      <part name="parameters" element="vim25:ResetSystemHealthInfoResponse" />
   </message>
   <message name="QueryModulesRequestMsg">
      <part name="parameters" element="vim25:QueryModules" />
   </message>
   <message name="QueryModulesResponseMsg">
      <part name="parameters" element="vim25:QueryModulesResponse" />
   </message>
   <message name="UpdateModuleOptionStringRequestMsg">
      <part name="parameters" element="vim25:UpdateModuleOptionString" />
   </message>
   <message name="UpdateModuleOptionStringResponseMsg">
      <part name="parameters" element="vim25:UpdateModuleOptionStringResponse" />
   </message>
   <message name="QueryConfiguredModuleOptionStringRequestMsg">
      <part name="parameters" element="vim25:QueryConfiguredModuleOptionString" />
   </message>
   <message name="QueryConfiguredModuleOptionStringResponseMsg">
      <part name="parameters" element="vim25:QueryConfiguredModuleOptionStringResponse" />
   </message>
   <message name="CreateUserRequestMsg">
      <part name="parameters" element="vim25:CreateUser" />
   </message>
   <message name="CreateUserResponseMsg">
      <part name="parameters" element="vim25:CreateUserResponse" />
   </message>
   <message name="UpdateUserRequestMsg">
      <part name="parameters" element="vim25:UpdateUser" />
   </message>
   <message name="UpdateUserResponseMsg">
      <part name="parameters" element="vim25:UpdateUserResponse" />
   </message>
   <message name="CreateGroupRequestMsg">
      <part name="parameters" element="vim25:CreateGroup" />
   </message>
   <message name="CreateGroupResponseMsg">
      <part name="parameters" element="vim25:CreateGroupResponse" />
   </message>
   <message name="RemoveUserRequestMsg">
      <part name="parameters" element="vim25:RemoveUser" />
   </message>
   <message name="RemoveUserResponseMsg">
      <part name="parameters" element="vim25:RemoveUserResponse" />
   </message>
   <message name="RemoveGroupRequestMsg">
      <part name="parameters" element="vim25:RemoveGroup" />
   </message>
   <message name="RemoveGroupResponseMsg">
      <part name="parameters" element="vim25:RemoveGroupResponse" />
   </message>
   <message name="AssignUserToGroupRequestMsg">
      <part name="parameters" element="vim25:AssignUserToGroup" />
   </message>
   <message name="AssignUserToGroupResponseMsg">
      <part name="parameters" element="vim25:AssignUserToGroupResponse" />
   </message>
   <message name="UnassignUserFromGroupRequestMsg">
      <part name="parameters" element="vim25:UnassignUserFromGroup" />
   </message>
   <message name="UnassignUserFromGroupResponseMsg">
      <part name="parameters" element="vim25:UnassignUserFromGroupResponse" />
   </message>
   <message name="ReconfigureServiceConsoleReservationRequestMsg">
      <part name="parameters" element="vim25:ReconfigureServiceConsoleReservation" />
   </message>
   <message name="ReconfigureServiceConsoleReservationResponseMsg">
      <part name="parameters" element="vim25:ReconfigureServiceConsoleReservationResponse" />
   </message>
   <message name="ReconfigureVirtualMachineReservationRequestMsg">
      <part name="parameters" element="vim25:ReconfigureVirtualMachineReservation" />
   </message>
   <message name="ReconfigureVirtualMachineReservationResponseMsg">
      <part name="parameters" element="vim25:ReconfigureVirtualMachineReservationResponse" />
   </message>
   <message name="UpdateNetworkConfigRequestMsg">
      <part name="parameters" element="vim25:UpdateNetworkConfig" />
   </message>
   <message name="UpdateNetworkConfigResponseMsg">
      <part name="parameters" element="vim25:UpdateNetworkConfigResponse" />
   </message>
   <message name="UpdateDnsConfigRequestMsg">
      <part name="parameters" element="vim25:UpdateDnsConfig" />
   </message>
   <message name="UpdateDnsConfigResponseMsg">
      <part name="parameters" element="vim25:UpdateDnsConfigResponse" />
   </message>
   <message name="UpdateIpRouteConfigRequestMsg">
      <part name="parameters" element="vim25:UpdateIpRouteConfig" />
   </message>
   <message name="UpdateIpRouteConfigResponseMsg">
      <part name="parameters" element="vim25:UpdateIpRouteConfigResponse" />
   </message>
   <message name="UpdateConsoleIpRouteConfigRequestMsg">
      <part name="parameters" element="vim25:UpdateConsoleIpRouteConfig" />
   </message>
   <message name="UpdateConsoleIpRouteConfigResponseMsg">
      <part name="parameters" element="vim25:UpdateConsoleIpRouteConfigResponse" />
   </message>
   <message name="UpdateIpRouteTableConfigRequestMsg">
      <part name="parameters" element="vim25:UpdateIpRouteTableConfig" />
   </message>
   <message name="UpdateIpRouteTableConfigResponseMsg">
      <part name="parameters" element="vim25:UpdateIpRouteTableConfigResponse" />
   </message>
   <message name="AddVirtualSwitchRequestMsg">
      <part name="parameters" element="vim25:AddVirtualSwitch" />
   </message>
   <message name="AddVirtualSwitchResponseMsg">
      <part name="parameters" element="vim25:AddVirtualSwitchResponse" />
   </message>
   <message name="RemoveVirtualSwitchRequestMsg">
      <part name="parameters" element="vim25:RemoveVirtualSwitch" />
   </message>
   <message name="RemoveVirtualSwitchResponseMsg">
      <part name="parameters" element="vim25:RemoveVirtualSwitchResponse" />
   </message>
   <message name="UpdateVirtualSwitchRequestMsg">
      <part name="parameters" element="vim25:UpdateVirtualSwitch" />
   </message>
   <message name="UpdateVirtualSwitchResponseMsg">
      <part name="parameters" element="vim25:UpdateVirtualSwitchResponse" />
   </message>
   <message name="AddPortGroupRequestMsg">
      <part name="parameters" element="vim25:AddPortGroup" />
   </message>
   <message name="AddPortGroupResponseMsg">
      <part name="parameters" element="vim25:AddPortGroupResponse" />
   </message>
   <message name="RemovePortGroupRequestMsg">
      <part name="parameters" element="vim25:RemovePortGroup" />
   </message>
   <message name="RemovePortGroupResponseMsg">
      <part name="parameters" element="vim25:RemovePortGroupResponse" />
   </message>
   <message name="UpdatePortGroupRequestMsg">
      <part name="parameters" element="vim25:UpdatePortGroup" />
   </message>
   <message name="UpdatePortGroupResponseMsg">
      <part name="parameters" element="vim25:UpdatePortGroupResponse" />
   </message>
   <message name="UpdatePhysicalNicLinkSpeedRequestMsg">
      <part name="parameters" element="vim25:UpdatePhysicalNicLinkSpeed" />
   </message>
   <message name="UpdatePhysicalNicLinkSpeedResponseMsg">
      <part name="parameters" element="vim25:UpdatePhysicalNicLinkSpeedResponse" />
   </message>
   <message name="QueryNetworkHintRequestMsg">
      <part name="parameters" element="vim25:QueryNetworkHint" />
   </message>
   <message name="QueryNetworkHintResponseMsg">
      <part name="parameters" element="vim25:QueryNetworkHintResponse" />
   </message>
   <message name="AddVirtualNicRequestMsg">
      <part name="parameters" element="vim25:AddVirtualNic" />
   </message>
   <message name="AddVirtualNicResponseMsg">
      <part name="parameters" element="vim25:AddVirtualNicResponse" />
   </message>
   <message name="RemoveVirtualNicRequestMsg">
      <part name="parameters" element="vim25:RemoveVirtualNic" />
   </message>
   <message name="RemoveVirtualNicResponseMsg">
      <part name="parameters" element="vim25:RemoveVirtualNicResponse" />
   </message>
   <message name="UpdateVirtualNicRequestMsg">
      <part name="parameters" element="vim25:UpdateVirtualNic" />
   </message>
   <message name="UpdateVirtualNicResponseMsg">
      <part name="parameters" element="vim25:UpdateVirtualNicResponse" />
   </message>
   <message name="AddServiceConsoleVirtualNicRequestMsg">
      <part name="parameters" element="vim25:AddServiceConsoleVirtualNic" />
   </message>
   <message name="AddServiceConsoleVirtualNicResponseMsg">
      <part name="parameters" element="vim25:AddServiceConsoleVirtualNicResponse" />
   </message>
   <message name="RemoveServiceConsoleVirtualNicRequestMsg">
      <part name="parameters" element="vim25:RemoveServiceConsoleVirtualNic" />
   </message>
   <message name="RemoveServiceConsoleVirtualNicResponseMsg">
      <part name="parameters" element="vim25:RemoveServiceConsoleVirtualNicResponse" />
   </message>
   <message name="UpdateServiceConsoleVirtualNicRequestMsg">
      <part name="parameters" element="vim25:UpdateServiceConsoleVirtualNic" />
   </message>
   <message name="UpdateServiceConsoleVirtualNicResponseMsg">
      <part name="parameters" element="vim25:UpdateServiceConsoleVirtualNicResponse" />
   </message>
   <message name="RestartServiceConsoleVirtualNicRequestMsg">
      <part name="parameters" element="vim25:RestartServiceConsoleVirtualNic" />
   </message>
   <message name="RestartServiceConsoleVirtualNicResponseMsg">
      <part name="parameters" element="vim25:RestartServiceConsoleVirtualNicResponse" />
   </message>
   <message name="RefreshNetworkSystemRequestMsg">
      <part name="parameters" element="vim25:RefreshNetworkSystem" />
   </message>
   <message name="RefreshNetworkSystemResponseMsg">
      <part name="parameters" element="vim25:RefreshNetworkSystemResponse" />
   </message>
   <message name="CheckHostPatch_TaskRequestMsg">
      <part name="parameters" element="vim25:CheckHostPatch_Task" />
   </message>
   <message name="CheckHostPatch_TaskResponseMsg">
      <part name="parameters" element="vim25:CheckHostPatch_TaskResponse" />
   </message>
   <message name="ScanHostPatch_TaskRequestMsg">
      <part name="parameters" element="vim25:ScanHostPatch_Task" />
   </message>
   <message name="ScanHostPatch_TaskResponseMsg">
      <part name="parameters" element="vim25:ScanHostPatch_TaskResponse" />
   </message>
   <message name="ScanHostPatchV2_TaskRequestMsg">
      <part name="parameters" element="vim25:ScanHostPatchV2_Task" />
   </message>
   <message name="ScanHostPatchV2_TaskResponseMsg">
      <part name="parameters" element="vim25:ScanHostPatchV2_TaskResponse" />
   </message>
   <message name="StageHostPatch_TaskRequestMsg">
      <part name="parameters" element="vim25:StageHostPatch_Task" />
   </message>
   <message name="StageHostPatch_TaskResponseMsg">
      <part name="parameters" element="vim25:StageHostPatch_TaskResponse" />
   </message>
   <message name="InstallHostPatch_TaskRequestMsg">
      <part name="parameters" element="vim25:InstallHostPatch_Task" />
   </message>
   <message name="InstallHostPatch_TaskResponseMsg">
      <part name="parameters" element="vim25:InstallHostPatch_TaskResponse" />
   </message>
   <message name="InstallHostPatchV2_TaskRequestMsg">
      <part name="parameters" element="vim25:InstallHostPatchV2_Task" />
   </message>
   <message name="InstallHostPatchV2_TaskResponseMsg">
      <part name="parameters" element="vim25:InstallHostPatchV2_TaskResponse" />
   </message>
   <message name="UninstallHostPatch_TaskRequestMsg">
      <part name="parameters" element="vim25:UninstallHostPatch_Task" />
   </message>
   <message name="UninstallHostPatch_TaskResponseMsg">
      <part name="parameters" element="vim25:UninstallHostPatch_TaskResponse" />
   </message>
   <message name="QueryHostPatch_TaskRequestMsg">
      <part name="parameters" element="vim25:QueryHostPatch_Task" />
   </message>
   <message name="QueryHostPatch_TaskResponseMsg">
      <part name="parameters" element="vim25:QueryHostPatch_TaskResponse" />
   </message>
   <message name="RefreshRequestMsg">
      <part name="parameters" element="vim25:Refresh" />
   </message>
   <message name="RefreshResponseMsg">
      <part name="parameters" element="vim25:RefreshResponse" />
   </message>
   <message name="UpdatePassthruConfigRequestMsg">
      <part name="parameters" element="vim25:UpdatePassthruConfig" />
   </message>
   <message name="UpdatePassthruConfigResponseMsg">
      <part name="parameters" element="vim25:UpdatePassthruConfigResponse" />
   </message>
   <message name="UpdateServicePolicyRequestMsg">
      <part name="parameters" element="vim25:UpdateServicePolicy" />
   </message>
   <message name="UpdateServicePolicyResponseMsg">
      <part name="parameters" element="vim25:UpdateServicePolicyResponse" />
   </message>
   <message name="StartServiceRequestMsg">
      <part name="parameters" element="vim25:StartService" />
   </message>
   <message name="StartServiceResponseMsg">
      <part name="parameters" element="vim25:StartServiceResponse" />
   </message>
   <message name="StopServiceRequestMsg">
      <part name="parameters" element="vim25:StopService" />
   </message>
   <message name="StopServiceResponseMsg">
      <part name="parameters" element="vim25:StopServiceResponse" />
   </message>
   <message name="RestartServiceRequestMsg">
      <part name="parameters" element="vim25:RestartService" />
   </message>
   <message name="RestartServiceResponseMsg">
      <part name="parameters" element="vim25:RestartServiceResponse" />
   </message>
   <message name="UninstallServiceRequestMsg">
      <part name="parameters" element="vim25:UninstallService" />
   </message>
   <message name="UninstallServiceResponseMsg">
      <part name="parameters" element="vim25:UninstallServiceResponse" />
   </message>
   <message name="RefreshServicesRequestMsg">
      <part name="parameters" element="vim25:RefreshServices" />
   </message>
   <message name="RefreshServicesResponseMsg">
      <part name="parameters" element="vim25:RefreshServicesResponse" />
   </message>
   <message name="ReconfigureSnmpAgentRequestMsg">
      <part name="parameters" element="vim25:ReconfigureSnmpAgent" />
   </message>
   <message name="ReconfigureSnmpAgentResponseMsg">
      <part name="parameters" element="vim25:ReconfigureSnmpAgentResponse" />
   </message>
   <message name="SendTestNotificationRequestMsg">
      <part name="parameters" element="vim25:SendTestNotification" />
   </message>
   <message name="SendTestNotificationResponseMsg">
      <part name="parameters" element="vim25:SendTestNotificationResponse" />
   </message>
   <message name="RetrieveDiskPartitionInfoRequestMsg">
      <part name="parameters" element="vim25:RetrieveDiskPartitionInfo" />
   </message>
   <message name="RetrieveDiskPartitionInfoResponseMsg">
      <part name="parameters" element="vim25:RetrieveDiskPartitionInfoResponse" />
   </message>
   <message name="ComputeDiskPartitionInfoRequestMsg">
      <part name="parameters" element="vim25:ComputeDiskPartitionInfo" />
   </message>
   <message name="ComputeDiskPartitionInfoResponseMsg">
      <part name="parameters" element="vim25:ComputeDiskPartitionInfoResponse" />
   </message>
   <message name="ComputeDiskPartitionInfoForResizeRequestMsg">
      <part name="parameters" element="vim25:ComputeDiskPartitionInfoForResize" />
   </message>
   <message name="ComputeDiskPartitionInfoForResizeResponseMsg">
      <part name="parameters" element="vim25:ComputeDiskPartitionInfoForResizeResponse" />
   </message>
   <message name="UpdateDiskPartitionsRequestMsg">
      <part name="parameters" element="vim25:UpdateDiskPartitions" />
   </message>
   <message name="UpdateDiskPartitionsResponseMsg">
      <part name="parameters" element="vim25:UpdateDiskPartitionsResponse" />
   </message>
   <message name="FormatVmfsRequestMsg">
      <part name="parameters" element="vim25:FormatVmfs" />
   </message>
   <message name="FormatVmfsResponseMsg">
      <part name="parameters" element="vim25:FormatVmfsResponse" />
   </message>
   <message name="RescanVmfsRequestMsg">
      <part name="parameters" element="vim25:RescanVmfs" />
   </message>
   <message name="RescanVmfsResponseMsg">
      <part name="parameters" element="vim25:RescanVmfsResponse" />
   </message>
   <message name="AttachVmfsExtentRequestMsg">
      <part name="parameters" element="vim25:AttachVmfsExtent" />
   </message>
   <message name="AttachVmfsExtentResponseMsg">
      <part name="parameters" element="vim25:AttachVmfsExtentResponse" />
   </message>
   <message name="ExpandVmfsExtentRequestMsg">
      <part name="parameters" element="vim25:ExpandVmfsExtent" />
   </message>
   <message name="ExpandVmfsExtentResponseMsg">
      <part name="parameters" element="vim25:ExpandVmfsExtentResponse" />
   </message>
   <message name="UpgradeVmfsRequestMsg">
      <part name="parameters" element="vim25:UpgradeVmfs" />
   </message>
   <message name="UpgradeVmfsResponseMsg">
      <part name="parameters" element="vim25:UpgradeVmfsResponse" />
   </message>
   <message name="UpgradeVmLayoutRequestMsg">
      <part name="parameters" element="vim25:UpgradeVmLayout" />
   </message>
   <message name="UpgradeVmLayoutResponseMsg">
      <part name="parameters" element="vim25:UpgradeVmLayoutResponse" />
   </message>
   <message name="QueryUnresolvedVmfsVolumeRequestMsg">
      <part name="parameters" element="vim25:QueryUnresolvedVmfsVolume" />
   </message>
   <message name="QueryUnresolvedVmfsVolumeResponseMsg">
      <part name="parameters" element="vim25:QueryUnresolvedVmfsVolumeResponse" />
   </message>
   <message name="ResolveMultipleUnresolvedVmfsVolumesRequestMsg">
      <part name="parameters" element="vim25:ResolveMultipleUnresolvedVmfsVolumes" />
   </message>
   <message name="ResolveMultipleUnresolvedVmfsVolumesResponseMsg">
      <part name="parameters" element="vim25:ResolveMultipleUnresolvedVmfsVolumesResponse" />
   </message>
   <message name="UnmountForceMountedVmfsVolumeRequestMsg">
      <part name="parameters" element="vim25:UnmountForceMountedVmfsVolume" />
   </message>
   <message name="UnmountForceMountedVmfsVolumeResponseMsg">
      <part name="parameters" element="vim25:UnmountForceMountedVmfsVolumeResponse" />
   </message>
   <message name="RescanHbaRequestMsg">
      <part name="parameters" element="vim25:RescanHba" />
   </message>
   <message name="RescanHbaResponseMsg">
      <part name="parameters" element="vim25:RescanHbaResponse" />
   </message>
   <message name="RescanAllHbaRequestMsg">
      <part name="parameters" element="vim25:RescanAllHba" />
   </message>
   <message name="RescanAllHbaResponseMsg">
      <part name="parameters" element="vim25:RescanAllHbaResponse" />
   </message>
   <message name="UpdateSoftwareInternetScsiEnabledRequestMsg">
      <part name="parameters" element="vim25:UpdateSoftwareInternetScsiEnabled" />
   </message>
   <message name="UpdateSoftwareInternetScsiEnabledResponseMsg">
      <part name="parameters" element="vim25:UpdateSoftwareInternetScsiEnabledResponse" />
   </message>
   <message name="UpdateInternetScsiDiscoveryPropertiesRequestMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiDiscoveryProperties" />
   </message>
   <message name="UpdateInternetScsiDiscoveryPropertiesResponseMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiDiscoveryPropertiesResponse" />
   </message>
   <message name="UpdateInternetScsiAuthenticationPropertiesRequestMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiAuthenticationProperties" />
   </message>
   <message name="UpdateInternetScsiAuthenticationPropertiesResponseMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiAuthenticationPropertiesResponse" />
   </message>
   <message name="UpdateInternetScsiDigestPropertiesRequestMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiDigestProperties" />
   </message>
   <message name="UpdateInternetScsiDigestPropertiesResponseMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiDigestPropertiesResponse" />
   </message>
   <message name="UpdateInternetScsiAdvancedOptionsRequestMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiAdvancedOptions" />
   </message>
   <message name="UpdateInternetScsiAdvancedOptionsResponseMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiAdvancedOptionsResponse" />
   </message>
   <message name="UpdateInternetScsiIPPropertiesRequestMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiIPProperties" />
   </message>
   <message name="UpdateInternetScsiIPPropertiesResponseMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiIPPropertiesResponse" />
   </message>
   <message name="UpdateInternetScsiNameRequestMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiName" />
   </message>
   <message name="UpdateInternetScsiNameResponseMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiNameResponse" />
   </message>
   <message name="UpdateInternetScsiAliasRequestMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiAlias" />
   </message>
   <message name="UpdateInternetScsiAliasResponseMsg">
      <part name="parameters" element="vim25:UpdateInternetScsiAliasResponse" />
   </message>
   <message name="AddInternetScsiSendTargetsRequestMsg">
      <part name="parameters" element="vim25:AddInternetScsiSendTargets" />
   </message>
   <message name="AddInternetScsiSendTargetsResponseMsg">
      <part name="parameters" element="vim25:AddInternetScsiSendTargetsResponse" />
   </message>
   <message name="RemoveInternetScsiSendTargetsRequestMsg">
      <part name="parameters" element="vim25:RemoveInternetScsiSendTargets" />
   </message>
   <message name="RemoveInternetScsiSendTargetsResponseMsg">
      <part name="parameters" element="vim25:RemoveInternetScsiSendTargetsResponse" />
   </message>
   <message name="AddInternetScsiStaticTargetsRequestMsg">
      <part name="parameters" element="vim25:AddInternetScsiStaticTargets" />
   </message>
   <message name="AddInternetScsiStaticTargetsResponseMsg">
      <part name="parameters" element="vim25:AddInternetScsiStaticTargetsResponse" />
   </message>
   <message name="RemoveInternetScsiStaticTargetsRequestMsg">
      <part name="parameters" element="vim25:RemoveInternetScsiStaticTargets" />
   </message>
   <message name="RemoveInternetScsiStaticTargetsResponseMsg">
      <part name="parameters" element="vim25:RemoveInternetScsiStaticTargetsResponse" />
   </message>
   <message name="EnableMultipathPathRequestMsg">
      <part name="parameters" element="vim25:EnableMultipathPath" />
   </message>
   <message name="EnableMultipathPathResponseMsg">
      <part name="parameters" element="vim25:EnableMultipathPathResponse" />
   </message>
   <message name="DisableMultipathPathRequestMsg">
      <part name="parameters" element="vim25:DisableMultipathPath" />
   </message>
   <message name="DisableMultipathPathResponseMsg">
      <part name="parameters" element="vim25:DisableMultipathPathResponse" />
   </message>
   <message name="SetMultipathLunPolicyRequestMsg">
      <part name="parameters" element="vim25:SetMultipathLunPolicy" />
   </message>
   <message name="SetMultipathLunPolicyResponseMsg">
      <part name="parameters" element="vim25:SetMultipathLunPolicyResponse" />
   </message>
   <message name="QueryPathSelectionPolicyOptionsRequestMsg">
      <part name="parameters" element="vim25:QueryPathSelectionPolicyOptions" />
   </message>
   <message name="QueryPathSelectionPolicyOptionsResponseMsg">
      <part name="parameters" element="vim25:QueryPathSelectionPolicyOptionsResponse" />
   </message>
   <message name="QueryStorageArrayTypePolicyOptionsRequestMsg">
      <part name="parameters" element="vim25:QueryStorageArrayTypePolicyOptions" />
   </message>
   <message name="QueryStorageArrayTypePolicyOptionsResponseMsg">
      <part name="parameters" element="vim25:QueryStorageArrayTypePolicyOptionsResponse" />
   </message>
   <message name="UpdateScsiLunDisplayNameRequestMsg">
      <part name="parameters" element="vim25:UpdateScsiLunDisplayName" />
   </message>
   <message name="UpdateScsiLunDisplayNameResponseMsg">
      <part name="parameters" element="vim25:UpdateScsiLunDisplayNameResponse" />
   </message>
   <message name="RefreshStorageSystemRequestMsg">
      <part name="parameters" element="vim25:RefreshStorageSystem" />
   </message>
   <message name="RefreshStorageSystemResponseMsg">
      <part name="parameters" element="vim25:RefreshStorageSystemResponse" />
   </message>
   <message name="UpdateIpConfigRequestMsg">
      <part name="parameters" element="vim25:UpdateIpConfig" />
   </message>
   <message name="UpdateIpConfigResponseMsg">
      <part name="parameters" element="vim25:UpdateIpConfigResponse" />
   </message>
   <message name="SelectVnicRequestMsg">
      <part name="parameters" element="vim25:SelectVnic" />
   </message>
   <message name="SelectVnicResponseMsg">
      <part name="parameters" element="vim25:SelectVnicResponse" />
   </message>
   <message name="DeselectVnicRequestMsg">
      <part name="parameters" element="vim25:DeselectVnic" />
   </message>
   <message name="DeselectVnicResponseMsg">
      <part name="parameters" element="vim25:DeselectVnicResponse" />
   </message>
   <message name="QueryNetConfigRequestMsg">
      <part name="parameters" element="vim25:QueryNetConfig" />
   </message>
   <message name="QueryNetConfigResponseMsg">
      <part name="parameters" element="vim25:QueryNetConfigResponse" />
   </message>
   <message name="SelectVnicForNicTypeRequestMsg">
      <part name="parameters" element="vim25:SelectVnicForNicType" />
   </message>
   <message name="SelectVnicForNicTypeResponseMsg">
      <part name="parameters" element="vim25:SelectVnicForNicTypeResponse" />
   </message>
   <message name="DeselectVnicForNicTypeRequestMsg">
      <part name="parameters" element="vim25:DeselectVnicForNicType" />
   </message>
   <message name="DeselectVnicForNicTypeResponseMsg">
      <part name="parameters" element="vim25:DeselectVnicForNicTypeResponse" />
   </message>
   <message name="QueryOptionsRequestMsg">
      <part name="parameters" element="vim25:QueryOptions" />
   </message>
   <message name="QueryOptionsResponseMsg">
      <part name="parameters" element="vim25:QueryOptionsResponse" />
   </message>
   <message name="UpdateOptionsRequestMsg">
      <part name="parameters" element="vim25:UpdateOptions" />
   </message>
   <message name="UpdateOptionsResponseMsg">
      <part name="parameters" element="vim25:UpdateOptionsResponse" />
   </message>
   <message name="CheckCompliance_TaskRequestMsg">
      <part name="parameters" element="vim25:CheckCompliance_Task" />
   </message>
   <message name="CheckCompliance_TaskResponseMsg">
      <part name="parameters" element="vim25:CheckCompliance_TaskResponse" />
   </message>
   <message name="QueryComplianceStatusRequestMsg">
      <part name="parameters" element="vim25:QueryComplianceStatus" />
   </message>
   <message name="QueryComplianceStatusResponseMsg">
      <part name="parameters" element="vim25:QueryComplianceStatusResponse" />
   </message>
   <message name="ClearComplianceStatusRequestMsg">
      <part name="parameters" element="vim25:ClearComplianceStatus" />
   </message>
   <message name="ClearComplianceStatusResponseMsg">
      <part name="parameters" element="vim25:ClearComplianceStatusResponse" />
   </message>
   <message name="QueryExpressionMetadataRequestMsg">
      <part name="parameters" element="vim25:QueryExpressionMetadata" />
   </message>
   <message name="QueryExpressionMetadataResponseMsg">
      <part name="parameters" element="vim25:QueryExpressionMetadataResponse" />
   </message>
   <message name="DestroyProfileRequestMsg">
      <part name="parameters" element="vim25:DestroyProfile" />
   </message>
   <message name="DestroyProfileResponseMsg">
      <part name="parameters" element="vim25:DestroyProfileResponse" />
   </message>
   <message name="AssociateProfileRequestMsg">
      <part name="parameters" element="vim25:AssociateProfile" />
   </message>
   <message name="AssociateProfileResponseMsg">
      <part name="parameters" element="vim25:AssociateProfileResponse" />
   </message>
   <message name="DissociateProfileRequestMsg">
      <part name="parameters" element="vim25:DissociateProfile" />
   </message>
   <message name="DissociateProfileResponseMsg">
      <part name="parameters" element="vim25:DissociateProfileResponse" />
   </message>
   <message name="CheckProfileCompliance_TaskRequestMsg">
      <part name="parameters" element="vim25:CheckProfileCompliance_Task" />
   </message>
   <message name="CheckProfileCompliance_TaskResponseMsg">
      <part name="parameters" element="vim25:CheckProfileCompliance_TaskResponse" />
   </message>
   <message name="ExportProfileRequestMsg">
      <part name="parameters" element="vim25:ExportProfile" />
   </message>
   <message name="ExportProfileResponseMsg">
      <part name="parameters" element="vim25:ExportProfileResponse" />
   </message>
   <message name="CreateProfileRequestMsg">
      <part name="parameters" element="vim25:CreateProfile" />
   </message>
   <message name="CreateProfileResponseMsg">
      <part name="parameters" element="vim25:CreateProfileResponse" />
   </message>
   <message name="QueryPolicyMetadataRequestMsg">
      <part name="parameters" element="vim25:QueryPolicyMetadata" />
   </message>
   <message name="QueryPolicyMetadataResponseMsg">
      <part name="parameters" element="vim25:QueryPolicyMetadataResponse" />
   </message>
   <message name="FindAssociatedProfileRequestMsg">
      <part name="parameters" element="vim25:FindAssociatedProfile" />
   </message>
   <message name="FindAssociatedProfileResponseMsg">
      <part name="parameters" element="vim25:FindAssociatedProfileResponse" />
   </message>
   <message name="UpdateClusterProfileRequestMsg">
      <part name="parameters" element="vim25:UpdateClusterProfile" />
   </message>
   <message name="UpdateClusterProfileResponseMsg">
      <part name="parameters" element="vim25:UpdateClusterProfileResponse" />
   </message>
   <message name="UpdateReferenceHostRequestMsg">
      <part name="parameters" element="vim25:UpdateReferenceHost" />
   </message>
   <message name="UpdateReferenceHostResponseMsg">
      <part name="parameters" element="vim25:UpdateReferenceHostResponse" />
   </message>
   <message name="UpdateHostProfileRequestMsg">
      <part name="parameters" element="vim25:UpdateHostProfile" />
   </message>
   <message name="UpdateHostProfileResponseMsg">
      <part name="parameters" element="vim25:UpdateHostProfileResponse" />
   </message>
   <message name="ExecuteHostProfileRequestMsg">
      <part name="parameters" element="vim25:ExecuteHostProfile" />
   </message>
   <message name="ExecuteHostProfileResponseMsg">
      <part name="parameters" element="vim25:ExecuteHostProfileResponse" />
   </message>
   <message name="ApplyHostConfig_TaskRequestMsg">
      <part name="parameters" element="vim25:ApplyHostConfig_Task" />
   </message>
   <message name="ApplyHostConfig_TaskResponseMsg">
      <part name="parameters" element="vim25:ApplyHostConfig_TaskResponse" />
   </message>
   <message name="GenerateConfigTaskListRequestMsg">
      <part name="parameters" element="vim25:GenerateConfigTaskList" />
   </message>
   <message name="GenerateConfigTaskListResponseMsg">
      <part name="parameters" element="vim25:GenerateConfigTaskListResponse" />
   </message>
   <message name="QueryHostProfileMetadataRequestMsg">
      <part name="parameters" element="vim25:QueryHostProfileMetadata" />
   </message>
   <message name="QueryHostProfileMetadataResponseMsg">
      <part name="parameters" element="vim25:QueryHostProfileMetadataResponse" />
   </message>
   <message name="CreateDefaultProfileRequestMsg">
      <part name="parameters" element="vim25:CreateDefaultProfile" />
   </message>
   <message name="CreateDefaultProfileResponseMsg">
      <part name="parameters" element="vim25:CreateDefaultProfileResponse" />
   </message>
   <message name="RemoveScheduledTaskRequestMsg">
      <part name="parameters" element="vim25:RemoveScheduledTask" />
   </message>
   <message name="RemoveScheduledTaskResponseMsg">
      <part name="parameters" element="vim25:RemoveScheduledTaskResponse" />
   </message>
   <message name="ReconfigureScheduledTaskRequestMsg">
      <part name="parameters" element="vim25:ReconfigureScheduledTask" />
   </message>
   <message name="ReconfigureScheduledTaskResponseMsg">
      <part name="parameters" element="vim25:ReconfigureScheduledTaskResponse" />
   </message>
   <message name="RunScheduledTaskRequestMsg">
      <part name="parameters" element="vim25:RunScheduledTask" />
   </message>
   <message name="RunScheduledTaskResponseMsg">
      <part name="parameters" element="vim25:RunScheduledTaskResponse" />
   </message>
   <message name="CreateScheduledTaskRequestMsg">
      <part name="parameters" element="vim25:CreateScheduledTask" />
   </message>
   <message name="CreateScheduledTaskResponseMsg">
      <part name="parameters" element="vim25:CreateScheduledTaskResponse" />
   </message>
   <message name="RetrieveEntityScheduledTaskRequestMsg">
      <part name="parameters" element="vim25:RetrieveEntityScheduledTask" />
   </message>
   <message name="RetrieveEntityScheduledTaskResponseMsg">
      <part name="parameters" element="vim25:RetrieveEntityScheduledTaskResponse" />
   </message>
   <message name="CreateObjectScheduledTaskRequestMsg">
      <part name="parameters" element="vim25:CreateObjectScheduledTask" />
   </message>
   <message name="CreateObjectScheduledTaskResponseMsg">
      <part name="parameters" element="vim25:CreateObjectScheduledTaskResponse" />
   </message>
   <message name="RetrieveObjectScheduledTaskRequestMsg">
      <part name="parameters" element="vim25:RetrieveObjectScheduledTask" />
   </message>
   <message name="RetrieveObjectScheduledTaskResponseMsg">
      <part name="parameters" element="vim25:RetrieveObjectScheduledTaskResponse" />
   </message>
   <message name="OpenInventoryViewFolderRequestMsg">
      <part name="parameters" element="vim25:OpenInventoryViewFolder" />
   </message>
   <message name="OpenInventoryViewFolderResponseMsg">
      <part name="parameters" element="vim25:OpenInventoryViewFolderResponse" />
   </message>
   <message name="CloseInventoryViewFolderRequestMsg">
      <part name="parameters" element="vim25:CloseInventoryViewFolder" />
   </message>
   <message name="CloseInventoryViewFolderResponseMsg">
      <part name="parameters" element="vim25:CloseInventoryViewFolderResponse" />
   </message>
   <message name="ModifyListViewRequestMsg">
      <part name="parameters" element="vim25:ModifyListView" />
   </message>
   <message name="ModifyListViewResponseMsg">
      <part name="parameters" element="vim25:ModifyListViewResponse" />
   </message>
   <message name="ResetListViewRequestMsg">
      <part name="parameters" element="vim25:ResetListView" />
   </message>
   <message name="ResetListViewResponseMsg">
      <part name="parameters" element="vim25:ResetListViewResponse" />
   </message>
   <message name="ResetListViewFromViewRequestMsg">
      <part name="parameters" element="vim25:ResetListViewFromView" />
   </message>
   <message name="ResetListViewFromViewResponseMsg">
      <part name="parameters" element="vim25:ResetListViewFromViewResponse" />
   </message>
   <message name="DestroyViewRequestMsg">
      <part name="parameters" element="vim25:DestroyView" />
   </message>
   <message name="DestroyViewResponseMsg">
      <part name="parameters" element="vim25:DestroyViewResponse" />
   </message>
   <message name="CreateInventoryViewRequestMsg">
      <part name="parameters" element="vim25:CreateInventoryView" />
   </message>
   <message name="CreateInventoryViewResponseMsg">
      <part name="parameters" element="vim25:CreateInventoryViewResponse" />
   </message>
   <message name="CreateContainerViewRequestMsg">
      <part name="parameters" element="vim25:CreateContainerView" />
   </message>
   <message name="CreateContainerViewResponseMsg">
      <part name="parameters" element="vim25:CreateContainerViewResponse" />
   </message>
   <message name="CreateListViewRequestMsg">
      <part name="parameters" element="vim25:CreateListView" />
   </message>
   <message name="CreateListViewResponseMsg">
      <part name="parameters" element="vim25:CreateListViewResponse" />
   </message>
   <message name="CreateListViewFromViewRequestMsg">
      <part name="parameters" element="vim25:CreateListViewFromView" />
   </message>
   <message name="CreateListViewFromViewResponseMsg">
      <part name="parameters" element="vim25:CreateListViewFromViewResponse" />
   </message>
   <message name="RevertToSnapshot_TaskRequestMsg">
      <part name="parameters" element="vim25:RevertToSnapshot_Task" />
   </message>
   <message name="RevertToSnapshot_TaskResponseMsg">
      <part name="parameters" element="vim25:RevertToSnapshot_TaskResponse" />
   </message>
   <message name="RemoveSnapshot_TaskRequestMsg">
      <part name="parameters" element="vim25:RemoveSnapshot_Task" />
   </message>
   <message name="RemoveSnapshot_TaskResponseMsg">
      <part name="parameters" element="vim25:RemoveSnapshot_TaskResponse" />
   </message>
   <message name="RenameSnapshotRequestMsg">
      <part name="parameters" element="vim25:RenameSnapshot" />
   </message>
   <message name="RenameSnapshotResponseMsg">
      <part name="parameters" element="vim25:RenameSnapshotResponse" />
   </message>
   <message name="CheckCompatibility_TaskRequestMsg">
      <part name="parameters" element="vim25:CheckCompatibility_Task" />
   </message>
   <message name="CheckCompatibility_TaskResponseMsg">
      <part name="parameters" element="vim25:CheckCompatibility_TaskResponse" />
   </message>
   <message name="QueryVMotionCompatibilityEx_TaskRequestMsg">
      <part name="parameters" element="vim25:QueryVMotionCompatibilityEx_Task" />
   </message>
   <message name="QueryVMotionCompatibilityEx_TaskResponseMsg">
      <part name="parameters" element="vim25:QueryVMotionCompatibilityEx_TaskResponse" />
   </message>
   <message name="CheckMigrate_TaskRequestMsg">
      <part name="parameters" element="vim25:CheckMigrate_Task" />
   </message>
   <message name="CheckMigrate_TaskResponseMsg">
      <part name="parameters" element="vim25:CheckMigrate_TaskResponse" />
   </message>
   <message name="CheckRelocate_TaskRequestMsg">
      <part name="parameters" element="vim25:CheckRelocate_Task" />
   </message>
   <message name="CheckRelocate_TaskResponseMsg">
      <part name="parameters" element="vim25:CheckRelocate_TaskResponse" />
   </message>
   <portType name="VimPortType">
      <operation name="DestroyPropertyFilter">
         <input message="vim25:DestroyPropertyFilterRequestMsg" />
         <output message="vim25:DestroyPropertyFilterResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateFilter">
         <input message="vim25:CreateFilterRequestMsg" />
         <output message="vim25:CreateFilterResponseMsg" />
         <fault name="InvalidPropertyFault" message="vim25:InvalidPropertyFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveProperties">
         <input message="vim25:RetrievePropertiesRequestMsg" />
         <output message="vim25:RetrievePropertiesResponseMsg" />
         <fault name="InvalidPropertyFault" message="vim25:InvalidPropertyFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckForUpdates">
         <input message="vim25:CheckForUpdatesRequestMsg" />
         <output message="vim25:CheckForUpdatesResponseMsg" />
         <fault name="InvalidCollectorVersionFault" message="vim25:InvalidCollectorVersionFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="WaitForUpdates">
         <input message="vim25:WaitForUpdatesRequestMsg" />
         <output message="vim25:WaitForUpdatesResponseMsg" />
         <fault name="InvalidCollectorVersionFault" message="vim25:InvalidCollectorVersionFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CancelWaitForUpdates">
         <input message="vim25:CancelWaitForUpdatesRequestMsg" />
         <output message="vim25:CancelWaitForUpdatesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddAuthorizationRole">
         <input message="vim25:AddAuthorizationRoleRequestMsg" />
         <output message="vim25:AddAuthorizationRoleResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveAuthorizationRole">
         <input message="vim25:RemoveAuthorizationRoleRequestMsg" />
         <output message="vim25:RemoveAuthorizationRoleResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RemoveFailedFault" message="vim25:RemoveFailedFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateAuthorizationRole">
         <input message="vim25:UpdateAuthorizationRoleRequestMsg" />
         <output message="vim25:UpdateAuthorizationRoleResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MergePermissions">
         <input message="vim25:MergePermissionsRequestMsg" />
         <output message="vim25:MergePermissionsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="AuthMinimumAdminPermissionFault" message="vim25:AuthMinimumAdminPermissionFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveRolePermissions">
         <input message="vim25:RetrieveRolePermissionsRequestMsg" />
         <output message="vim25:RetrieveRolePermissionsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveEntityPermissions">
         <input message="vim25:RetrieveEntityPermissionsRequestMsg" />
         <output message="vim25:RetrieveEntityPermissionsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveAllPermissions">
         <input message="vim25:RetrieveAllPermissionsRequestMsg" />
         <output message="vim25:RetrieveAllPermissionsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetEntityPermissions">
         <input message="vim25:SetEntityPermissionsRequestMsg" />
         <output message="vim25:SetEntityPermissionsResponseMsg" />
         <fault name="UserNotFoundFault" message="vim25:UserNotFoundFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="AuthMinimumAdminPermissionFault" message="vim25:AuthMinimumAdminPermissionFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetEntityPermissions">
         <input message="vim25:ResetEntityPermissionsRequestMsg" />
         <output message="vim25:ResetEntityPermissionsResponseMsg" />
         <fault name="UserNotFoundFault" message="vim25:UserNotFoundFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="AuthMinimumAdminPermissionFault" message="vim25:AuthMinimumAdminPermissionFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveEntityPermission">
         <input message="vim25:RemoveEntityPermissionRequestMsg" />
         <output message="vim25:RemoveEntityPermissionResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="AuthMinimumAdminPermissionFault" message="vim25:AuthMinimumAdminPermissionFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureCluster_Task">
         <input message="vim25:ReconfigureCluster_TaskRequestMsg" />
         <output message="vim25:ReconfigureCluster_TaskResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ApplyRecommendation">
         <input message="vim25:ApplyRecommendationRequestMsg" />
         <output message="vim25:ApplyRecommendationResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RecommendHostsForVm">
         <input message="vim25:RecommendHostsForVmRequestMsg" />
         <output message="vim25:RecommendHostsForVmResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddHost_Task">
         <input message="vim25:AddHost_TaskRequestMsg" />
         <output message="vim25:AddHost_TaskResponseMsg" />
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="HostConnectFaultFault" message="vim25:HostConnectFaultFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveInto_Task">
         <input message="vim25:MoveInto_TaskRequestMsg" />
         <output message="vim25:MoveInto_TaskResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="TooManyHostsFault" message="vim25:TooManyHostsFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveHostInto_Task">
         <input message="vim25:MoveHostInto_TaskRequestMsg" />
         <output message="vim25:MoveHostInto_TaskResponseMsg" />
         <fault name="TooManyHostsFault" message="vim25:TooManyHostsFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshRecommendation">
         <input message="vim25:RefreshRecommendationRequestMsg" />
         <output message="vim25:RefreshRecommendationResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveDasAdvancedRuntimeInfo">
         <input message="vim25:RetrieveDasAdvancedRuntimeInfoRequestMsg" />
         <output message="vim25:RetrieveDasAdvancedRuntimeInfoResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureComputeResource_Task">
         <input message="vim25:ReconfigureComputeResource_TaskRequestMsg" />
         <output message="vim25:ReconfigureComputeResource_TaskResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddCustomFieldDef">
         <input message="vim25:AddCustomFieldDefRequestMsg" />
         <output message="vim25:AddCustomFieldDefResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidPrivilegeFault" message="vim25:InvalidPrivilegeFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveCustomFieldDef">
         <input message="vim25:RemoveCustomFieldDefRequestMsg" />
         <output message="vim25:RemoveCustomFieldDefResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RenameCustomFieldDef">
         <input message="vim25:RenameCustomFieldDefRequestMsg" />
         <output message="vim25:RenameCustomFieldDefResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetField">
         <input message="vim25:SetFieldRequestMsg" />
         <output message="vim25:SetFieldResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DoesCustomizationSpecExist">
         <input message="vim25:DoesCustomizationSpecExistRequestMsg" />
         <output message="vim25:DoesCustomizationSpecExistResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="GetCustomizationSpec">
         <input message="vim25:GetCustomizationSpecRequestMsg" />
         <output message="vim25:GetCustomizationSpecResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateCustomizationSpec">
         <input message="vim25:CreateCustomizationSpecRequestMsg" />
         <output message="vim25:CreateCustomizationSpecResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim25:CustomizationFaultFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="OverwriteCustomizationSpec">
         <input message="vim25:OverwriteCustomizationSpecRequestMsg" />
         <output message="vim25:OverwriteCustomizationSpecResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim25:CustomizationFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DeleteCustomizationSpec">
         <input message="vim25:DeleteCustomizationSpecRequestMsg" />
         <output message="vim25:DeleteCustomizationSpecResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DuplicateCustomizationSpec">
         <input message="vim25:DuplicateCustomizationSpecRequestMsg" />
         <output message="vim25:DuplicateCustomizationSpecResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RenameCustomizationSpec">
         <input message="vim25:RenameCustomizationSpecRequestMsg" />
         <output message="vim25:RenameCustomizationSpecResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CustomizationSpecItemToXml">
         <input message="vim25:CustomizationSpecItemToXmlRequestMsg" />
         <output message="vim25:CustomizationSpecItemToXmlResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="XmlToCustomizationSpecItem">
         <input message="vim25:XmlToCustomizationSpecItemRequestMsg" />
         <output message="vim25:XmlToCustomizationSpecItemResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim25:CustomizationFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckCustomizationResources">
         <input message="vim25:CheckCustomizationResourcesRequestMsg" />
         <output message="vim25:CheckCustomizationResourcesResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim25:CustomizationFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryConnectionInfo">
         <input message="vim25:QueryConnectionInfoRequestMsg" />
         <output message="vim25:QueryConnectionInfoResponseMsg" />
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="HostConnectFaultFault" message="vim25:HostConnectFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PowerOnMultiVM_Task">
         <input message="vim25:PowerOnMultiVM_TaskRequestMsg" />
         <output message="vim25:PowerOnMultiVM_TaskResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshDatastore">
         <input message="vim25:RefreshDatastoreRequestMsg" />
         <output message="vim25:RefreshDatastoreResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshDatastoreStorageInfo">
         <input message="vim25:RefreshDatastoreStorageInfoRequestMsg" />
         <output message="vim25:RefreshDatastoreStorageInfoResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RenameDatastore">
         <input message="vim25:RenameDatastoreRequestMsg" />
         <output message="vim25:RenameDatastoreResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyDatastore">
         <input message="vim25:DestroyDatastoreRequestMsg" />
         <output message="vim25:DestroyDatastoreResponseMsg" />
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryDescriptions">
         <input message="vim25:QueryDescriptionsRequestMsg" />
         <output message="vim25:QueryDescriptionsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="BrowseDiagnosticLog">
         <input message="vim25:BrowseDiagnosticLogRequestMsg" />
         <output message="vim25:BrowseDiagnosticLogResponseMsg" />
         <fault name="CannotAccessFileFault" message="vim25:CannotAccessFileFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="GenerateLogBundles_Task">
         <input message="vim25:GenerateLogBundles_TaskRequestMsg" />
         <output message="vim25:GenerateLogBundles_TaskResponseMsg" />
         <fault name="LogBundlingFailedFault" message="vim25:LogBundlingFailedFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FetchDVPortKeys">
         <input message="vim25:FetchDVPortKeysRequestMsg" />
         <output message="vim25:FetchDVPortKeysResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FetchDVPorts">
         <input message="vim25:FetchDVPortsRequestMsg" />
         <output message="vim25:FetchDVPortsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryUsedVlanIdInDvs">
         <input message="vim25:QueryUsedVlanIdInDvsRequestMsg" />
         <output message="vim25:QueryUsedVlanIdInDvsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureDvs_Task">
         <input message="vim25:ReconfigureDvs_TaskRequestMsg" />
         <output message="vim25:ReconfigureDvs_TaskResponseMsg" />
         <fault name="DvsFaultFault" message="vim25:DvsFaultFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="LimitExceededFault" message="vim25:LimitExceededFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="ResourceNotAvailableFault" message="vim25:ResourceNotAvailableFaultMsg"/>
         <fault name="DvsNotAuthorizedFault" message="vim25:DvsNotAuthorizedFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PerformDvsProductSpecOperation_Task">
         <input message="vim25:PerformDvsProductSpecOperation_TaskRequestMsg" />
         <output message="vim25:PerformDvsProductSpecOperation_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="DvsFaultFault" message="vim25:DvsFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MergeDvs_Task">
         <input message="vim25:MergeDvs_TaskRequestMsg" />
         <output message="vim25:MergeDvs_TaskResponseMsg" />
         <fault name="DvsFaultFault" message="vim25:DvsFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="InvalidHostStateFault" message="vim25:InvalidHostStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddDVPortgroup_Task">
         <input message="vim25:AddDVPortgroup_TaskRequestMsg" />
         <output message="vim25:AddDVPortgroup_TaskResponseMsg" />
         <fault name="DvsFaultFault" message="vim25:DvsFaultFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveDVPort_Task">
         <input message="vim25:MoveDVPort_TaskRequestMsg" />
         <output message="vim25:MoveDVPort_TaskResponseMsg" />
         <fault name="DvsFaultFault" message="vim25:DvsFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateDvsCapability">
         <input message="vim25:UpdateDvsCapabilityRequestMsg" />
         <output message="vim25:UpdateDvsCapabilityResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureDVPort_Task">
         <input message="vim25:ReconfigureDVPort_TaskRequestMsg" />
         <output message="vim25:ReconfigureDVPort_TaskResponseMsg" />
         <fault name="DvsFaultFault" message="vim25:DvsFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshDVPortState">
         <input message="vim25:RefreshDVPortStateRequestMsg" />
         <output message="vim25:RefreshDVPortStateResponseMsg" />
         <fault name="DvsFaultFault" message="vim25:DvsFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RectifyDvsHost_Task">
         <input message="vim25:RectifyDvsHost_TaskRequestMsg" />
         <output message="vim25:RectifyDvsHost_TaskResponseMsg" />
         <fault name="DvsFaultFault" message="vim25:DvsFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryConfigOptionDescriptor">
         <input message="vim25:QueryConfigOptionDescriptorRequestMsg" />
         <output message="vim25:QueryConfigOptionDescriptorResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryConfigOption">
         <input message="vim25:QueryConfigOptionRequestMsg" />
         <output message="vim25:QueryConfigOptionResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryConfigTarget">
         <input message="vim25:QueryConfigTargetRequestMsg" />
         <output message="vim25:QueryConfigTargetResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryTargetCapabilities">
         <input message="vim25:QueryTargetCapabilitiesRequestMsg" />
         <output message="vim25:QueryTargetCapabilitiesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="setCustomValue">
         <input message="vim25:setCustomValueRequestMsg" />
         <output message="vim25:setCustomValueResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UnregisterExtension">
         <input message="vim25:UnregisterExtensionRequestMsg" />
         <output message="vim25:UnregisterExtensionResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindExtension">
         <input message="vim25:FindExtensionRequestMsg" />
         <output message="vim25:FindExtensionResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RegisterExtension">
         <input message="vim25:RegisterExtensionRequestMsg" />
         <output message="vim25:RegisterExtensionResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateExtension">
         <input message="vim25:UpdateExtensionRequestMsg" />
         <output message="vim25:UpdateExtensionResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="GetPublicKey">
         <input message="vim25:GetPublicKeyRequestMsg" />
         <output message="vim25:GetPublicKeyResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetPublicKey">
         <input message="vim25:SetPublicKeyRequestMsg" />
         <output message="vim25:SetPublicKeyResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetExtensionCertificate">
         <input message="vim25:SetExtensionCertificateRequestMsg" />
         <output message="vim25:SetExtensionCertificateResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="NoClientCertificateFault" message="vim25:NoClientCertificateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveDatastoreFile_Task">
         <input message="vim25:MoveDatastoreFile_TaskRequestMsg" />
         <output message="vim25:MoveDatastoreFile_TaskResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CopyDatastoreFile_Task">
         <input message="vim25:CopyDatastoreFile_TaskRequestMsg" />
         <output message="vim25:CopyDatastoreFile_TaskResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DeleteDatastoreFile_Task">
         <input message="vim25:DeleteDatastoreFile_TaskRequestMsg" />
         <output message="vim25:DeleteDatastoreFile_TaskResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MakeDirectory">
         <input message="vim25:MakeDirectoryRequestMsg" />
         <output message="vim25:MakeDirectoryResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ChangeOwner">
         <input message="vim25:ChangeOwnerRequestMsg" />
         <output message="vim25:ChangeOwnerResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="UserNotFoundFault" message="vim25:UserNotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateFolder">
         <input message="vim25:CreateFolderRequestMsg" />
         <output message="vim25:CreateFolderResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveIntoFolder_Task">
         <input message="vim25:MoveIntoFolder_TaskRequestMsg" />
         <output message="vim25:MoveIntoFolder_TaskResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidFolderFault" message="vim25:InvalidFolderFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateVM_Task">
         <input message="vim25:CreateVM_TaskRequestMsg" />
         <output message="vim25:CreateVM_TaskResponseMsg" />
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="OutOfBoundsFault" message="vim25:OutOfBoundsFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RegisterVM_Task">
         <input message="vim25:RegisterVM_TaskRequestMsg" />
         <output message="vim25:RegisterVM_TaskResponseMsg" />
         <fault name="OutOfBoundsFault" message="vim25:OutOfBoundsFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateCluster">
         <input message="vim25:CreateClusterRequestMsg" />
         <output message="vim25:CreateClusterResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateClusterEx">
         <input message="vim25:CreateClusterExRequestMsg" />
         <output message="vim25:CreateClusterExResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddStandaloneHost_Task">
         <input message="vim25:AddStandaloneHost_TaskRequestMsg" />
         <output message="vim25:AddStandaloneHost_TaskResponseMsg" />
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="HostConnectFaultFault" message="vim25:HostConnectFaultFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateDatacenter">
         <input message="vim25:CreateDatacenterRequestMsg" />
         <output message="vim25:CreateDatacenterResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UnregisterAndDestroy_Task">
         <input message="vim25:UnregisterAndDestroy_TaskRequestMsg" />
         <output message="vim25:UnregisterAndDestroy_TaskResponseMsg" />
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateDVS_Task">
         <input message="vim25:CreateDVS_TaskRequestMsg" />
         <output message="vim25:CreateDVS_TaskResponseMsg" />
         <fault name="DvsFaultFault" message="vim25:DvsFaultFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="DvsNotAuthorizedFault" message="vim25:DvsNotAuthorizedFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetCollectorPageSize">
         <input message="vim25:SetCollectorPageSizeRequestMsg" />
         <output message="vim25:SetCollectorPageSizeResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RewindCollector">
         <input message="vim25:RewindCollectorRequestMsg" />
         <output message="vim25:RewindCollectorResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetCollector">
         <input message="vim25:ResetCollectorRequestMsg" />
         <output message="vim25:ResetCollectorResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyCollector">
         <input message="vim25:DestroyCollectorRequestMsg" />
         <output message="vim25:DestroyCollectorResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryHostConnectionInfo">
         <input message="vim25:QueryHostConnectionInfoRequestMsg" />
         <output message="vim25:QueryHostConnectionInfoResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateSystemResources">
         <input message="vim25:UpdateSystemResourcesRequestMsg" />
         <output message="vim25:UpdateSystemResourcesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconnectHost_Task">
         <input message="vim25:ReconnectHost_TaskRequestMsg" />
         <output message="vim25:ReconnectHost_TaskResponseMsg" />
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="HostConnectFaultFault" message="vim25:HostConnectFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisconnectHost_Task">
         <input message="vim25:DisconnectHost_TaskRequestMsg" />
         <output message="vim25:DisconnectHost_TaskResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnterMaintenanceMode_Task">
         <input message="vim25:EnterMaintenanceMode_TaskRequestMsg" />
         <output message="vim25:EnterMaintenanceMode_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TimedoutFault" message="vim25:TimedoutFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExitMaintenanceMode_Task">
         <input message="vim25:ExitMaintenanceMode_TaskRequestMsg" />
         <output message="vim25:ExitMaintenanceMode_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TimedoutFault" message="vim25:TimedoutFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RebootHost_Task">
         <input message="vim25:RebootHost_TaskRequestMsg" />
         <output message="vim25:RebootHost_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ShutdownHost_Task">
         <input message="vim25:ShutdownHost_TaskRequestMsg" />
         <output message="vim25:ShutdownHost_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PowerDownHostToStandBy_Task">
         <input message="vim25:PowerDownHostToStandBy_TaskRequestMsg" />
         <output message="vim25:PowerDownHostToStandBy_TaskResponseMsg" />
         <fault name="HostPowerOpFailedFault" message="vim25:HostPowerOpFailedFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="NotSupportedFault" message="vim25:NotSupportedFaultMsg"/>
         <fault name="TimedoutFault" message="vim25:TimedoutFaultMsg"/>
         <fault name="RequestCanceledFault" message="vim25:RequestCanceledFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PowerUpHostFromStandBy_Task">
         <input message="vim25:PowerUpHostFromStandBy_TaskRequestMsg" />
         <output message="vim25:PowerUpHostFromStandBy_TaskResponseMsg" />
         <fault name="HostPowerOpFailedFault" message="vim25:HostPowerOpFailedFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="NotSupportedFault" message="vim25:NotSupportedFaultMsg"/>
         <fault name="TimedoutFault" message="vim25:TimedoutFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryMemoryOverhead">
         <input message="vim25:QueryMemoryOverheadRequestMsg" />
         <output message="vim25:QueryMemoryOverheadResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryMemoryOverheadEx">
         <input message="vim25:QueryMemoryOverheadExRequestMsg" />
         <output message="vim25:QueryMemoryOverheadExResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureHostForDAS_Task">
         <input message="vim25:ReconfigureHostForDAS_TaskRequestMsg" />
         <output message="vim25:ReconfigureHostForDAS_TaskResponseMsg" />
         <fault name="DasConfigFaultFault" message="vim25:DasConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateFlags">
         <input message="vim25:UpdateFlagsRequestMsg" />
         <output message="vim25:UpdateFlagsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AcquireCimServicesTicket">
         <input message="vim25:AcquireCimServicesTicketRequestMsg" />
         <output message="vim25:AcquireCimServicesTicketResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateIpmi">
         <input message="vim25:UpdateIpmiRequestMsg" />
         <output message="vim25:UpdateIpmiResponseMsg" />
         <fault name="InvalidIpmiLoginInfoFault" message="vim25:InvalidIpmiLoginInfoFaultMsg"/>
         <fault name="InvalidIpmiMacAddressFault" message="vim25:InvalidIpmiMacAddressFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="HttpNfcLeaseComplete">
         <input message="vim25:HttpNfcLeaseCompleteRequestMsg" />
         <output message="vim25:HttpNfcLeaseCompleteResponseMsg" />
         <fault name="TimedoutFault" message="vim25:TimedoutFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="HttpNfcLeaseAbort">
         <input message="vim25:HttpNfcLeaseAbortRequestMsg" />
         <output message="vim25:HttpNfcLeaseAbortResponseMsg" />
         <fault name="TimedoutFault" message="vim25:TimedoutFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="HttpNfcLeaseProgress">
         <input message="vim25:HttpNfcLeaseProgressRequestMsg" />
         <output message="vim25:HttpNfcLeaseProgressResponseMsg" />
         <fault name="TimedoutFault" message="vim25:TimedoutFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryIpPools">
         <input message="vim25:QueryIpPoolsRequestMsg" />
         <output message="vim25:QueryIpPoolsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateIpPool">
         <input message="vim25:CreateIpPoolRequestMsg" />
         <output message="vim25:CreateIpPoolResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateIpPool">
         <input message="vim25:UpdateIpPoolRequestMsg" />
         <output message="vim25:UpdateIpPoolResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyIpPool">
         <input message="vim25:DestroyIpPoolRequestMsg" />
         <output message="vim25:DestroyIpPoolResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateAssignedLicense">
         <input message="vim25:UpdateAssignedLicenseRequestMsg" />
         <output message="vim25:UpdateAssignedLicenseResponseMsg" />
         <fault name="LicenseEntityNotFoundFault" message="vim25:LicenseEntityNotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveAssignedLicense">
         <input message="vim25:RemoveAssignedLicenseRequestMsg" />
         <output message="vim25:RemoveAssignedLicenseResponseMsg" />
         <fault name="LicenseEntityNotFoundFault" message="vim25:LicenseEntityNotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryAssignedLicenses">
         <input message="vim25:QueryAssignedLicensesRequestMsg" />
         <output message="vim25:QueryAssignedLicensesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QuerySupportedFeatures">
         <input message="vim25:QuerySupportedFeaturesRequestMsg" />
         <output message="vim25:QuerySupportedFeaturesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryLicenseSourceAvailability">
         <input message="vim25:QueryLicenseSourceAvailabilityRequestMsg" />
         <output message="vim25:QueryLicenseSourceAvailabilityResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryLicenseUsage">
         <input message="vim25:QueryLicenseUsageRequestMsg" />
         <output message="vim25:QueryLicenseUsageResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetLicenseEdition">
         <input message="vim25:SetLicenseEditionRequestMsg" />
         <output message="vim25:SetLicenseEditionResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="LicenseServerUnavailableFault" message="vim25:LicenseServerUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckLicenseFeature">
         <input message="vim25:CheckLicenseFeatureRequestMsg" />
         <output message="vim25:CheckLicenseFeatureResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnableFeature">
         <input message="vim25:EnableFeatureRequestMsg" />
         <output message="vim25:EnableFeatureResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="LicenseServerUnavailableFault" message="vim25:LicenseServerUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisableFeature">
         <input message="vim25:DisableFeatureRequestMsg" />
         <output message="vim25:DisableFeatureResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="LicenseServerUnavailableFault" message="vim25:LicenseServerUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ConfigureLicenseSource">
         <input message="vim25:ConfigureLicenseSourceRequestMsg" />
         <output message="vim25:ConfigureLicenseSourceResponseMsg" />
         <fault name="CannotAccessLocalSourceFault" message="vim25:CannotAccessLocalSourceFaultMsg"/>
         <fault name="InvalidLicenseFault" message="vim25:InvalidLicenseFaultMsg"/>
         <fault name="LicenseServerUnavailableFault" message="vim25:LicenseServerUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateLicense">
         <input message="vim25:UpdateLicenseRequestMsg" />
         <output message="vim25:UpdateLicenseResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddLicense">
         <input message="vim25:AddLicenseRequestMsg" />
         <output message="vim25:AddLicenseResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveLicense">
         <input message="vim25:RemoveLicenseRequestMsg" />
         <output message="vim25:RemoveLicenseResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DecodeLicense">
         <input message="vim25:DecodeLicenseRequestMsg" />
         <output message="vim25:DecodeLicenseResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateLicenseLabel">
         <input message="vim25:UpdateLicenseLabelRequestMsg" />
         <output message="vim25:UpdateLicenseLabelResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveLicenseLabel">
         <input message="vim25:RemoveLicenseLabelRequestMsg" />
         <output message="vim25:RemoveLicenseLabelResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Reload">
         <input message="vim25:ReloadRequestMsg" />
         <output message="vim25:ReloadResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Rename_Task">
         <input message="vim25:Rename_TaskRequestMsg" />
         <output message="vim25:Rename_TaskResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Destroy_Task">
         <input message="vim25:Destroy_TaskRequestMsg" />
         <output message="vim25:Destroy_TaskResponseMsg" />
         <fault name="VimFaultFault" message="vim25:VimFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyNetwork">
         <input message="vim25:DestroyNetworkRequestMsg" />
         <output message="vim25:DestroyNetworkResponseMsg" />
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ValidateHost">
         <input message="vim25:ValidateHostRequestMsg" />
         <output message="vim25:ValidateHostResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ParseDescriptor">
         <input message="vim25:ParseDescriptorRequestMsg" />
         <output message="vim25:ParseDescriptorResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateImportSpec">
         <input message="vim25:CreateImportSpecRequestMsg" />
         <output message="vim25:CreateImportSpecResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateDescriptor">
         <input message="vim25:CreateDescriptorRequestMsg" />
         <output message="vim25:CreateDescriptorResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPerfProviderSummary">
         <input message="vim25:QueryPerfProviderSummaryRequestMsg" />
         <output message="vim25:QueryPerfProviderSummaryResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryAvailablePerfMetric">
         <input message="vim25:QueryAvailablePerfMetricRequestMsg" />
         <output message="vim25:QueryAvailablePerfMetricResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPerfCounter">
         <input message="vim25:QueryPerfCounterRequestMsg" />
         <output message="vim25:QueryPerfCounterResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPerfCounterByLevel">
         <input message="vim25:QueryPerfCounterByLevelRequestMsg" />
         <output message="vim25:QueryPerfCounterByLevelResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPerf">
         <input message="vim25:QueryPerfRequestMsg" />
         <output message="vim25:QueryPerfResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPerfComposite">
         <input message="vim25:QueryPerfCompositeRequestMsg" />
         <output message="vim25:QueryPerfCompositeResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreatePerfInterval">
         <input message="vim25:CreatePerfIntervalRequestMsg" />
         <output message="vim25:CreatePerfIntervalResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemovePerfInterval">
         <input message="vim25:RemovePerfIntervalRequestMsg" />
         <output message="vim25:RemovePerfIntervalResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdatePerfInterval">
         <input message="vim25:UpdatePerfIntervalRequestMsg" />
         <output message="vim25:UpdatePerfIntervalResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EstimateDatabaseSize">
         <input message="vim25:EstimateDatabaseSizeRequestMsg" />
         <output message="vim25:EstimateDatabaseSizeResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateConfig">
         <input message="vim25:UpdateConfigRequestMsg" />
         <output message="vim25:UpdateConfigResponseMsg" />
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveIntoResourcePool">
         <input message="vim25:MoveIntoResourcePoolRequestMsg" />
         <output message="vim25:MoveIntoResourcePoolResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateChildResourceConfiguration">
         <input message="vim25:UpdateChildResourceConfigurationRequestMsg" />
         <output message="vim25:UpdateChildResourceConfigurationResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateResourcePool">
         <input message="vim25:CreateResourcePoolRequestMsg" />
         <output message="vim25:CreateResourcePoolResponseMsg" />
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyChildren">
         <input message="vim25:DestroyChildrenRequestMsg" />
         <output message="vim25:DestroyChildrenResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateVApp">
         <input message="vim25:CreateVAppRequestMsg" />
         <output message="vim25:CreateVAppResponseMsg" />
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateChildVM_Task">
         <input message="vim25:CreateChildVM_TaskRequestMsg" />
         <output message="vim25:CreateChildVM_TaskResponseMsg" />
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="OutOfBoundsFault" message="vim25:OutOfBoundsFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RegisterChildVM_Task">
         <input message="vim25:RegisterChildVM_TaskRequestMsg" />
         <output message="vim25:RegisterChildVM_TaskResponseMsg" />
         <fault name="OutOfBoundsFault" message="vim25:OutOfBoundsFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ImportVApp">
         <input message="vim25:ImportVAppRequestMsg" />
         <output message="vim25:ImportVAppResponseMsg" />
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="OutOfBoundsFault" message="vim25:OutOfBoundsFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindByUuid">
         <input message="vim25:FindByUuidRequestMsg" />
         <output message="vim25:FindByUuidResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindByDatastorePath">
         <input message="vim25:FindByDatastorePathRequestMsg" />
         <output message="vim25:FindByDatastorePathResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindByDnsName">
         <input message="vim25:FindByDnsNameRequestMsg" />
         <output message="vim25:FindByDnsNameResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindByIp">
         <input message="vim25:FindByIpRequestMsg" />
         <output message="vim25:FindByIpResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindByInventoryPath">
         <input message="vim25:FindByInventoryPathRequestMsg" />
         <output message="vim25:FindByInventoryPathResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindChild">
         <input message="vim25:FindChildRequestMsg" />
         <output message="vim25:FindChildResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindAllByUuid">
         <input message="vim25:FindAllByUuidRequestMsg" />
         <output message="vim25:FindAllByUuidResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindAllByDnsName">
         <input message="vim25:FindAllByDnsNameRequestMsg" />
         <output message="vim25:FindAllByDnsNameResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindAllByIp">
         <input message="vim25:FindAllByIpRequestMsg" />
         <output message="vim25:FindAllByIpResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CurrentTime">
         <input message="vim25:CurrentTimeRequestMsg" />
         <output message="vim25:CurrentTimeResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveServiceContent">
         <input message="vim25:RetrieveServiceContentRequestMsg" />
         <output message="vim25:RetrieveServiceContentResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ValidateMigration">
         <input message="vim25:ValidateMigrationRequestMsg" />
         <output message="vim25:ValidateMigrationResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVMotionCompatibility">
         <input message="vim25:QueryVMotionCompatibilityRequestMsg" />
         <output message="vim25:QueryVMotionCompatibilityResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveProductComponents">
         <input message="vim25:RetrieveProductComponentsRequestMsg" />
         <output message="vim25:RetrieveProductComponentsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateServiceMessage">
         <input message="vim25:UpdateServiceMessageRequestMsg" />
         <output message="vim25:UpdateServiceMessageResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Login">
         <input message="vim25:LoginRequestMsg" />
         <output message="vim25:LoginResponseMsg" />
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="InvalidLocaleFault" message="vim25:InvalidLocaleFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="LoginBySSPI">
         <input message="vim25:LoginBySSPIRequestMsg" />
         <output message="vim25:LoginBySSPIResponseMsg" />
         <fault name="SSPIChallengeFault" message="vim25:SSPIChallengeFaultMsg"/>
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="InvalidLocaleFault" message="vim25:InvalidLocaleFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Logout">
         <input message="vim25:LogoutRequestMsg" />
         <output message="vim25:LogoutResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AcquireLocalTicket">
         <input message="vim25:AcquireLocalTicketRequestMsg" />
         <output message="vim25:AcquireLocalTicketResponseMsg" />
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="TerminateSession">
         <input message="vim25:TerminateSessionRequestMsg" />
         <output message="vim25:TerminateSessionResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetLocale">
         <input message="vim25:SetLocaleRequestMsg" />
         <output message="vim25:SetLocaleResponseMsg" />
         <fault name="InvalidLocaleFault" message="vim25:InvalidLocaleFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="LoginExtensionBySubjectName">
         <input message="vim25:LoginExtensionBySubjectNameRequestMsg" />
         <output message="vim25:LoginExtensionBySubjectNameResponseMsg" />
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="InvalidLocaleFault" message="vim25:InvalidLocaleFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="NoClientCertificateFault" message="vim25:NoClientCertificateFaultMsg"/>
         <fault name="NoSubjectNameFault" message="vim25:NoSubjectNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="LoginExtensionByCertificate">
         <input message="vim25:LoginExtensionByCertificateRequestMsg" />
         <output message="vim25:LoginExtensionByCertificateResponseMsg" />
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="InvalidLocaleFault" message="vim25:InvalidLocaleFaultMsg"/>
         <fault name="NoClientCertificateFault" message="vim25:NoClientCertificateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ImpersonateUser">
         <input message="vim25:ImpersonateUserRequestMsg" />
         <output message="vim25:ImpersonateUserResponseMsg" />
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="InvalidLocaleFault" message="vim25:InvalidLocaleFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SessionIsActive">
         <input message="vim25:SessionIsActiveRequestMsg" />
         <output message="vim25:SessionIsActiveResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AcquireCloneTicket">
         <input message="vim25:AcquireCloneTicketRequestMsg" />
         <output message="vim25:AcquireCloneTicketResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CloneSession">
         <input message="vim25:CloneSessionRequestMsg" />
         <output message="vim25:CloneSessionResponseMsg" />
         <fault name="InvalidLoginFault" message="vim25:InvalidLoginFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CancelTask">
         <input message="vim25:CancelTaskRequestMsg" />
         <output message="vim25:CancelTaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateProgress">
         <input message="vim25:UpdateProgressRequestMsg" />
         <output message="vim25:UpdateProgressResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="OutOfBoundsFault" message="vim25:OutOfBoundsFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetTaskState">
         <input message="vim25:SetTaskStateRequestMsg" />
         <output message="vim25:SetTaskStateResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetTaskDescription">
         <input message="vim25:SetTaskDescriptionRequestMsg" />
         <output message="vim25:SetTaskDescriptionResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReadNextTasks">
         <input message="vim25:ReadNextTasksRequestMsg" />
         <output message="vim25:ReadNextTasksResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReadPreviousTasks">
         <input message="vim25:ReadPreviousTasksRequestMsg" />
         <output message="vim25:ReadPreviousTasksResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateCollectorForTasks">
         <input message="vim25:CreateCollectorForTasksRequestMsg" />
         <output message="vim25:CreateCollectorForTasksResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateTask">
         <input message="vim25:CreateTaskRequestMsg" />
         <output message="vim25:CreateTaskResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveUserGroups">
         <input message="vim25:RetrieveUserGroupsRequestMsg" />
         <output message="vim25:RetrieveUserGroupsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateVAppConfig">
         <input message="vim25:UpdateVAppConfigRequestMsg" />
         <output message="vim25:UpdateVAppConfigResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CloneVApp_Task">
         <input message="vim25:CloneVApp_TaskRequestMsg" />
         <output message="vim25:CloneVApp_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="MigrationFaultFault" message="vim25:MigrationFaultFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExportVApp">
         <input message="vim25:ExportVAppRequestMsg" />
         <output message="vim25:ExportVAppResponseMsg" />
         <fault name="InvalidPowerStateFault" message="vim25:InvalidPowerStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PowerOnVApp_Task">
         <input message="vim25:PowerOnVApp_TaskRequestMsg" />
         <output message="vim25:PowerOnVApp_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="VAppConfigFaultFault" message="vim25:VAppConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PowerOffVApp_Task">
         <input message="vim25:PowerOffVApp_TaskRequestMsg" />
         <output message="vim25:PowerOffVApp_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="VAppConfigFaultFault" message="vim25:VAppConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="unregisterVApp_Task">
         <input message="vim25:unregisterVApp_TaskRequestMsg" />
         <output message="vim25:unregisterVApp_TaskResponseMsg" />
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateVirtualDisk_Task">
         <input message="vim25:CreateVirtualDisk_TaskRequestMsg" />
         <output message="vim25:CreateVirtualDisk_TaskResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DeleteVirtualDisk_Task">
         <input message="vim25:DeleteVirtualDisk_TaskRequestMsg" />
         <output message="vim25:DeleteVirtualDisk_TaskResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MoveVirtualDisk_Task">
         <input message="vim25:MoveVirtualDisk_TaskRequestMsg" />
         <output message="vim25:MoveVirtualDisk_TaskResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CopyVirtualDisk_Task">
         <input message="vim25:CopyVirtualDisk_TaskRequestMsg" />
         <output message="vim25:CopyVirtualDisk_TaskResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExtendVirtualDisk_Task">
         <input message="vim25:ExtendVirtualDisk_TaskRequestMsg" />
         <output message="vim25:ExtendVirtualDisk_TaskResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVirtualDiskFragmentation">
         <input message="vim25:QueryVirtualDiskFragmentationRequestMsg" />
         <output message="vim25:QueryVirtualDiskFragmentationResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DefragmentVirtualDisk_Task">
         <input message="vim25:DefragmentVirtualDisk_TaskRequestMsg" />
         <output message="vim25:DefragmentVirtualDisk_TaskResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ShrinkVirtualDisk_Task">
         <input message="vim25:ShrinkVirtualDisk_TaskRequestMsg" />
         <output message="vim25:ShrinkVirtualDisk_TaskResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="InflateVirtualDisk_Task">
         <input message="vim25:InflateVirtualDisk_TaskRequestMsg" />
         <output message="vim25:InflateVirtualDisk_TaskResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EagerZeroVirtualDisk_Task">
         <input message="vim25:EagerZeroVirtualDisk_TaskRequestMsg" />
         <output message="vim25:EagerZeroVirtualDisk_TaskResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ZeroFillVirtualDisk_Task">
         <input message="vim25:ZeroFillVirtualDisk_TaskRequestMsg" />
         <output message="vim25:ZeroFillVirtualDisk_TaskResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetVirtualDiskUuid">
         <input message="vim25:SetVirtualDiskUuidRequestMsg" />
         <output message="vim25:SetVirtualDiskUuidResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVirtualDiskUuid">
         <input message="vim25:QueryVirtualDiskUuidRequestMsg" />
         <output message="vim25:QueryVirtualDiskUuidResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVirtualDiskGeometry">
         <input message="vim25:QueryVirtualDiskGeometryRequestMsg" />
         <output message="vim25:QueryVirtualDiskGeometryResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshStorageInfo">
         <input message="vim25:RefreshStorageInfoRequestMsg" />
         <output message="vim25:RefreshStorageInfoResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateSnapshot_Task">
         <input message="vim25:CreateSnapshot_TaskRequestMsg" />
         <output message="vim25:CreateSnapshot_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="SnapshotFaultFault" message="vim25:SnapshotFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RevertToCurrentSnapshot_Task">
         <input message="vim25:RevertToCurrentSnapshot_TaskRequestMsg" />
         <output message="vim25:RevertToCurrentSnapshot_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="SnapshotFaultFault" message="vim25:SnapshotFaultFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveAllSnapshots_Task">
         <input message="vim25:RemoveAllSnapshots_TaskRequestMsg" />
         <output message="vim25:RemoveAllSnapshots_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="SnapshotFaultFault" message="vim25:SnapshotFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigVM_Task">
         <input message="vim25:ReconfigVM_TaskRequestMsg" />
         <output message="vim25:ReconfigVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpgradeVM_Task">
         <input message="vim25:UpgradeVM_TaskRequestMsg" />
         <output message="vim25:UpgradeVM_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="AlreadyUpgradedFault" message="vim25:AlreadyUpgradedFaultMsg"/>
         <fault name="NoDiskFoundFault" message="vim25:NoDiskFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExtractOvfEnvironment">
         <input message="vim25:ExtractOvfEnvironmentRequestMsg" />
         <output message="vim25:ExtractOvfEnvironmentResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PowerOnVM_Task">
         <input message="vim25:PowerOnVM_TaskRequestMsg" />
         <output message="vim25:PowerOnVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PowerOffVM_Task">
         <input message="vim25:PowerOffVM_TaskRequestMsg" />
         <output message="vim25:PowerOffVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SuspendVM_Task">
         <input message="vim25:SuspendVM_TaskRequestMsg" />
         <output message="vim25:SuspendVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetVM_Task">
         <input message="vim25:ResetVM_TaskRequestMsg" />
         <output message="vim25:ResetVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ShutdownGuest">
         <input message="vim25:ShutdownGuestRequestMsg" />
         <output message="vim25:ShutdownGuestResponseMsg" />
         <fault name="ToolsUnavailableFault" message="vim25:ToolsUnavailableFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RebootGuest">
         <input message="vim25:RebootGuestRequestMsg" />
         <output message="vim25:RebootGuestResponseMsg" />
         <fault name="ToolsUnavailableFault" message="vim25:ToolsUnavailableFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StandbyGuest">
         <input message="vim25:StandbyGuestRequestMsg" />
         <output message="vim25:StandbyGuestResponseMsg" />
         <fault name="ToolsUnavailableFault" message="vim25:ToolsUnavailableFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AnswerVM">
         <input message="vim25:AnswerVMRequestMsg" />
         <output message="vim25:AnswerVMResponseMsg" />
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CustomizeVM_Task">
         <input message="vim25:CustomizeVM_TaskRequestMsg" />
         <output message="vim25:CustomizeVM_TaskResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim25:CustomizationFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckCustomizationSpec">
         <input message="vim25:CheckCustomizationSpecRequestMsg" />
         <output message="vim25:CheckCustomizationSpecResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim25:CustomizationFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MigrateVM_Task">
         <input message="vim25:MigrateVM_TaskRequestMsg" />
         <output message="vim25:MigrateVM_TaskResponseMsg" />
         <fault name="MigrationFaultFault" message="vim25:MigrationFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="TimedoutFault" message="vim25:TimedoutFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RelocateVM_Task">
         <input message="vim25:RelocateVM_TaskRequestMsg" />
         <output message="vim25:RelocateVM_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="MigrationFaultFault" message="vim25:MigrationFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="TimedoutFault" message="vim25:TimedoutFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CloneVM_Task">
         <input message="vim25:CloneVM_TaskRequestMsg" />
         <output message="vim25:CloneVM_TaskResponseMsg" />
         <fault name="CustomizationFaultFault" message="vim25:CustomizationFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="MigrationFaultFault" message="vim25:MigrationFaultFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExportVm">
         <input message="vim25:ExportVmRequestMsg" />
         <output message="vim25:ExportVmResponseMsg" />
         <fault name="InvalidPowerStateFault" message="vim25:InvalidPowerStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MarkAsTemplate">
         <input message="vim25:MarkAsTemplateRequestMsg" />
         <output message="vim25:MarkAsTemplateResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MarkAsVirtualMachine">
         <input message="vim25:MarkAsVirtualMachineRequestMsg" />
         <output message="vim25:MarkAsVirtualMachineResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UnregisterVM">
         <input message="vim25:UnregisterVMRequestMsg" />
         <output message="vim25:UnregisterVMResponseMsg" />
         <fault name="InvalidPowerStateFault" message="vim25:InvalidPowerStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetGuestInformation">
         <input message="vim25:ResetGuestInformationRequestMsg" />
         <output message="vim25:ResetGuestInformationResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MountToolsInstaller">
         <input message="vim25:MountToolsInstallerRequestMsg" />
         <output message="vim25:MountToolsInstallerResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UnmountToolsInstaller">
         <input message="vim25:UnmountToolsInstallerRequestMsg" />
         <output message="vim25:UnmountToolsInstallerResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpgradeTools_Task">
         <input message="vim25:UpgradeTools_TaskRequestMsg" />
         <output message="vim25:UpgradeTools_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmToolsUpgradeFaultFault" message="vim25:VmToolsUpgradeFaultFaultMsg"/>
         <fault name="ToolsUnavailableFault" message="vim25:ToolsUnavailableFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AcquireMksTicket">
         <input message="vim25:AcquireMksTicketRequestMsg" />
         <output message="vim25:AcquireMksTicketResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetScreenResolution">
         <input message="vim25:SetScreenResolutionRequestMsg" />
         <output message="vim25:SetScreenResolutionResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="ToolsUnavailableFault" message="vim25:ToolsUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DefragmentAllDisks">
         <input message="vim25:DefragmentAllDisksRequestMsg" />
         <output message="vim25:DefragmentAllDisksResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidPowerStateFault" message="vim25:InvalidPowerStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateSecondaryVM_Task">
         <input message="vim25:CreateSecondaryVM_TaskRequestMsg" />
         <output message="vim25:CreateSecondaryVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="VmFaultToleranceIssueFault" message="vim25:VmFaultToleranceIssueFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="TurnOffFaultToleranceForVM_Task">
         <input message="vim25:TurnOffFaultToleranceForVM_TaskRequestMsg" />
         <output message="vim25:TurnOffFaultToleranceForVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmFaultToleranceIssueFault" message="vim25:VmFaultToleranceIssueFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="MakePrimaryVM_Task">
         <input message="vim25:MakePrimaryVM_TaskRequestMsg" />
         <output message="vim25:MakePrimaryVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmFaultToleranceIssueFault" message="vim25:VmFaultToleranceIssueFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="TerminateFaultTolerantVM_Task">
         <input message="vim25:TerminateFaultTolerantVM_TaskRequestMsg" />
         <output message="vim25:TerminateFaultTolerantVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmFaultToleranceIssueFault" message="vim25:VmFaultToleranceIssueFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisableSecondaryVM_Task">
         <input message="vim25:DisableSecondaryVM_TaskRequestMsg" />
         <output message="vim25:DisableSecondaryVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmFaultToleranceIssueFault" message="vim25:VmFaultToleranceIssueFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnableSecondaryVM_Task">
         <input message="vim25:EnableSecondaryVM_TaskRequestMsg" />
         <output message="vim25:EnableSecondaryVM_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="VmFaultToleranceIssueFault" message="vim25:VmFaultToleranceIssueFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetDisplayTopology">
         <input message="vim25:SetDisplayTopologyRequestMsg" />
         <output message="vim25:SetDisplayTopologyResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="ToolsUnavailableFault" message="vim25:ToolsUnavailableFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StartRecording_Task">
         <input message="vim25:StartRecording_TaskRequestMsg" />
         <output message="vim25:StartRecording_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidPowerStateFault" message="vim25:InvalidPowerStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="SnapshotFaultFault" message="vim25:SnapshotFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="RecordReplayDisabledFault" message="vim25:RecordReplayDisabledFaultMsg"/>
         <fault name="HostIncompatibleForRecordReplayFault" message="vim25:HostIncompatibleForRecordReplayFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StopRecording_Task">
         <input message="vim25:StopRecording_TaskRequestMsg" />
         <output message="vim25:StopRecording_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidPowerStateFault" message="vim25:InvalidPowerStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="SnapshotFaultFault" message="vim25:SnapshotFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StartReplaying_Task">
         <input message="vim25:StartReplaying_TaskRequestMsg" />
         <output message="vim25:StartReplaying_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidPowerStateFault" message="vim25:InvalidPowerStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="SnapshotFaultFault" message="vim25:SnapshotFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="RecordReplayDisabledFault" message="vim25:RecordReplayDisabledFaultMsg"/>
         <fault name="HostIncompatibleForRecordReplayFault" message="vim25:HostIncompatibleForRecordReplayFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StopReplaying_Task">
         <input message="vim25:StopReplaying_TaskRequestMsg" />
         <output message="vim25:StopReplaying_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidPowerStateFault" message="vim25:InvalidPowerStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="SnapshotFaultFault" message="vim25:SnapshotFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PromoteDisks_Task">
         <input message="vim25:PromoteDisks_TaskRequestMsg" />
         <output message="vim25:PromoteDisks_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidPowerStateFault" message="vim25:InvalidPowerStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateScreenshot_Task">
         <input message="vim25:CreateScreenshot_TaskRequestMsg" />
         <output message="vim25:CreateScreenshot_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryChangedDiskAreas">
         <input message="vim25:QueryChangedDiskAreasRequestMsg" />
         <output message="vim25:QueryChangedDiskAreasResponseMsg" />
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryUnownedFiles">
         <input message="vim25:QueryUnownedFilesRequestMsg" />
         <output message="vim25:QueryUnownedFilesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveAlarm">
         <input message="vim25:RemoveAlarmRequestMsg" />
         <output message="vim25:RemoveAlarmResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureAlarm">
         <input message="vim25:ReconfigureAlarmRequestMsg" />
         <output message="vim25:ReconfigureAlarmResponseMsg" />
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateAlarm">
         <input message="vim25:CreateAlarmRequestMsg" />
         <output message="vim25:CreateAlarmResponseMsg" />
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="GetAlarm">
         <input message="vim25:GetAlarmRequestMsg" />
         <output message="vim25:GetAlarmResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AreAlarmActionsEnabled">
         <input message="vim25:AreAlarmActionsEnabledRequestMsg" />
         <output message="vim25:AreAlarmActionsEnabledResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnableAlarmActions">
         <input message="vim25:EnableAlarmActionsRequestMsg" />
         <output message="vim25:EnableAlarmActionsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="GetAlarmState">
         <input message="vim25:GetAlarmStateRequestMsg" />
         <output message="vim25:GetAlarmStateResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AcknowledgeAlarm">
         <input message="vim25:AcknowledgeAlarmRequestMsg" />
         <output message="vim25:AcknowledgeAlarmResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureDVPortgroup_Task">
         <input message="vim25:ReconfigureDVPortgroup_TaskRequestMsg" />
         <output message="vim25:ReconfigureDVPortgroup_TaskResponseMsg" />
         <fault name="DvsFaultFault" message="vim25:DvsFaultFaultMsg"/>
         <fault name="ConcurrentAccessFault" message="vim25:ConcurrentAccessFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryAvailableDvsSpec">
         <input message="vim25:QueryAvailableDvsSpecRequestMsg" />
         <output message="vim25:QueryAvailableDvsSpecResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryCompatibleHostForNewDvs">
         <input message="vim25:QueryCompatibleHostForNewDvsRequestMsg" />
         <output message="vim25:QueryCompatibleHostForNewDvsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryCompatibleHostForExistingDvs">
         <input message="vim25:QueryCompatibleHostForExistingDvsRequestMsg" />
         <output message="vim25:QueryCompatibleHostForExistingDvsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryDvsCompatibleHostSpec">
         <input message="vim25:QueryDvsCompatibleHostSpecRequestMsg" />
         <output message="vim25:QueryDvsCompatibleHostSpecResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryDvsByUuid">
         <input message="vim25:QueryDvsByUuidRequestMsg" />
         <output message="vim25:QueryDvsByUuidResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryDvsConfigTarget">
         <input message="vim25:QueryDvsConfigTargetRequestMsg" />
         <output message="vim25:QueryDvsConfigTargetResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReadNextEvents">
         <input message="vim25:ReadNextEventsRequestMsg" />
         <output message="vim25:ReadNextEventsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReadPreviousEvents">
         <input message="vim25:ReadPreviousEventsRequestMsg" />
         <output message="vim25:ReadPreviousEventsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveArgumentDescription">
         <input message="vim25:RetrieveArgumentDescriptionRequestMsg" />
         <output message="vim25:RetrieveArgumentDescriptionResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateCollectorForEvents">
         <input message="vim25:CreateCollectorForEventsRequestMsg" />
         <output message="vim25:CreateCollectorForEventsResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="LogUserEvent">
         <input message="vim25:LogUserEventRequestMsg" />
         <output message="vim25:LogUserEventResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryEvents">
         <input message="vim25:QueryEventsRequestMsg" />
         <output message="vim25:QueryEventsResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="PostEvent">
         <input message="vim25:PostEventRequestMsg" />
         <output message="vim25:PostEventResponseMsg" />
         <fault name="InvalidEventFault" message="vim25:InvalidEventFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureAutostart">
         <input message="vim25:ReconfigureAutostartRequestMsg" />
         <output message="vim25:ReconfigureAutostartResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AutoStartPowerOn">
         <input message="vim25:AutoStartPowerOnRequestMsg" />
         <output message="vim25:AutoStartPowerOnResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AutoStartPowerOff">
         <input message="vim25:AutoStartPowerOffRequestMsg" />
         <output message="vim25:AutoStartPowerOffResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryBootDevices">
         <input message="vim25:QueryBootDevicesRequestMsg" />
         <output message="vim25:QueryBootDevicesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateBootDevice">
         <input message="vim25:UpdateBootDeviceRequestMsg" />
         <output message="vim25:UpdateBootDeviceResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnableHyperThreading">
         <input message="vim25:EnableHyperThreadingRequestMsg" />
         <output message="vim25:EnableHyperThreadingResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisableHyperThreading">
         <input message="vim25:DisableHyperThreadingRequestMsg" />
         <output message="vim25:DisableHyperThreadingResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SearchDatastore_Task">
         <input message="vim25:SearchDatastore_TaskRequestMsg" />
         <output message="vim25:SearchDatastore_TaskResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SearchDatastoreSubFolders_Task">
         <input message="vim25:SearchDatastoreSubFolders_TaskRequestMsg" />
         <output message="vim25:SearchDatastoreSubFolders_TaskResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DeleteFile">
         <input message="vim25:DeleteFileRequestMsg" />
         <output message="vim25:DeleteFileResponseMsg" />
         <fault name="InvalidDatastoreFault" message="vim25:InvalidDatastoreFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateLocalSwapDatastore">
         <input message="vim25:UpdateLocalSwapDatastoreRequestMsg" />
         <output message="vim25:UpdateLocalSwapDatastoreResponseMsg" />
         <fault name="InaccessibleDatastoreFault" message="vim25:InaccessibleDatastoreFaultMsg"/>
         <fault name="DatastoreNotWritableOnHostFault" message="vim25:DatastoreNotWritableOnHostFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryAvailableDisksForVmfs">
         <input message="vim25:QueryAvailableDisksForVmfsRequestMsg" />
         <output message="vim25:QueryAvailableDisksForVmfsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVmfsDatastoreCreateOptions">
         <input message="vim25:QueryVmfsDatastoreCreateOptionsRequestMsg" />
         <output message="vim25:QueryVmfsDatastoreCreateOptionsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateVmfsDatastore">
         <input message="vim25:CreateVmfsDatastoreRequestMsg" />
         <output message="vim25:CreateVmfsDatastoreResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVmfsDatastoreExtendOptions">
         <input message="vim25:QueryVmfsDatastoreExtendOptionsRequestMsg" />
         <output message="vim25:QueryVmfsDatastoreExtendOptionsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVmfsDatastoreExpandOptions">
         <input message="vim25:QueryVmfsDatastoreExpandOptionsRequestMsg" />
         <output message="vim25:QueryVmfsDatastoreExpandOptionsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExtendVmfsDatastore">
         <input message="vim25:ExtendVmfsDatastoreRequestMsg" />
         <output message="vim25:ExtendVmfsDatastoreResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExpandVmfsDatastore">
         <input message="vim25:ExpandVmfsDatastoreRequestMsg" />
         <output message="vim25:ExpandVmfsDatastoreResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateNasDatastore">
         <input message="vim25:CreateNasDatastoreRequestMsg" />
         <output message="vim25:CreateNasDatastoreResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateLocalDatastore">
         <input message="vim25:CreateLocalDatastoreRequestMsg" />
         <output message="vim25:CreateLocalDatastoreResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="FileNotFoundFault" message="vim25:FileNotFoundFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveDatastore">
         <input message="vim25:RemoveDatastoreRequestMsg" />
         <output message="vim25:RemoveDatastoreResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ConfigureDatastorePrincipal">
         <input message="vim25:ConfigureDatastorePrincipalRequestMsg" />
         <output message="vim25:ConfigureDatastorePrincipalResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryUnresolvedVmfsVolumes">
         <input message="vim25:QueryUnresolvedVmfsVolumesRequestMsg" />
         <output message="vim25:QueryUnresolvedVmfsVolumesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResignatureUnresolvedVmfsVolume_Task">
         <input message="vim25:ResignatureUnresolvedVmfsVolume_TaskRequestMsg" />
         <output message="vim25:ResignatureUnresolvedVmfsVolume_TaskResponseMsg" />
         <fault name="VmfsAmbiguousMountFault" message="vim25:VmfsAmbiguousMountFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateDateTimeConfig">
         <input message="vim25:UpdateDateTimeConfigRequestMsg" />
         <output message="vim25:UpdateDateTimeConfigResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryAvailableTimeZones">
         <input message="vim25:QueryAvailableTimeZonesRequestMsg" />
         <output message="vim25:QueryAvailableTimeZonesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryDateTime">
         <input message="vim25:QueryDateTimeRequestMsg" />
         <output message="vim25:QueryDateTimeResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateDateTime">
         <input message="vim25:UpdateDateTimeRequestMsg" />
         <output message="vim25:UpdateDateTimeResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshDateTimeSystem">
         <input message="vim25:RefreshDateTimeSystemRequestMsg" />
         <output message="vim25:RefreshDateTimeSystemResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryAvailablePartition">
         <input message="vim25:QueryAvailablePartitionRequestMsg" />
         <output message="vim25:QueryAvailablePartitionResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SelectActivePartition">
         <input message="vim25:SelectActivePartitionRequestMsg" />
         <output message="vim25:SelectActivePartitionResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPartitionCreateOptions">
         <input message="vim25:QueryPartitionCreateOptionsRequestMsg" />
         <output message="vim25:QueryPartitionCreateOptionsResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPartitionCreateDesc">
         <input message="vim25:QueryPartitionCreateDescRequestMsg" />
         <output message="vim25:QueryPartitionCreateDescResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateDiagnosticPartition">
         <input message="vim25:CreateDiagnosticPartitionRequestMsg" />
         <output message="vim25:CreateDiagnosticPartitionResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateDefaultPolicy">
         <input message="vim25:UpdateDefaultPolicyRequestMsg" />
         <output message="vim25:UpdateDefaultPolicyResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnableRuleset">
         <input message="vim25:EnableRulesetRequestMsg" />
         <output message="vim25:EnableRulesetResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisableRuleset">
         <input message="vim25:DisableRulesetRequestMsg" />
         <output message="vim25:DisableRulesetResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshFirewall">
         <input message="vim25:RefreshFirewallRequestMsg" />
         <output message="vim25:RefreshFirewallResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetFirmwareToFactoryDefaults">
         <input message="vim25:ResetFirmwareToFactoryDefaultsRequestMsg" />
         <output message="vim25:ResetFirmwareToFactoryDefaultsResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="BackupFirmwareConfiguration">
         <input message="vim25:BackupFirmwareConfigurationRequestMsg" />
         <output message="vim25:BackupFirmwareConfigurationResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryFirmwareConfigUploadURL">
         <input message="vim25:QueryFirmwareConfigUploadURLRequestMsg" />
         <output message="vim25:QueryFirmwareConfigUploadURLResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RestoreFirmwareConfiguration">
         <input message="vim25:RestoreFirmwareConfigurationRequestMsg" />
         <output message="vim25:RestoreFirmwareConfigurationResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="MismatchedBundleFault" message="vim25:MismatchedBundleFaultMsg"/>
         <fault name="InvalidBundleFault" message="vim25:InvalidBundleFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshHealthStatusSystem">
         <input message="vim25:RefreshHealthStatusSystemRequestMsg" />
         <output message="vim25:RefreshHealthStatusSystemResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetSystemHealthInfo">
         <input message="vim25:ResetSystemHealthInfoRequestMsg" />
         <output message="vim25:ResetSystemHealthInfoResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryModules">
         <input message="vim25:QueryModulesRequestMsg" />
         <output message="vim25:QueryModulesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateModuleOptionString">
         <input message="vim25:UpdateModuleOptionStringRequestMsg" />
         <output message="vim25:UpdateModuleOptionStringResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryConfiguredModuleOptionString">
         <input message="vim25:QueryConfiguredModuleOptionStringRequestMsg" />
         <output message="vim25:QueryConfiguredModuleOptionStringResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateUser">
         <input message="vim25:CreateUserRequestMsg" />
         <output message="vim25:CreateUserResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateUser">
         <input message="vim25:UpdateUserRequestMsg" />
         <output message="vim25:UpdateUserResponseMsg" />
         <fault name="UserNotFoundFault" message="vim25:UserNotFoundFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateGroup">
         <input message="vim25:CreateGroupRequestMsg" />
         <output message="vim25:CreateGroupResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveUser">
         <input message="vim25:RemoveUserRequestMsg" />
         <output message="vim25:RemoveUserResponseMsg" />
         <fault name="UserNotFoundFault" message="vim25:UserNotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveGroup">
         <input message="vim25:RemoveGroupRequestMsg" />
         <output message="vim25:RemoveGroupResponseMsg" />
         <fault name="UserNotFoundFault" message="vim25:UserNotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AssignUserToGroup">
         <input message="vim25:AssignUserToGroupRequestMsg" />
         <output message="vim25:AssignUserToGroupResponseMsg" />
         <fault name="UserNotFoundFault" message="vim25:UserNotFoundFaultMsg"/>
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UnassignUserFromGroup">
         <input message="vim25:UnassignUserFromGroupRequestMsg" />
         <output message="vim25:UnassignUserFromGroupResponseMsg" />
         <fault name="UserNotFoundFault" message="vim25:UserNotFoundFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureServiceConsoleReservation">
         <input message="vim25:ReconfigureServiceConsoleReservationRequestMsg" />
         <output message="vim25:ReconfigureServiceConsoleReservationResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureVirtualMachineReservation">
         <input message="vim25:ReconfigureVirtualMachineReservationRequestMsg" />
         <output message="vim25:ReconfigureVirtualMachineReservationResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateNetworkConfig">
         <input message="vim25:UpdateNetworkConfigRequestMsg" />
         <output message="vim25:UpdateNetworkConfigResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateDnsConfig">
         <input message="vim25:UpdateDnsConfigRequestMsg" />
         <output message="vim25:UpdateDnsConfigResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateIpRouteConfig">
         <input message="vim25:UpdateIpRouteConfigRequestMsg" />
         <output message="vim25:UpdateIpRouteConfigResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateConsoleIpRouteConfig">
         <input message="vim25:UpdateConsoleIpRouteConfigRequestMsg" />
         <output message="vim25:UpdateConsoleIpRouteConfigResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateIpRouteTableConfig">
         <input message="vim25:UpdateIpRouteTableConfigRequestMsg" />
         <output message="vim25:UpdateIpRouteTableConfigResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddVirtualSwitch">
         <input message="vim25:AddVirtualSwitchRequestMsg" />
         <output message="vim25:AddVirtualSwitchResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveVirtualSwitch">
         <input message="vim25:RemoveVirtualSwitchRequestMsg" />
         <output message="vim25:RemoveVirtualSwitchResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateVirtualSwitch">
         <input message="vim25:UpdateVirtualSwitchRequestMsg" />
         <output message="vim25:UpdateVirtualSwitchResponseMsg" />
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddPortGroup">
         <input message="vim25:AddPortGroupRequestMsg" />
         <output message="vim25:AddPortGroupResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemovePortGroup">
         <input message="vim25:RemovePortGroupRequestMsg" />
         <output message="vim25:RemovePortGroupResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdatePortGroup">
         <input message="vim25:UpdatePortGroupRequestMsg" />
         <output message="vim25:UpdatePortGroupResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdatePhysicalNicLinkSpeed">
         <input message="vim25:UpdatePhysicalNicLinkSpeedRequestMsg" />
         <output message="vim25:UpdatePhysicalNicLinkSpeedResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryNetworkHint">
         <input message="vim25:QueryNetworkHintRequestMsg" />
         <output message="vim25:QueryNetworkHintResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddVirtualNic">
         <input message="vim25:AddVirtualNicRequestMsg" />
         <output message="vim25:AddVirtualNicResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveVirtualNic">
         <input message="vim25:RemoveVirtualNicRequestMsg" />
         <output message="vim25:RemoveVirtualNicResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateVirtualNic">
         <input message="vim25:UpdateVirtualNicRequestMsg" />
         <output message="vim25:UpdateVirtualNicResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddServiceConsoleVirtualNic">
         <input message="vim25:AddServiceConsoleVirtualNicRequestMsg" />
         <output message="vim25:AddServiceConsoleVirtualNicResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveServiceConsoleVirtualNic">
         <input message="vim25:RemoveServiceConsoleVirtualNicRequestMsg" />
         <output message="vim25:RemoveServiceConsoleVirtualNicResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateServiceConsoleVirtualNic">
         <input message="vim25:UpdateServiceConsoleVirtualNicRequestMsg" />
         <output message="vim25:UpdateServiceConsoleVirtualNicResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="ResourceInUseFault" message="vim25:ResourceInUseFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RestartServiceConsoleVirtualNic">
         <input message="vim25:RestartServiceConsoleVirtualNicRequestMsg" />
         <output message="vim25:RestartServiceConsoleVirtualNicResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshNetworkSystem">
         <input message="vim25:RefreshNetworkSystemRequestMsg" />
         <output message="vim25:RefreshNetworkSystemResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckHostPatch_Task">
         <input message="vim25:CheckHostPatch_TaskRequestMsg" />
         <output message="vim25:CheckHostPatch_TaskResponseMsg" />
         <fault name="RequestCanceledFault" message="vim25:RequestCanceledFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="PlatformConfigFaultFault" message="vim25:PlatformConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ScanHostPatch_Task">
         <input message="vim25:ScanHostPatch_TaskRequestMsg" />
         <output message="vim25:ScanHostPatch_TaskResponseMsg" />
         <fault name="RequestCanceledFault" message="vim25:RequestCanceledFaultMsg"/>
         <fault name="PatchMetadataInvalidFault" message="vim25:PatchMetadataInvalidFaultMsg"/>
         <fault name="PlatformConfigFaultFault" message="vim25:PlatformConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ScanHostPatchV2_Task">
         <input message="vim25:ScanHostPatchV2_TaskRequestMsg" />
         <output message="vim25:ScanHostPatchV2_TaskResponseMsg" />
         <fault name="RequestCanceledFault" message="vim25:RequestCanceledFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="PlatformConfigFaultFault" message="vim25:PlatformConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StageHostPatch_Task">
         <input message="vim25:StageHostPatch_TaskRequestMsg" />
         <output message="vim25:StageHostPatch_TaskResponseMsg" />
         <fault name="RequestCanceledFault" message="vim25:RequestCanceledFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="PlatformConfigFaultFault" message="vim25:PlatformConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="InstallHostPatch_Task">
         <input message="vim25:InstallHostPatch_TaskRequestMsg" />
         <output message="vim25:InstallHostPatch_TaskResponseMsg" />
         <fault name="PatchMetadataInvalidFault" message="vim25:PatchMetadataInvalidFaultMsg"/>
         <fault name="PatchBinariesNotFoundFault" message="vim25:PatchBinariesNotFoundFaultMsg"/>
         <fault name="PatchNotApplicableFault" message="vim25:PatchNotApplicableFaultMsg"/>
         <fault name="NoDiskSpaceFault" message="vim25:NoDiskSpaceFaultMsg"/>
         <fault name="PatchInstallFailedFault" message="vim25:PatchInstallFailedFaultMsg"/>
         <fault name="RebootRequiredFault" message="vim25:RebootRequiredFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="InstallHostPatchV2_Task">
         <input message="vim25:InstallHostPatchV2_TaskRequestMsg" />
         <output message="vim25:InstallHostPatchV2_TaskResponseMsg" />
         <fault name="RequestCanceledFault" message="vim25:RequestCanceledFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="PlatformConfigFaultFault" message="vim25:PlatformConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UninstallHostPatch_Task">
         <input message="vim25:UninstallHostPatch_TaskRequestMsg" />
         <output message="vim25:UninstallHostPatch_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="PlatformConfigFaultFault" message="vim25:PlatformConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryHostPatch_Task">
         <input message="vim25:QueryHostPatch_TaskRequestMsg" />
         <output message="vim25:QueryHostPatch_TaskResponseMsg" />
         <fault name="RequestCanceledFault" message="vim25:RequestCanceledFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="PlatformConfigFaultFault" message="vim25:PlatformConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="Refresh">
         <input message="vim25:RefreshRequestMsg" />
         <output message="vim25:RefreshResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdatePassthruConfig">
         <input message="vim25:UpdatePassthruConfigRequestMsg" />
         <output message="vim25:UpdatePassthruConfigResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateServicePolicy">
         <input message="vim25:UpdateServicePolicyRequestMsg" />
         <output message="vim25:UpdateServicePolicyResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StartService">
         <input message="vim25:StartServiceRequestMsg" />
         <output message="vim25:StartServiceResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="StopService">
         <input message="vim25:StopServiceRequestMsg" />
         <output message="vim25:StopServiceResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RestartService">
         <input message="vim25:RestartServiceRequestMsg" />
         <output message="vim25:RestartServiceResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UninstallService">
         <input message="vim25:UninstallServiceRequestMsg" />
         <output message="vim25:UninstallServiceResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshServices">
         <input message="vim25:RefreshServicesRequestMsg" />
         <output message="vim25:RefreshServicesResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureSnmpAgent">
         <input message="vim25:ReconfigureSnmpAgentRequestMsg" />
         <output message="vim25:ReconfigureSnmpAgentResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SendTestNotification">
         <input message="vim25:SendTestNotificationRequestMsg" />
         <output message="vim25:SendTestNotificationResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveDiskPartitionInfo">
         <input message="vim25:RetrieveDiskPartitionInfoRequestMsg" />
         <output message="vim25:RetrieveDiskPartitionInfoResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ComputeDiskPartitionInfo">
         <input message="vim25:ComputeDiskPartitionInfoRequestMsg" />
         <output message="vim25:ComputeDiskPartitionInfoResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ComputeDiskPartitionInfoForResize">
         <input message="vim25:ComputeDiskPartitionInfoForResizeRequestMsg" />
         <output message="vim25:ComputeDiskPartitionInfoForResizeResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateDiskPartitions">
         <input message="vim25:UpdateDiskPartitionsRequestMsg" />
         <output message="vim25:UpdateDiskPartitionsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FormatVmfs">
         <input message="vim25:FormatVmfsRequestMsg" />
         <output message="vim25:FormatVmfsResponseMsg" />
         <fault name="AlreadyExistsFault" message="vim25:AlreadyExistsFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RescanVmfs">
         <input message="vim25:RescanVmfsRequestMsg" />
         <output message="vim25:RescanVmfsResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AttachVmfsExtent">
         <input message="vim25:AttachVmfsExtentRequestMsg" />
         <output message="vim25:AttachVmfsExtentResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExpandVmfsExtent">
         <input message="vim25:ExpandVmfsExtentRequestMsg" />
         <output message="vim25:ExpandVmfsExtentResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpgradeVmfs">
         <input message="vim25:UpgradeVmfsRequestMsg" />
         <output message="vim25:UpgradeVmfsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpgradeVmLayout">
         <input message="vim25:UpgradeVmLayoutRequestMsg" />
         <output message="vim25:UpgradeVmLayoutResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryUnresolvedVmfsVolume">
         <input message="vim25:QueryUnresolvedVmfsVolumeRequestMsg" />
         <output message="vim25:QueryUnresolvedVmfsVolumeResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResolveMultipleUnresolvedVmfsVolumes">
         <input message="vim25:ResolveMultipleUnresolvedVmfsVolumesRequestMsg" />
         <output message="vim25:ResolveMultipleUnresolvedVmfsVolumesResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UnmountForceMountedVmfsVolume">
         <input message="vim25:UnmountForceMountedVmfsVolumeRequestMsg" />
         <output message="vim25:UnmountForceMountedVmfsVolumeResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RescanHba">
         <input message="vim25:RescanHbaRequestMsg" />
         <output message="vim25:RescanHbaResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RescanAllHba">
         <input message="vim25:RescanAllHbaRequestMsg" />
         <output message="vim25:RescanAllHbaResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateSoftwareInternetScsiEnabled">
         <input message="vim25:UpdateSoftwareInternetScsiEnabledRequestMsg" />
         <output message="vim25:UpdateSoftwareInternetScsiEnabledResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiDiscoveryProperties">
         <input message="vim25:UpdateInternetScsiDiscoveryPropertiesRequestMsg" />
         <output message="vim25:UpdateInternetScsiDiscoveryPropertiesResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiAuthenticationProperties">
         <input message="vim25:UpdateInternetScsiAuthenticationPropertiesRequestMsg" />
         <output message="vim25:UpdateInternetScsiAuthenticationPropertiesResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiDigestProperties">
         <input message="vim25:UpdateInternetScsiDigestPropertiesRequestMsg" />
         <output message="vim25:UpdateInternetScsiDigestPropertiesResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiAdvancedOptions">
         <input message="vim25:UpdateInternetScsiAdvancedOptionsRequestMsg" />
         <output message="vim25:UpdateInternetScsiAdvancedOptionsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiIPProperties">
         <input message="vim25:UpdateInternetScsiIPPropertiesRequestMsg" />
         <output message="vim25:UpdateInternetScsiIPPropertiesResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiName">
         <input message="vim25:UpdateInternetScsiNameRequestMsg" />
         <output message="vim25:UpdateInternetScsiNameResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateInternetScsiAlias">
         <input message="vim25:UpdateInternetScsiAliasRequestMsg" />
         <output message="vim25:UpdateInternetScsiAliasResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddInternetScsiSendTargets">
         <input message="vim25:AddInternetScsiSendTargetsRequestMsg" />
         <output message="vim25:AddInternetScsiSendTargetsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveInternetScsiSendTargets">
         <input message="vim25:RemoveInternetScsiSendTargetsRequestMsg" />
         <output message="vim25:RemoveInternetScsiSendTargetsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AddInternetScsiStaticTargets">
         <input message="vim25:AddInternetScsiStaticTargetsRequestMsg" />
         <output message="vim25:AddInternetScsiStaticTargetsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveInternetScsiStaticTargets">
         <input message="vim25:RemoveInternetScsiStaticTargetsRequestMsg" />
         <output message="vim25:RemoveInternetScsiStaticTargetsResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="EnableMultipathPath">
         <input message="vim25:EnableMultipathPathRequestMsg" />
         <output message="vim25:EnableMultipathPathResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DisableMultipathPath">
         <input message="vim25:DisableMultipathPathRequestMsg" />
         <output message="vim25:DisableMultipathPathResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SetMultipathLunPolicy">
         <input message="vim25:SetMultipathLunPolicyRequestMsg" />
         <output message="vim25:SetMultipathLunPolicyResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPathSelectionPolicyOptions">
         <input message="vim25:QueryPathSelectionPolicyOptionsRequestMsg" />
         <output message="vim25:QueryPathSelectionPolicyOptionsResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryStorageArrayTypePolicyOptions">
         <input message="vim25:QueryStorageArrayTypePolicyOptionsRequestMsg" />
         <output message="vim25:QueryStorageArrayTypePolicyOptionsResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateScsiLunDisplayName">
         <input message="vim25:UpdateScsiLunDisplayNameRequestMsg" />
         <output message="vim25:UpdateScsiLunDisplayNameResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RefreshStorageSystem">
         <input message="vim25:RefreshStorageSystemRequestMsg" />
         <output message="vim25:RefreshStorageSystemResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateIpConfig">
         <input message="vim25:UpdateIpConfigRequestMsg" />
         <output message="vim25:UpdateIpConfigResponseMsg" />
         <fault name="NotFoundFault" message="vim25:NotFoundFaultMsg"/>
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SelectVnic">
         <input message="vim25:SelectVnicRequestMsg" />
         <output message="vim25:SelectVnicResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DeselectVnic">
         <input message="vim25:DeselectVnicRequestMsg" />
         <output message="vim25:DeselectVnicResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryNetConfig">
         <input message="vim25:QueryNetConfigRequestMsg" />
         <output message="vim25:QueryNetConfigResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="InvalidArgumentFault" message="vim25:InvalidArgumentFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="SelectVnicForNicType">
         <input message="vim25:SelectVnicForNicTypeRequestMsg" />
         <output message="vim25:SelectVnicForNicTypeResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="InvalidArgumentFault" message="vim25:InvalidArgumentFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DeselectVnicForNicType">
         <input message="vim25:DeselectVnicForNicTypeRequestMsg" />
         <output message="vim25:DeselectVnicForNicTypeResponseMsg" />
         <fault name="HostConfigFaultFault" message="vim25:HostConfigFaultFaultMsg"/>
         <fault name="InvalidArgumentFault" message="vim25:InvalidArgumentFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryOptions">
         <input message="vim25:QueryOptionsRequestMsg" />
         <output message="vim25:QueryOptionsResponseMsg" />
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateOptions">
         <input message="vim25:UpdateOptionsRequestMsg" />
         <output message="vim25:UpdateOptionsResponseMsg" />
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckCompliance_Task">
         <input message="vim25:CheckCompliance_TaskRequestMsg" />
         <output message="vim25:CheckCompliance_TaskResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryComplianceStatus">
         <input message="vim25:QueryComplianceStatusRequestMsg" />
         <output message="vim25:QueryComplianceStatusResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ClearComplianceStatus">
         <input message="vim25:ClearComplianceStatusRequestMsg" />
         <output message="vim25:ClearComplianceStatusResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryExpressionMetadata">
         <input message="vim25:QueryExpressionMetadataRequestMsg" />
         <output message="vim25:QueryExpressionMetadataResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyProfile">
         <input message="vim25:DestroyProfileRequestMsg" />
         <output message="vim25:DestroyProfileResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="AssociateProfile">
         <input message="vim25:AssociateProfileRequestMsg" />
         <output message="vim25:AssociateProfileResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DissociateProfile">
         <input message="vim25:DissociateProfileRequestMsg" />
         <output message="vim25:DissociateProfileResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckProfileCompliance_Task">
         <input message="vim25:CheckProfileCompliance_TaskRequestMsg" />
         <output message="vim25:CheckProfileCompliance_TaskResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExportProfile">
         <input message="vim25:ExportProfileRequestMsg" />
         <output message="vim25:ExportProfileResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateProfile">
         <input message="vim25:CreateProfileRequestMsg" />
         <output message="vim25:CreateProfileResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryPolicyMetadata">
         <input message="vim25:QueryPolicyMetadataRequestMsg" />
         <output message="vim25:QueryPolicyMetadataResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="FindAssociatedProfile">
         <input message="vim25:FindAssociatedProfileRequestMsg" />
         <output message="vim25:FindAssociatedProfileResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateClusterProfile">
         <input message="vim25:UpdateClusterProfileRequestMsg" />
         <output message="vim25:UpdateClusterProfileResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateReferenceHost">
         <input message="vim25:UpdateReferenceHostRequestMsg" />
         <output message="vim25:UpdateReferenceHostResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="UpdateHostProfile">
         <input message="vim25:UpdateHostProfileRequestMsg" />
         <output message="vim25:UpdateHostProfileResponseMsg" />
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="ProfileUpdateFailedFault" message="vim25:ProfileUpdateFailedFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ExecuteHostProfile">
         <input message="vim25:ExecuteHostProfileRequestMsg" />
         <output message="vim25:ExecuteHostProfileResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ApplyHostConfig_Task">
         <input message="vim25:ApplyHostConfig_TaskRequestMsg" />
         <output message="vim25:ApplyHostConfig_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="HostConfigFailedFault" message="vim25:HostConfigFailedFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="GenerateConfigTaskList">
         <input message="vim25:GenerateConfigTaskListRequestMsg" />
         <output message="vim25:GenerateConfigTaskListResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryHostProfileMetadata">
         <input message="vim25:QueryHostProfileMetadataRequestMsg" />
         <output message="vim25:QueryHostProfileMetadataResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateDefaultProfile">
         <input message="vim25:CreateDefaultProfileRequestMsg" />
         <output message="vim25:CreateDefaultProfileResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveScheduledTask">
         <input message="vim25:RemoveScheduledTaskRequestMsg" />
         <output message="vim25:RemoveScheduledTaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ReconfigureScheduledTask">
         <input message="vim25:ReconfigureScheduledTaskRequestMsg" />
         <output message="vim25:ReconfigureScheduledTaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RunScheduledTask">
         <input message="vim25:RunScheduledTaskRequestMsg" />
         <output message="vim25:RunScheduledTaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateScheduledTask">
         <input message="vim25:CreateScheduledTaskRequestMsg" />
         <output message="vim25:CreateScheduledTaskResponseMsg" />
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveEntityScheduledTask">
         <input message="vim25:RetrieveEntityScheduledTaskRequestMsg" />
         <output message="vim25:RetrieveEntityScheduledTaskResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateObjectScheduledTask">
         <input message="vim25:CreateObjectScheduledTaskRequestMsg" />
         <output message="vim25:CreateObjectScheduledTaskResponseMsg" />
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="DuplicateNameFault" message="vim25:DuplicateNameFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RetrieveObjectScheduledTask">
         <input message="vim25:RetrieveObjectScheduledTaskRequestMsg" />
         <output message="vim25:RetrieveObjectScheduledTaskResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="OpenInventoryViewFolder">
         <input message="vim25:OpenInventoryViewFolderRequestMsg" />
         <output message="vim25:OpenInventoryViewFolderResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CloseInventoryViewFolder">
         <input message="vim25:CloseInventoryViewFolderRequestMsg" />
         <output message="vim25:CloseInventoryViewFolderResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ModifyListView">
         <input message="vim25:ModifyListViewRequestMsg" />
         <output message="vim25:ModifyListViewResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetListView">
         <input message="vim25:ResetListViewRequestMsg" />
         <output message="vim25:ResetListViewResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="ResetListViewFromView">
         <input message="vim25:ResetListViewFromViewRequestMsg" />
         <output message="vim25:ResetListViewFromViewResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="DestroyView">
         <input message="vim25:DestroyViewRequestMsg" />
         <output message="vim25:DestroyViewResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateInventoryView">
         <input message="vim25:CreateInventoryViewRequestMsg" />
         <output message="vim25:CreateInventoryViewResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateContainerView">
         <input message="vim25:CreateContainerViewRequestMsg" />
         <output message="vim25:CreateContainerViewResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateListView">
         <input message="vim25:CreateListViewRequestMsg" />
         <output message="vim25:CreateListViewResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CreateListViewFromView">
         <input message="vim25:CreateListViewFromViewRequestMsg" />
         <output message="vim25:CreateListViewFromViewResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RevertToSnapshot_Task">
         <input message="vim25:RevertToSnapshot_TaskRequestMsg" />
         <output message="vim25:RevertToSnapshot_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="InsufficientResourcesFaultFault" message="vim25:InsufficientResourcesFaultFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="FileFaultFault" message="vim25:FileFaultFaultMsg"/>
         <fault name="VmConfigFaultFault" message="vim25:VmConfigFaultFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RemoveSnapshot_Task">
         <input message="vim25:RemoveSnapshot_TaskRequestMsg" />
         <output message="vim25:RemoveSnapshot_TaskResponseMsg" />
         <fault name="TaskInProgressFault" message="vim25:TaskInProgressFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="RenameSnapshot">
         <input message="vim25:RenameSnapshotRequestMsg" />
         <output message="vim25:RenameSnapshotResponseMsg" />
         <fault name="InvalidNameFault" message="vim25:InvalidNameFaultMsg"/>
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckCompatibility_Task">
         <input message="vim25:CheckCompatibility_TaskRequestMsg" />
         <output message="vim25:CheckCompatibility_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="NoActiveHostInClusterFault" message="vim25:NoActiveHostInClusterFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="QueryVMotionCompatibilityEx_Task">
         <input message="vim25:QueryVMotionCompatibilityEx_TaskRequestMsg" />
         <output message="vim25:QueryVMotionCompatibilityEx_TaskResponseMsg" />
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckMigrate_Task">
         <input message="vim25:CheckMigrate_TaskRequestMsg" />
         <output message="vim25:CheckMigrate_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
      <operation name="CheckRelocate_Task">
         <input message="vim25:CheckRelocate_TaskRequestMsg" />
         <output message="vim25:CheckRelocate_TaskResponseMsg" />
         <fault name="InvalidStateFault" message="vim25:InvalidStateFaultMsg"/>
         <fault name="RuntimeFault" message="vim25:RuntimeFaultFaultMsg"/>
      </operation>
   </portType>
   <binding name="VimBinding" type="vim25:VimPortType">
      <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http" />
      <operation name="DestroyPropertyFilter">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateFilter">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidPropertyFault">
            <soap:fault name="InvalidPropertyFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveProperties">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidPropertyFault">
            <soap:fault name="InvalidPropertyFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckForUpdates">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidCollectorVersionFault">
            <soap:fault name="InvalidCollectorVersionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="WaitForUpdates">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidCollectorVersionFault">
            <soap:fault name="InvalidCollectorVersionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CancelWaitForUpdates">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddAuthorizationRole">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveAuthorizationRole">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RemoveFailedFault">
            <soap:fault name="RemoveFailedFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateAuthorizationRole">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MergePermissions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AuthMinimumAdminPermissionFault">
            <soap:fault name="AuthMinimumAdminPermissionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveRolePermissions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveEntityPermissions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveAllPermissions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetEntityPermissions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AuthMinimumAdminPermissionFault">
            <soap:fault name="AuthMinimumAdminPermissionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetEntityPermissions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AuthMinimumAdminPermissionFault">
            <soap:fault name="AuthMinimumAdminPermissionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveEntityPermission">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AuthMinimumAdminPermissionFault">
            <soap:fault name="AuthMinimumAdminPermissionFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureCluster_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ApplyRecommendation">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RecommendHostsForVm">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddHost_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="HostConnectFaultFault">
            <soap:fault name="HostConnectFaultFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveInto_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="TooManyHostsFault">
            <soap:fault name="TooManyHostsFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveHostInto_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TooManyHostsFault">
            <soap:fault name="TooManyHostsFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshRecommendation">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveDasAdvancedRuntimeInfo">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureComputeResource_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddCustomFieldDef">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidPrivilegeFault">
            <soap:fault name="InvalidPrivilegeFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveCustomFieldDef">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RenameCustomFieldDef">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetField">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DoesCustomizationSpecExist">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="GetCustomizationSpec">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateCustomizationSpec">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="OverwriteCustomizationSpec">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DeleteCustomizationSpec">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DuplicateCustomizationSpec">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RenameCustomizationSpec">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CustomizationSpecItemToXml">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="XmlToCustomizationSpecItem">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckCustomizationResources">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryConnectionInfo">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="HostConnectFaultFault">
            <soap:fault name="HostConnectFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PowerOnMultiVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshDatastore">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshDatastoreStorageInfo">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RenameDatastore">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyDatastore">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryDescriptions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="BrowseDiagnosticLog">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CannotAccessFileFault">
            <soap:fault name="CannotAccessFileFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="GenerateLogBundles_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="LogBundlingFailedFault">
            <soap:fault name="LogBundlingFailedFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FetchDVPortKeys">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FetchDVPorts">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryUsedVlanIdInDvs">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureDvs_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DvsFaultFault">
            <soap:fault name="DvsFaultFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="LimitExceededFault">
            <soap:fault name="LimitExceededFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="ResourceNotAvailableFault">
            <soap:fault name="ResourceNotAvailableFault" use="literal" />
         </fault>
         <fault name="DvsNotAuthorizedFault">
            <soap:fault name="DvsNotAuthorizedFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PerformDvsProductSpecOperation_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="DvsFaultFault">
            <soap:fault name="DvsFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MergeDvs_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DvsFaultFault">
            <soap:fault name="DvsFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="InvalidHostStateFault">
            <soap:fault name="InvalidHostStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddDVPortgroup_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DvsFaultFault">
            <soap:fault name="DvsFaultFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveDVPort_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DvsFaultFault">
            <soap:fault name="DvsFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateDvsCapability">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureDVPort_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DvsFaultFault">
            <soap:fault name="DvsFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshDVPortState">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DvsFaultFault">
            <soap:fault name="DvsFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RectifyDvsHost_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DvsFaultFault">
            <soap:fault name="DvsFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryConfigOptionDescriptor">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryConfigOption">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryConfigTarget">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryTargetCapabilities">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="setCustomValue">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UnregisterExtension">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindExtension">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RegisterExtension">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateExtension">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="GetPublicKey">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetPublicKey">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetExtensionCertificate">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="NoClientCertificateFault">
            <soap:fault name="NoClientCertificateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveDatastoreFile_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CopyDatastoreFile_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DeleteDatastoreFile_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MakeDirectory">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ChangeOwner">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateFolder">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveIntoFolder_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidFolderFault">
            <soap:fault name="InvalidFolderFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="OutOfBoundsFault">
            <soap:fault name="OutOfBoundsFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RegisterVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="OutOfBoundsFault">
            <soap:fault name="OutOfBoundsFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateCluster">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateClusterEx">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddStandaloneHost_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="HostConnectFaultFault">
            <soap:fault name="HostConnectFaultFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateDatacenter">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UnregisterAndDestroy_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateDVS_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DvsFaultFault">
            <soap:fault name="DvsFaultFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="DvsNotAuthorizedFault">
            <soap:fault name="DvsNotAuthorizedFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetCollectorPageSize">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RewindCollector">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetCollector">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyCollector">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryHostConnectionInfo">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateSystemResources">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconnectHost_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="HostConnectFaultFault">
            <soap:fault name="HostConnectFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisconnectHost_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnterMaintenanceMode_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExitMaintenanceMode_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RebootHost_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ShutdownHost_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PowerDownHostToStandBy_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostPowerOpFailedFault">
            <soap:fault name="HostPowerOpFailedFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="NotSupportedFault">
            <soap:fault name="NotSupportedFault" use="literal" />
         </fault>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="RequestCanceledFault">
            <soap:fault name="RequestCanceledFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PowerUpHostFromStandBy_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostPowerOpFailedFault">
            <soap:fault name="HostPowerOpFailedFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="NotSupportedFault">
            <soap:fault name="NotSupportedFault" use="literal" />
         </fault>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryMemoryOverhead">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryMemoryOverheadEx">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureHostForDAS_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DasConfigFaultFault">
            <soap:fault name="DasConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateFlags">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AcquireCimServicesTicket">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateIpmi">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidIpmiLoginInfoFault">
            <soap:fault name="InvalidIpmiLoginInfoFault" use="literal" />
         </fault>
         <fault name="InvalidIpmiMacAddressFault">
            <soap:fault name="InvalidIpmiMacAddressFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="HttpNfcLeaseComplete">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="HttpNfcLeaseAbort">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="HttpNfcLeaseProgress">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryIpPools">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateIpPool">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateIpPool">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyIpPool">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateAssignedLicense">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="LicenseEntityNotFoundFault">
            <soap:fault name="LicenseEntityNotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveAssignedLicense">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="LicenseEntityNotFoundFault">
            <soap:fault name="LicenseEntityNotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryAssignedLicenses">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QuerySupportedFeatures">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryLicenseSourceAvailability">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryLicenseUsage">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetLicenseEdition">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="LicenseServerUnavailableFault">
            <soap:fault name="LicenseServerUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckLicenseFeature">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnableFeature">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="LicenseServerUnavailableFault">
            <soap:fault name="LicenseServerUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisableFeature">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="LicenseServerUnavailableFault">
            <soap:fault name="LicenseServerUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ConfigureLicenseSource">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CannotAccessLocalSourceFault">
            <soap:fault name="CannotAccessLocalSourceFault" use="literal" />
         </fault>
         <fault name="InvalidLicenseFault">
            <soap:fault name="InvalidLicenseFault" use="literal" />
         </fault>
         <fault name="LicenseServerUnavailableFault">
            <soap:fault name="LicenseServerUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateLicense">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddLicense">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveLicense">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DecodeLicense">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateLicenseLabel">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveLicenseLabel">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Reload">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Rename_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Destroy_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="VimFaultFault">
            <soap:fault name="VimFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyNetwork">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ValidateHost">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ParseDescriptor">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateImportSpec">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateDescriptor">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPerfProviderSummary">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryAvailablePerfMetric">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPerfCounter">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPerfCounterByLevel">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPerf">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPerfComposite">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreatePerfInterval">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemovePerfInterval">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdatePerfInterval">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EstimateDatabaseSize">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveIntoResourcePool">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateChildResourceConfiguration">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateResourcePool">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyChildren">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateVApp">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateChildVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="OutOfBoundsFault">
            <soap:fault name="OutOfBoundsFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RegisterChildVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="OutOfBoundsFault">
            <soap:fault name="OutOfBoundsFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ImportVApp">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="OutOfBoundsFault">
            <soap:fault name="OutOfBoundsFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindByUuid">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindByDatastorePath">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindByDnsName">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindByIp">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindByInventoryPath">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindChild">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindAllByUuid">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindAllByDnsName">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindAllByIp">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CurrentTime">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveServiceContent">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ValidateMigration">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVMotionCompatibility">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveProductComponents">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateServiceMessage">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Login">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="InvalidLocaleFault">
            <soap:fault name="InvalidLocaleFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="LoginBySSPI">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="SSPIChallengeFault">
            <soap:fault name="SSPIChallengeFault" use="literal" />
         </fault>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="InvalidLocaleFault">
            <soap:fault name="InvalidLocaleFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Logout">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AcquireLocalTicket">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="TerminateSession">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetLocale">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLocaleFault">
            <soap:fault name="InvalidLocaleFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="LoginExtensionBySubjectName">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="InvalidLocaleFault">
            <soap:fault name="InvalidLocaleFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="NoClientCertificateFault">
            <soap:fault name="NoClientCertificateFault" use="literal" />
         </fault>
         <fault name="NoSubjectNameFault">
            <soap:fault name="NoSubjectNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="LoginExtensionByCertificate">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="InvalidLocaleFault">
            <soap:fault name="InvalidLocaleFault" use="literal" />
         </fault>
         <fault name="NoClientCertificateFault">
            <soap:fault name="NoClientCertificateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ImpersonateUser">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="InvalidLocaleFault">
            <soap:fault name="InvalidLocaleFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SessionIsActive">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AcquireCloneTicket">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CloneSession">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidLoginFault">
            <soap:fault name="InvalidLoginFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CancelTask">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateProgress">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="OutOfBoundsFault">
            <soap:fault name="OutOfBoundsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetTaskState">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetTaskDescription">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReadNextTasks">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReadPreviousTasks">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateCollectorForTasks">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateTask">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveUserGroups">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateVAppConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CloneVApp_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="MigrationFaultFault">
            <soap:fault name="MigrationFaultFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExportVApp">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PowerOnVApp_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="VAppConfigFaultFault">
            <soap:fault name="VAppConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PowerOffVApp_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VAppConfigFaultFault">
            <soap:fault name="VAppConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="unregisterVApp_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateVirtualDisk_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DeleteVirtualDisk_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MoveVirtualDisk_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CopyVirtualDisk_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExtendVirtualDisk_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVirtualDiskFragmentation">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DefragmentVirtualDisk_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ShrinkVirtualDisk_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="InflateVirtualDisk_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EagerZeroVirtualDisk_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ZeroFillVirtualDisk_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetVirtualDiskUuid">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVirtualDiskUuid">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVirtualDiskGeometry">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshStorageInfo">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateSnapshot_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="SnapshotFaultFault">
            <soap:fault name="SnapshotFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RevertToCurrentSnapshot_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="SnapshotFaultFault">
            <soap:fault name="SnapshotFaultFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveAllSnapshots_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="SnapshotFaultFault">
            <soap:fault name="SnapshotFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpgradeVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="AlreadyUpgradedFault">
            <soap:fault name="AlreadyUpgradedFault" use="literal" />
         </fault>
         <fault name="NoDiskFoundFault">
            <soap:fault name="NoDiskFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExtractOvfEnvironment">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PowerOnVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PowerOffVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SuspendVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ShutdownGuest">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RebootGuest">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StandbyGuest">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AnswerVM">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CustomizeVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckCustomizationSpec">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MigrateVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="MigrationFaultFault">
            <soap:fault name="MigrationFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RelocateVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="MigrationFaultFault">
            <soap:fault name="MigrationFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="TimedoutFault">
            <soap:fault name="TimedoutFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CloneVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="CustomizationFaultFault">
            <soap:fault name="CustomizationFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="MigrationFaultFault">
            <soap:fault name="MigrationFaultFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExportVm">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MarkAsTemplate">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MarkAsVirtualMachine">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UnregisterVM">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetGuestInformation">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MountToolsInstaller">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UnmountToolsInstaller">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpgradeTools_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmToolsUpgradeFaultFault">
            <soap:fault name="VmToolsUpgradeFaultFault" use="literal" />
         </fault>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AcquireMksTicket">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetScreenResolution">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DefragmentAllDisks">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateSecondaryVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="VmFaultToleranceIssueFault">
            <soap:fault name="VmFaultToleranceIssueFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="TurnOffFaultToleranceForVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmFaultToleranceIssueFault">
            <soap:fault name="VmFaultToleranceIssueFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="MakePrimaryVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmFaultToleranceIssueFault">
            <soap:fault name="VmFaultToleranceIssueFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="TerminateFaultTolerantVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmFaultToleranceIssueFault">
            <soap:fault name="VmFaultToleranceIssueFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisableSecondaryVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmFaultToleranceIssueFault">
            <soap:fault name="VmFaultToleranceIssueFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnableSecondaryVM_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="VmFaultToleranceIssueFault">
            <soap:fault name="VmFaultToleranceIssueFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetDisplayTopology">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="ToolsUnavailableFault">
            <soap:fault name="ToolsUnavailableFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StartRecording_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="SnapshotFaultFault">
            <soap:fault name="SnapshotFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RecordReplayDisabledFault">
            <soap:fault name="RecordReplayDisabledFault" use="literal" />
         </fault>
         <fault name="HostIncompatibleForRecordReplayFault">
            <soap:fault name="HostIncompatibleForRecordReplayFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StopRecording_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="SnapshotFaultFault">
            <soap:fault name="SnapshotFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StartReplaying_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="SnapshotFaultFault">
            <soap:fault name="SnapshotFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RecordReplayDisabledFault">
            <soap:fault name="RecordReplayDisabledFault" use="literal" />
         </fault>
         <fault name="HostIncompatibleForRecordReplayFault">
            <soap:fault name="HostIncompatibleForRecordReplayFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StopReplaying_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="SnapshotFaultFault">
            <soap:fault name="SnapshotFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PromoteDisks_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidPowerStateFault">
            <soap:fault name="InvalidPowerStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateScreenshot_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryChangedDiskAreas">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryUnownedFiles">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveAlarm">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureAlarm">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateAlarm">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="GetAlarm">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AreAlarmActionsEnabled">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnableAlarmActions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="GetAlarmState">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AcknowledgeAlarm">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureDVPortgroup_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DvsFaultFault">
            <soap:fault name="DvsFaultFault" use="literal" />
         </fault>
         <fault name="ConcurrentAccessFault">
            <soap:fault name="ConcurrentAccessFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryAvailableDvsSpec">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryCompatibleHostForNewDvs">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryCompatibleHostForExistingDvs">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryDvsCompatibleHostSpec">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryDvsByUuid">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryDvsConfigTarget">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReadNextEvents">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReadPreviousEvents">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveArgumentDescription">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateCollectorForEvents">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="LogUserEvent">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryEvents">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="PostEvent">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidEventFault">
            <soap:fault name="InvalidEventFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureAutostart">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AutoStartPowerOn">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AutoStartPowerOff">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryBootDevices">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateBootDevice">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnableHyperThreading">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisableHyperThreading">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SearchDatastore_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SearchDatastoreSubFolders_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DeleteFile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidDatastoreFault">
            <soap:fault name="InvalidDatastoreFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateLocalSwapDatastore">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InaccessibleDatastoreFault">
            <soap:fault name="InaccessibleDatastoreFault" use="literal" />
         </fault>
         <fault name="DatastoreNotWritableOnHostFault">
            <soap:fault name="DatastoreNotWritableOnHostFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryAvailableDisksForVmfs">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVmfsDatastoreCreateOptions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateVmfsDatastore">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVmfsDatastoreExtendOptions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVmfsDatastoreExpandOptions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExtendVmfsDatastore">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExpandVmfsDatastore">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateNasDatastore">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateLocalDatastore">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="FileNotFoundFault">
            <soap:fault name="FileNotFoundFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveDatastore">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ConfigureDatastorePrincipal">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryUnresolvedVmfsVolumes">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResignatureUnresolvedVmfsVolume_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="VmfsAmbiguousMountFault">
            <soap:fault name="VmfsAmbiguousMountFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateDateTimeConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryAvailableTimeZones">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryDateTime">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateDateTime">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshDateTimeSystem">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryAvailablePartition">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SelectActivePartition">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPartitionCreateOptions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPartitionCreateDesc">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateDiagnosticPartition">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateDefaultPolicy">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnableRuleset">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisableRuleset">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshFirewall">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetFirmwareToFactoryDefaults">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="BackupFirmwareConfiguration">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryFirmwareConfigUploadURL">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RestoreFirmwareConfiguration">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="MismatchedBundleFault">
            <soap:fault name="MismatchedBundleFault" use="literal" />
         </fault>
         <fault name="InvalidBundleFault">
            <soap:fault name="InvalidBundleFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshHealthStatusSystem">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetSystemHealthInfo">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryModules">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateModuleOptionString">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryConfiguredModuleOptionString">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateUser">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateUser">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateGroup">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveUser">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveGroup">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AssignUserToGroup">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UnassignUserFromGroup">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="UserNotFoundFault">
            <soap:fault name="UserNotFoundFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureServiceConsoleReservation">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureVirtualMachineReservation">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateNetworkConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateDnsConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateIpRouteConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateConsoleIpRouteConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateIpRouteTableConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddVirtualSwitch">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveVirtualSwitch">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateVirtualSwitch">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddPortGroup">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemovePortGroup">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdatePortGroup">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdatePhysicalNicLinkSpeed">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryNetworkHint">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddVirtualNic">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveVirtualNic">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateVirtualNic">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddServiceConsoleVirtualNic">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveServiceConsoleVirtualNic">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateServiceConsoleVirtualNic">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="ResourceInUseFault">
            <soap:fault name="ResourceInUseFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RestartServiceConsoleVirtualNic">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshNetworkSystem">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckHostPatch_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RequestCanceledFault">
            <soap:fault name="RequestCanceledFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="PlatformConfigFaultFault">
            <soap:fault name="PlatformConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ScanHostPatch_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RequestCanceledFault">
            <soap:fault name="RequestCanceledFault" use="literal" />
         </fault>
         <fault name="PatchMetadataInvalidFault">
            <soap:fault name="PatchMetadataInvalidFault" use="literal" />
         </fault>
         <fault name="PlatformConfigFaultFault">
            <soap:fault name="PlatformConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ScanHostPatchV2_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RequestCanceledFault">
            <soap:fault name="RequestCanceledFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="PlatformConfigFaultFault">
            <soap:fault name="PlatformConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StageHostPatch_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RequestCanceledFault">
            <soap:fault name="RequestCanceledFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="PlatformConfigFaultFault">
            <soap:fault name="PlatformConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="InstallHostPatch_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="PatchMetadataInvalidFault">
            <soap:fault name="PatchMetadataInvalidFault" use="literal" />
         </fault>
         <fault name="PatchBinariesNotFoundFault">
            <soap:fault name="PatchBinariesNotFoundFault" use="literal" />
         </fault>
         <fault name="PatchNotApplicableFault">
            <soap:fault name="PatchNotApplicableFault" use="literal" />
         </fault>
         <fault name="NoDiskSpaceFault">
            <soap:fault name="NoDiskSpaceFault" use="literal" />
         </fault>
         <fault name="PatchInstallFailedFault">
            <soap:fault name="PatchInstallFailedFault" use="literal" />
         </fault>
         <fault name="RebootRequiredFault">
            <soap:fault name="RebootRequiredFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="InstallHostPatchV2_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RequestCanceledFault">
            <soap:fault name="RequestCanceledFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="PlatformConfigFaultFault">
            <soap:fault name="PlatformConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UninstallHostPatch_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="PlatformConfigFaultFault">
            <soap:fault name="PlatformConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryHostPatch_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RequestCanceledFault">
            <soap:fault name="RequestCanceledFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="PlatformConfigFaultFault">
            <soap:fault name="PlatformConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="Refresh">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdatePassthruConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateServicePolicy">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StartService">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="StopService">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RestartService">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UninstallService">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshServices">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureSnmpAgent">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SendTestNotification">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveDiskPartitionInfo">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ComputeDiskPartitionInfo">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ComputeDiskPartitionInfoForResize">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateDiskPartitions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FormatVmfs">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="AlreadyExistsFault">
            <soap:fault name="AlreadyExistsFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RescanVmfs">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AttachVmfsExtent">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExpandVmfsExtent">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpgradeVmfs">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpgradeVmLayout">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryUnresolvedVmfsVolume">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResolveMultipleUnresolvedVmfsVolumes">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UnmountForceMountedVmfsVolume">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RescanHba">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RescanAllHba">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateSoftwareInternetScsiEnabled">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiDiscoveryProperties">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiAuthenticationProperties">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiDigestProperties">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiAdvancedOptions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiIPProperties">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiName">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateInternetScsiAlias">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddInternetScsiSendTargets">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveInternetScsiSendTargets">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AddInternetScsiStaticTargets">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveInternetScsiStaticTargets">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="EnableMultipathPath">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DisableMultipathPath">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SetMultipathLunPolicy">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPathSelectionPolicyOptions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryStorageArrayTypePolicyOptions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateScsiLunDisplayName">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RefreshStorageSystem">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateIpConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="NotFoundFault">
            <soap:fault name="NotFoundFault" use="literal" />
         </fault>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SelectVnic">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DeselectVnic">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryNetConfig">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="InvalidArgumentFault">
            <soap:fault name="InvalidArgumentFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="SelectVnicForNicType">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="InvalidArgumentFault">
            <soap:fault name="InvalidArgumentFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DeselectVnicForNicType">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="HostConfigFaultFault">
            <soap:fault name="HostConfigFaultFault" use="literal" />
         </fault>
         <fault name="InvalidArgumentFault">
            <soap:fault name="InvalidArgumentFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryOptions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateOptions">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckCompliance_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryComplianceStatus">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ClearComplianceStatus">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryExpressionMetadata">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyProfile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="AssociateProfile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DissociateProfile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckProfileCompliance_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExportProfile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateProfile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryPolicyMetadata">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="FindAssociatedProfile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateClusterProfile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateReferenceHost">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="UpdateHostProfile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="ProfileUpdateFailedFault">
            <soap:fault name="ProfileUpdateFailedFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ExecuteHostProfile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ApplyHostConfig_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="HostConfigFailedFault">
            <soap:fault name="HostConfigFailedFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="GenerateConfigTaskList">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryHostProfileMetadata">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateDefaultProfile">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveScheduledTask">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ReconfigureScheduledTask">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RunScheduledTask">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateScheduledTask">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveEntityScheduledTask">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateObjectScheduledTask">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="DuplicateNameFault">
            <soap:fault name="DuplicateNameFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RetrieveObjectScheduledTask">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="OpenInventoryViewFolder">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CloseInventoryViewFolder">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ModifyListView">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetListView">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="ResetListViewFromView">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="DestroyView">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateInventoryView">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateContainerView">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateListView">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CreateListViewFromView">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RevertToSnapshot_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="InsufficientResourcesFaultFault">
            <soap:fault name="InsufficientResourcesFaultFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="FileFaultFault">
            <soap:fault name="FileFaultFault" use="literal" />
         </fault>
         <fault name="VmConfigFaultFault">
            <soap:fault name="VmConfigFaultFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RemoveSnapshot_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="TaskInProgressFault">
            <soap:fault name="TaskInProgressFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="RenameSnapshot">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidNameFault">
            <soap:fault name="InvalidNameFault" use="literal" />
         </fault>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckCompatibility_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="NoActiveHostInClusterFault">
            <soap:fault name="NoActiveHostInClusterFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="QueryVMotionCompatibilityEx_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckMigrate_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
      <operation name="CheckRelocate_Task">
         <soap:operation soapAction="urn:vim25/4.0" style="document" />
         <input>
            <soap:body use="literal" />
         </input>
         <output>
            <soap:body use="literal" />
         </output>
         <fault name="InvalidStateFault">
            <soap:fault name="InvalidStateFault" use="literal" />
         </fault>
         <fault name="RuntimeFault">
            <soap:fault name="RuntimeFault" use="literal" />
         </fault>
      </operation>
   </binding>
</definitions>
