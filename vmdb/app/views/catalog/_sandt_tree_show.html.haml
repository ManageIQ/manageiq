= render :partial => "layouts/flash_msg"
#st_tabs{:style => "display:none;width:auto;height:99%;overflow:auto;"}
  %ul.tab
    %li#li_basic
      %a{:href => "#basic"} Basic Info
    - if @record.display
      %li#li_details
        %a{:href => "#details"} Details
    - if @record.composite?
      %li#li_resources
        %a{:href => "#resources"} Selected Resources
    - else
      - unless @record.prov_type.eql?("generic")
        %li#li_request
          %a{:href => "#request"} Request Info
  #basic{:name => "basic", :width => "80px"}
    %p.legend Basic Information
    %table.style1
      %tr
        %td.key Name / Description
        %td 
          #{@record.name} / #{@record.description}
          = check_box_tag(display, true, @record.display, :disabled => true)
          &nbsp; Display in Catalog
      - if @record.display
        %tr
          %td.key Catalog
          %td= h(@record.service_template_catalog ? @record.service_template_catalog.name : "<Unassigned>")
      %tr
        %td.key Dialog
        %td= h(@sb[:dialog_label])
      - [["Provisioning", :fqname],
         ["Reconfigure",  :reconfigure_fqname],
         ["Retirement",   :retire_fqname]].each do |entry_points_op|
        %tr
          %td.key{:title => "#{entry_points_op[0]} Entry Point (NameSpace/Class/Instance)"}
            #{entry_points_op[0]} Entry Point
            %br
            (NS/Cls/Inst)
          %td= h(@sb[entry_points_op[1]])
    %hr
    %p.legend Custom Image
    - if @record.picture
      %table
        %tr
          %td
            = image_tag("#{@record.picture.url_path}?#{rand(99_999_999).to_s}",
                        :style => "width:100px; height:100px;")
          %td{:valign => "bottom"}
            = link_to(image_tag("/images/toolbars/remove.png",
                                :class => "rollover small",
                                :alt   => t = "Remove this Custom Image"),
                      {:action  => "st_upload_image",
                       :id      => @record.id,
                       :pressed => "remove"},
                      "data-miq_sparkle_on"  => true,
                      "data-miq_sparkle_off" => true,
                      :remote                => true,
                      :confirm               => "Are you sure you want to remove this Custom Image?",
                      :title                 => t)
    - else
      No custom image has been uploaded
      %br
      %br
    - if is_browser_ie?
      = form_tag({:action    => "st_upload_image",
                  :id        => @record.id},
                  :multipart => true) do
        = file_field("upload", "image")
        = submit_tag("Upload", :id => "upload", :class => "upload")
        * Requirements: File-type - PNG; Dimensions - 350x70.
    - else
      = form_tag({:action  => "st_upload_image",
                  :id      => @record.id},
                 :id        => "uploadForm",
                 :multipart => true) do
        = file_field("upload", "image")
        * Requirements: File-type - JPG/PNG; Dimensions - 100x100.
      %script{:type => "text/javascript"} miqInitJqueryForm();

  - if @record.display
    #details{:name => "details", :width => "80px"}
      %p.legend Basic Information
      %table.style1
        %tr
          %td.key Long Description
          %td.wide= @record.long_description.to_s.html_safe

  - if @record.composite?
    #resources{:name => "resources", :width => "80px"}
      %p.legend Resources
      - resources = @record.service_resources
      - unless resources.empty?
        %table.style3
          %thead
            %tr
              %th.icon
              - titles = ["Name", "Description", "Action Order", 
                          "Provision Order", "Action", "Delay (mins)"]
              - colspan = ["Action", "Delay (mins)"]
              - titles.each do |title|
                %th{:colspan => colspan.include?(title) ? 2 : 1}= title
            - sub_titles = ["Start", "Stop", "Start", "Stop"]
            %tr
              %th{:colspan => "5"}
              - sub_titles.each do |st|
                %th= st
          %tbody
            - prev_group = 0
            - resources.sort_by { |rsc| [rsc.group_idx, rsc.resource_name.downcase] }.each_with_index do |r, i|
              - col_span = 10
              - if prev_group != r.group_idx && i < resources.length
                - prev_group = r.group_idx
                %tr#new_tr.separator
                  %td{:colspan => col_span}
              %tr{:class       => cycle("row0", "row1"),
                  :onclick     => remote_function(:loading  => "miqSparkle(true);",
                                                  :complete => "miqSparkle(false);",
                                                  :url      => "/catalog/x_show/#{to_cid(r.resource_id)}"),
                  :onmouseover => "this.style.cursor='pointer'",
                  :title       => "Click to this Catalog Item"}
                %td.icon{:style => "white-space:nowrap"}
                  %img{:src    => "/images/icons/new/service_template.png",
                       :valign => "middle",
                       :border => "0",
                       :height => "20",
                       :width  => "20"}
                - keys = ["resource_name", "resource_description", "group_idx", "provision_index",
                          "start_action", "stop_action", "start_delay", "stop_delay"]
                - keys.each do |key|
                  %td
                    - if ["start_delay", "stop_delay"].include?(key)
                      = r.send(key) / 60
                    - else
                      = ["group_idx", "provision_index"].include?(key) ? r.send(key).to_i + 1 : r.send(key)
      - else
        No Resources found.
  - else
    - unless @record.prov_type || (@record.prov_type && @record.prov_type != "generic")
      #request{:name => "request", :width => "80px"}
        - if @options[:wf]
          %p.legend
            Request Info
            = render :partial => "miq_request/prov_wf",
                     :locals  => {:wf   => @options[:wf],
                                  :show => true}
        - else
          %span{:style => "color:red"}= @no_wf_msg
:javascript
  miq_jquery_tabs_init({tabs_div: "st_tabs", active_tab: "basic"})
