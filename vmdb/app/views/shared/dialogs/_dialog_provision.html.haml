- if @edit
  - url = url_for(:action => 'dialog_field_changed', :id => "#{@edit[:rec_id] || "new"}")
- wf = @edit[:wf] if @edit && @edit[:wf]
= render :partial => "layouts/dhtmlx_tags", :locals => {:control => "calendar"}
= render :partial => "layouts/flash_msg"
%dl.col1
  %dd
    #dialog_tabs{:style         => 'display:none;width:100%;height:100%;overflow:auto;',
                 'data-miq_url' => '_none_'}
      %ul.tab
        - wf.dialog.dialog_tabs.each do |tab|
          %li
            %a{:href => "##{tab.id}_tab", :title => tab.description}
              = tab.label
      - wf.dialog.dialog_tabs.each do |tab|
        = render :partial => "shared/dialogs/dialog_tab", 
                 :locals => {:wf => wf, :tab => tab}
  - unless @edit[:explorer]
    = render :partial => "layouts/x_dialog_buttons",
             :locals  => {:action_url => 'dialog_form_button_pressed',
                          :record_id  => @edit[:rec_id]}
-# Initialize jQuery UI tabs based on tabs ul
:javascript
  //method takes hash that can have 4 keys: tabs div id, active tab label,
  //url to go to when tab is changed, and whether to check for abandon changes or not
  miq_jquery_tabs_init({tabs_div: "dialog_tabs"})
