- url = url_for(:action => 'form_method_field_changed', :id => "#{@ae_method.id || 'new'}")
- url_one_trans = url_for(:action => 'form_method_field_changed',
  :id                             => "#{@ae_method.id || 'new'}",
  :transOne                       => '1')
#form_div
  - if @edit[:new][:location] == "inline"
    = text_area_tag("#{field_name}_data",
      @edit[:new][:data],
      :style => "display:none;")
  - else
    = text_field_tag("#{field_name}_data",
      @edit[:new][:data],
      :maxlength         => MAX_NAME_LEN,
      "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
  %tr
    %td
      %span#pwd_note{:style => "color: red;"}
    %td{:align => "right"}
      = render(:partial => "/layouts/form_buttons_verify",
        :locals         => {:validate_url => "validate_method_data",
          :valtype                        => "default",
          :record                         => @ae_method,
          :verify_title_off               => "Enter data to Validate",
          :verify_title_on                => "Validate method data",
          :serialize                      => true})

:javascript
  miqOneTrans = 0;
- if @edit[:new][:location] == "inline"
  - # Create a MyCodeMirror editor for the text area
  = render(:partial => "/layouts/my_code_mirror",
    :locals => {:text_area_id => "#{field_name}_data",
      :mode                   => "ruby",
      :line_numbers           => true,
      :url                    => url_one_trans})
