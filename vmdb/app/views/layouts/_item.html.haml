= render :partial => "layouts/flash_msg"
%table.style1
  - if @item.kind_of?(CimStorageExtent)
    - cols = [%w(Name               evm_display_name),
              %w(Vendor             vendor),
              %w(Zone               zone_name),
              %w(Description        description),
              %w(Operational Status operational_status_str),
              %w(Health State       health_state_str),
              %w(Enabled            enabled_state),
              %w(System             system_name),
              %w(Number of Blocks   number_of_blocks),
              %w(Block Size         block_size),
              %w(Consumable Blocks  consumable_blocks),
              %w(Device ID          device_id),
              %w(Extent Status      extent_status),
              %w(Primordial         primordial?),
              %w(Last Update Status last_update_status_str)]
  - elsif @item.kind_of?(SniaLocalFileSystem)
    - cols = [%w(Name                       evm_display_name),
              %w(Caption                    caption),
              %w(Zone                       zone_name),
              %w(Operational Status         operational_status_str),
              %w(Root                       root),
              %w(CS Name                    cs_name),
              %w(File System Type           file_system_type),
              %w(Path Name Separator String path_name_separator_string),
              %w(Resize Increment           resize_increment),
              %w(Cluster Size               cluster_size),
              %w(Block Size                 block_size),
              %w(File System Size           file_system_size),
              %w(Available Space            available_space),
              %w(Max File Name Length       max_file_name_length),
              %w(Read Only                  read_only?),
              %w(Case Sensitive             case_sensitive?),
              %w(Case Preserved             case_preserved?),
              %w(Last Update Status         last_update_status_str)]

    - cols.each do |title, val|
      %tr{:class => "#{cycle('row0', 'row1')}"}
        %td.key
          = title
        %td
          - if %w(consumable_blocks number_of_blocks).include?(val)
            = h(number_with_delimiter(@item.send(val), :delimiter => ','))
          - elsif %w(file_system_size available_size).include?(val)
            = h(number_to_human_size(@item.send(val), :precision => 1))
          - else
            = h(@item.send(val.to_sym))
  - else
    - j = (%w(scan_histories registry_items filesystems).include?(@lastaction) ? 0 : 1)
    - for i in j...@view.col_order.length
      %tr{:class => "#{cycle('row0', 'row1')}"}
        %td.key
          = @view.headers[i]
        %td
          - item_data = @item.send(@view.col_order[i])
          - if %w(data name).include?(@view.headers[i].downcase)
            - if item_data.present?
              - item_data.scan(/.{1,125}/).each do |data_part|
                = h(data_part)
          - elsif @view.headers[i].downcase == "size"
            = h(number_with_delimiter(item_data))
          - else
            - if item_data.kind_of?(Time)
              = h(format_timezone(item_data))
            - else
              = h(item_data)
    - if @lastaction == "users"
      %tr{:class => "#{cycle('row0', 'row1')}"}
        %td.key= _("Groups")
        %td
          - groups = @group_names.sort_by { |m| m[:name] }.collect { |group| group.name }
          = h(groups.join(", "))
    - elsif @lastaction == "groups"
      %tr{:class => "#{cycle('row0', 'row1')}"}
        %td.key= _("Users")
        %td
          - users = @user_names.sort_by { |m| m[:name] }.collect { |user| user.name }
          = h(users.join(", "))
    - elsif @lastaction == "filesystems"
      %tr{:class => "#{cycle('row0', 'row1')}"}
        %td.key= _("Contents")
        %td
          - if @item.has_contents?
            - if @item.contents_displayable?
              = text_area_tag("item_contents", @item.contents, :readonly => "readonly", :style => "overflow:auto;width:600px;height:400px;")
          - else
            = _("Cannot display binary content")
          - else
            = _("Not Available")
  %tr
    %th{:colspan => "3", :class => "footer"}
