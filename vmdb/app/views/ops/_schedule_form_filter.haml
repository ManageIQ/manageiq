#form_filter_div
  %fieldset
    %p.legend {{buildLegend()}}
    %table.style1
      %tr(ng-switch on="determineActionType()")
        %td.key(ng-hide="dbBackup()") Filter
        %td.key(ng-show="dbBackup()") Type
        %td
          = select_tag('filter_typ', options_for_select(@vm_options_for_select), "ng-switch-when" => "vm", "ng-model" => "$parent.filterType", "ng-change" => "filterTypeChanged()")
          = select_tag('filter_typ', options_for_select(@template_options_for_select), "ng-switch-when" => "miq_template", "ng-model" => "$parent.filterType", "ng-change" => "filterTypeChanged()")
          = select_tag('filter_typ', options_for_select(@host_options_for_select), "ng-switch-when" => "host", "ng-model" => "$parent.filterType", "ng-change" => "filterTypeChanged()")
          = select_tag('filter_typ', options_for_select(@cluster_options_for_select), "ng-switch-when" => "emscluster", "ng-model" => "$parent.filterType", "ng-change" => "filterTypeChanged()")
          = select_tag('filter_typ', options_for_select(@storage_options_for_select), "ng-switch-when" => "storage", "ng-model" => "$parent.filterType", "ng-change" => "filterTypeChanged()")
          = select_tag('log_protocol', options_for_select(@database_backup_options_for_select), "ng-switch-when" => "db_backup", "ng-model" => "$parent.logProtocol", "ng-change" => "logProtocolChanged()")

          %select#filter_value(ng-change="filterValueChanged()" ng-model="filterValue" ng-options="filteredItem.value as filteredItem.text for filteredItem in filterList" ng-hide="filterValuesEmpty" ng-required="!filterValuesEmpty")
            %option(value="") &lt;Choose&gt;
          %input(type="hidden" name="filter_value" value="{{filterValue}}")

      %tr(ng-show="dbBackup()")
        %td.key
          Depot Name
        %td.wide
          %input(type="text" ng-required="dbBackup()" name="depot_name" ng-model="depotName")

      %tr(ng-show="dbBackup()")
        %td.key URI
        %td.wide
          {{uriPrefix}}://
          %input.uri-input(type="text" ng-required="dbBackup()" name="uri" ng-model="uri" maxlength=100)
          %input(type="hidden" name="uri_prefix" ng-value="uriPrefix")
        = javascript_tag("$j('.uri-input').focus()")

      %tr(ng-show="sambaBackup()")
        %td.key
          User ID
        %td
          %input(type="text" ng-required="sambaBackup()" name="log_userid" ng-model="logUserid" maxlength=50)

      %tr(ng-show="sambaBackup()")
        %td.key
          Password
        %td
          %input(type="password" ng-required="sambaBackup()" name="log_password" ng-model="logPassword" maxlength=50)

      %tr(ng-show="sambaBackup()")
        %td.key
          Verify Password
        %td
          %input(type="password" ng-required="sambaBackup()" name="log_verify" ng-model="logVerify" maxlength=50)

      %tr(ng-show="sambaBackup()")
        %td
        %td(align="right")
          - validate_url ||= ["new", "create"].include?(controller.action_name) ? "create" : "update"
          = render(:partial => "/layouts/form_buttons_verify", :locals => {:validate_url => validate_url, :valtype => "log"})
