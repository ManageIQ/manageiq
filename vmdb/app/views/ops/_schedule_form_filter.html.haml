#form_filter_div
  %fieldset
    %p.legend {{buildLegend()}}
    %table.style1
      %tr(ng-switch on="determineActionType()")
        %td.key(ng-hide="dbBackup()") Filter
        %td.key(ng-show="dbBackup()") Type
        %td
          = select_tag('filter_typ', options_for_select(@vm_options_for_select),
            "ng-switch-when" => "vm",
            "ng-model"       => "$parent.scheduleModel.filter_typ",
            "ng-change"      => "filterTypeChanged()",
            "checkchange"    => @schedule.id ? "" : "filter_value")
          = select_tag('filter_typ', options_for_select(@template_options_for_select),
            "ng-switch-when" => "miq_template",
            "ng-model"       => "$parent.scheduleModel.filter_typ",
            "ng-change"      => "filterTypeChanged()",
            "checkchange"    => @schedule.id ? "" : "filter_value")
          = select_tag('filter_typ', options_for_select(@host_options_for_select),
            "ng-switch-when" => "host",
            "ng-model"       => "$parent.scheduleModel.filter_typ",
            "ng-change"      => "filterTypeChanged()",
            "checkchange"    => @schedule.id ? "" : "filter_value")
          = select_tag('filter_typ', options_for_select(@cluster_options_for_select),
            "ng-switch-when" => "emscluster",
            "ng-model"       => "$parent.scheduleModel.filter_typ",
            "ng-change"      => "filterTypeChanged()",
            "checkchange"    => @schedule.id ? "" : "filter_value")
          = select_tag('filter_typ', options_for_select(@storage_options_for_select),
            "ng-switch-when" => "storage",
            "ng-model"       => "$parent.scheduleModel.filter_typ",
            "ng-change"      => "filterTypeChanged()",
            "checkchange"    => @schedule.id ? "" : "filter_value")
          = select_tag('log_protocol', options_for_select(@database_backup_options_for_select),
            "ng-switch-when" => "db_backup",
            "ng-model"       => "$parent.scheduleModel.log_protocol",
            "ng-change"      => "logProtocolChanged()",
            "checkchange"    => "")

          %select#filter_value(name="filter_value" ng-change="filterValueChanged()" ng-model="scheduleModel.filter_value" ng-options="filteredItem.value as filteredItem.text for filteredItem in filterList" ng-hide="scheduleModel.filterValuesEmpty" ng-required="filterValueRequired(scheduleModel.filter_value)" checkchange)
            %option(value="") &lt;Choose&gt;
          %input(type="hidden" name="filter_value" value="{{scheduleModel.filter_value}}")

      %tr(ng-show="dbBackup()")
        %td.key
          Depot Name
        %td.wide
          %input(type="text" ng-required="dbRequired(scheduleModel.depot_name)" name="depot_name" ng-model="scheduleModel.depot_name" checkchange)

      %tr(ng-show="dbBackup()")
        %td.key URI
        %td.wide
          {{scheduleModel.uri_prefix}}://
          %input.uri-input(type="text" ng-required="dbRequired(scheduleModel.uri)" name="uri" ng-model="scheduleModel.uri" maxlength=100 checkchange)
          %input(type="hidden" name="uri_prefix" ng-value="scheduleModel.uri_prefix")
        = javascript_tag("$('.uri-input').focus()")

      %tr(ng-show="sambaBackup()")
        %td.key
          User ID
        %td
          %input(type="text" ng-required="sambaRequired(scheduleModel.log_userid)" name="log_userid" ng-model="scheduleModel.log_userid" maxlength=50 checkchange)

      %tr(ng-show="sambaBackup()")
        %td.key
          Password
        %td
          %input(type="password" ng-required="sambaRequired(scheduleModel.log_password)" name="log_password" ng-model="scheduleModel.log_password" maxlength=50 checkchange)

      %tr(ng-show="sambaBackup()")
        %td.key
          Verify Password
        %td
          %input(type="password" ng-required="sambaRequired(scheduleModel.log_verify)" name="log_verify" ng-model="scheduleModel.log_verify" maxlength=50 checkchange)

      %tr(ng-show="sambaBackup()")
        %td
        %td(align="right")
          - validate_url ||= ["new", "create"].include?(controller.action_name) ? "create" : "update"
          = render(:partial => "/layouts/form_buttons_verify", :locals => {:validate_url => validate_url, :valtype => "log"})
