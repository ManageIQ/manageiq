- url = url_for(:action => 'settings_form_field_changed',
  :id => "#{@sb[:active_tab].split('_').last}")
- if @sb[:active_tab] == "settings_database"
  = render :partial => "layouts/flash_msg"
  .alert.alert-danger
    %span.pficon-layered
      %span.pficon.pficon-error-octagon
      %span.pficon.pficon-error-exclamation
    %strong Caution: Changing the Database settings could make the Server unstartable!
  %p.legend Database
  %table.style1
    %tr
      %td.key Type
      %td
        = select_tag('production_dbtype',
          options_for_select(MiqDbConfig.get_db_types.invert.sort, @edit[:new][:name]),
          "data-miq_focus"   => true,
          "data-miq_observe" => {:url => url}.to_json)
    - @options.each do |option|
      %tr
        %td.key= option[:description]
        %td
          - if option[:name].to_s == "password"
            = password_field_tag("production_#{option[:name]}", '',
              :maxlength         => 50,
              :placeholder       => placeholder_if_present(@edit[:new][option[:name]]),
              "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
          - else
            = text_field_tag("production_#{option[:name]}",
              h(@edit[:new][option[:name]]),
              :maxlength         => 50,
              "data-miq_observe" => {:interval => '.5',
              :url      => url}.to_json)
      - if option[:name].to_s == "password"
        %tr
          %td.key Verify Password
          %td
            = password_field_tag("production_verify", '',
              :maxlength         => 50,
              :placeholder       => placeholder_if_present(@edit[:new][option[:verify]]),
              "data-miq_observe" => {:interval => '.5',
              :url      => url}.to_json)
    %tr
      %td
      %td{:align => "left"}
        #validate_button_on{:style => "display:#{@edit[:new][:password] == @edit[:new][:verify] ? "display" : "none"};"}
          = button_tag('Validate',
            :class   => "btn btn-primary",
            :alt     => "Validate Database Configuration",
            :title   => "Validate Database Configuration",
            :onclick => "miqAjaxButton('#{url_for(:action => "settings_update",
            :id     => @sb[:active_tab].split('_').last,
            :button => "db_verify")}');")
        #validate_button_off{:style => "display:#{@edit[:new][:password] != @edit[:new][:verify] ? "display" : "none"};"}
          = button_tag("Validate",
            :class => "btn btn-primary btn-disabled",
            :alt   => "Password fields must match to Validate Database Configuration",
            :title => "Password fields must match to Validate Database Configuration")
  %div{:style => "padding-bottom:20px;"}
