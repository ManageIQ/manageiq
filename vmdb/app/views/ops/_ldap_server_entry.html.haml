- if edit
  - if entry == "new"
    %tr#new_tr{:class => cycle('row0', 'row1')}
      %td
        = button_tag(_("Import"),
                     :class => "btn btn-primary",
                     :id    => "accept",
                     :name  => "accept",
                     :alt   => t = _("Add this LDAP Server"),
                     :title => t,
                     :type  => "submit")
      %td.all
        = text_field("entry", "hostname", :maxlength => MAX_NAME_LEN)
      %td
        - url1 = url_for(:action => 'ldap_entry_changed',
                         :id     => @edit[:ldap_domain_id] || "new")
        = select_tag('entry_mode',
                     options_for_select([[_("LDAP"), 'ldap'], [_("LDAPS"), 'ldaps']], "ldaps"),
                     "data-miq_observe" => {:url => url1}.to_json)
      %td.all
        = text_field("entry", "port",
                     :maxlength => 6,
                     :value     => "636")
  - else
    %tr{:id => "#{entry[:id]}_tr", :class => cycle('row0', 'row1')}
      %td
        = button_tag(_("Import"),
                     :class     => "btn btn-primary",
                     :id        => "accept",
                     :name      => "accept",
                     :alt       => t = _("Update this LDAP Server"),
                     :title     => t,
                     :domain_id => domain_id,
                     :type      => "submit")
      %td.all
        = text_field("entry", "hostname",
                     :maxlength => MAX_NAME_LEN,
                     "value"    => entry[:hostname])
      %td
        - url1 = url_for(:action => 'ldap_entry_changed',
                         :id     => "#{@edit[:ldap_domain_id] || "new"}")
        = select_tag('entry_mode',
                     options_for_select([[_("LDAP"), 'ldap'], [_("LDAPS"), 'ldaps']], entry[:mode]),
                     "data-miq_observe" => {:url => url1}.to_json)
      %td.all
        = text_field("entry", "port",
                     :maxlength => 6,
                     "value"    => entry[:port])
      = hidden_field("entry", "idx", "value" => entry_idx)
- else
  - if entry == "new"
    %tr#new_tr{:class => cycle('row0', 'row1'), :onclick => "#{remote_function(:url => {:action => 'ls_select', :id => "new", :domain_id => domain_id})}", :title => _("Click to add a new entry")}
      %td
        = image_tag("/images/toolbars/new.png", :class => "rollover small")
      %td
        = h(_("<New LDAP Server>"))
      %td
        = h(t = _("<Click on this row to create a new LDAP Server>"))
      %td 
        = h(t)
      %td
  - else
    %tr{:id => "#{entry_idx}_tr", :class => cycle('row0', 'row1')}
      %td{:onclick => remote_function(:url => {:action => 'ls_delete', :id => entry_idx, :domain_id => domain_id}, :confirm => _("Deleting the '%s' LDAP Server, are you sure?")) % entry[:hostname],
          :title   => _("Click to delete this LDAP Server")}
        = image_tag("/images/toolbars/delete.png", :class => "rollover small")
      %td{:onclick => remote_function(:url => {:action => 'ls_select', :id => entry_idx, :field => "hostname", :domain_id => domain_id}), :title => t = _("Click to update this LDAP Server")}
        = entry[:hostname]
      %td{:onclick => remote_function(:url => {:action => 'ls_select', :id => entry_idx, :field => "mode", :domain_id => domain_id}), :title => t}
        = entry[:mode] == "ldaps" ? _("LDAPS") : _("LDAP")
      %td{:onclick => remote_function(:url => {:action => 'ls_select', :id => entry_idx, :field => "port", :domain_id => domain_id}), :title => t}
        = entry[:port]
      %td{:title => t}
        = link_to(button_tag(_('Validate'),
                             :class => "btn btn-primary",
                             :alt   => t = _("Validate the LDAP Settings by binding with the Host")),
                  {:action    => "ldap_domain_edit",
                   :button    => "verify",
                   :id        => entry_idx,
                   :domain_id => domain_id},
                  "data-miq_sparkle_on"  => true,
                  "data-miq_sparkle_off" => true,
                  :remote                => true,
                  :title                 => t,
                  :type                  => "submit")
