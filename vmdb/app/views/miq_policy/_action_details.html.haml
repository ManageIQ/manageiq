#action_details_div
  - if @action
    #action_info_div
      = render :partial => "layouts/flash_msg"
      %h3=_('Basic Information')
      %table.style1
        - if @edit
          - # Don't show description unless in edit mode
          - url = url_for(:action => 'action_field_changed', :id => "#{@action.id || 'new'}")
          %tr
            %td.key=_('Description')
            %td
              - if @edit
                = text_field_tag("description",
                  @edit[:new][:description],
                  :maxlength         => MAX_DESC_LEN,
                  "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
                = javascript_tag(javascript_focus('description'))
              - else
                = h(@action.description)
        %tr
          %td.key=_('Action Type')
          %td
            - if @edit
              = select_tag('miq_action_type',
                options_for_select([["<#{_('Choose')}>", nil]] + MiqAction::TYPES.invert.sort, @edit[:new][:action_type]),
                "data-miq_sparkle_on"  => true,
                "data-miq_sparkle_off" => true,
                "data-miq_observe"     => {:url => url}.to_json)
            - else
              = h(@action.action_type == "default" ? "Default" : MiqAction::TYPES[@action.action_type])
      %hr
      - if @edit
        = render :partial => "action_options"
      - else
        - case @action.action_type
        - when "create_snapshot"
          %h3=_('Snapshot Settings')
          %table.style1
            %tr
              %td.key=_('Name')
              %td
                = h(@action.options[:name])
          %hr
        - when "delete_snapshots_by_age"
          %h3=_('Snapshot Age Settings')
          %table.style1
            %tr
              %td.key=_('Delete if older than')
              %td
                = h(SNAPSHOT_AGES[@action.options[:age]])
          %hr
        - when "custom_automation"
          %h3=_('Custom Automation')
          %table.style1
            %tr
              %td{:width => '50%'}
                %fieldset
                  %h3=_('Object Details')
                  %table.style1
                    %tr
                      %td.key=_('Starting Message')
                      %td
                        = h(@action.options[:ae_message])
                    %tr
                      %td.key=_('Request')
                      %td
                        = h(@action.options[:ae_request])
                %fieldset
                  %h3=_('Attribute/Value Pairs')
                  %table.style1
                    - if !@action.options[:ae_hash].blank?
                      - @action.options[:ae_hash].each do |k, v|
                        %tr
                          %td.key
                            = h(k)
                          %td
                            = h(v)
                    - else
                      =_('No Attribute/Value Pairs found')
          %hr
        - when "email"
          %h3=_('E-mail Settings')
          %table.style1
            %tr
              %td.key=_('From E-mail Address')
              %td
                = h(@action.options[:from])
            %tr
              %td.key=_('To E-mail Address')
              %td
                = h(@action.options[:to])
          %hr
        - when "set_custom_attribute"
          %h3=_('Set Custom Attribute Settings')
          %table.style1
            %tr
              %td.key=_('Attribute Name')
              %td
                = h(@action.options[:attribute])
            %tr
              %td.key=_("Value to Set")
              %td
                = h(@action.options[:value])
          %hr
        - when "reconfigure_cpus"
          %h3=_("Reconfigure CPU")
          %table.style1
            %tr
              %td.key=_("Number of CPU's")
              %td
                = h(@action.options[:value])
          %hr
        - when "reconfigure_memory"
          %h3=_("Reconfigure Memory")
          %table.style1
            %tr
              %td.key=_("Memory Size")
              %td
                = "#{h(@action.options[:value])} MB"
          %hr
        - when "tag"
          %h3=_("Applied Tag")
          %table.style1
            %tr
              %td.key=_("Tag")
              %td
                = h(Classification.tag2human(@action.options[:tags].first))
          %hr
        - when "snmp_trap"
          %h3=_("SNMP Trap")
          %table.style1
            %tr
              %td.key=title_for_host
              %td
                = h(@action.options[:host])
            %tr
              %td.key=_("Version")
              %td
                = h(@action.options[:snmp_version])
            - trap_text = @action.options[:snmp_version] == "v1" || @action.options[:snmp_version].nil? ? _("Trap Number") : _("Trap Object ID")
            %tr
              %td.key
                = trap_text
              %td
                = h(@action.options[:trap_id])
          %hr
          %h3=_("Variables")
          - if @action.options.fetch(:variables, []).empty?
            = render :partial => 'layouts/info_msg', :locals => {:message => _('No variables configured.')}
          - else
            %table.table.table-striped.table-bordered.table-hover
              %thead
                %tr
                  %th=_('Object ID')
                  %th=_('Type')
                  %th=_('Value')
              %tbody
                - @action.options[:variables].each do |var|
                  - unless var[:oid].blank?
                    %tr
                      %td
                        = h(var[:oid])
                      %td
                        = h(var[:var_type])
                      %td
                        = h(var[:value])
          %hr
        - when "assign_scan_profile"
          %h3=_("Analysis Profile")
          %table.style1
            %tr
              %td.key=_("Assigned Analysis Profile")
              %td
                = h(@action.options[:scan_item_set_name])
          %hr
        - when "evaluate_alerts"
          %h3=_("Alerts to Evaluate")
          - if @temp[:alert_guids].empty?
            = render :partial => 'layouts/info_msg', :locals => {:message => _("No Alerts have been selected.")}
          - else
            %table.table.table-striped.table-bordered.table-hover
              %tbody
                - @temp[:alert_guids].sort_by(&:description).each do |alert|
                  - id = "al-#{to_cid(alert.id)}"
                  %tr{:title => _('View This Alert'),
                    :onclick => remote_function(:url => "/miq_policy/x_show/#{id}?accord=alert")}
                    %td.narrow
                      %img{:src => "/images/icons/new/miq_alert.png"}
                    %td
                      = alert.description
          %hr
        - when "inherit_parent_tags"
          %h3=_("Inherit Tags")
          %table.style1
            %tr
              %td.key=_("Parent Type")
              %td
                = h(ui_lookup(:table => @action.options[:parent_type]))
            %tr
              %td.key=_("Categories")
              %td= h(@temp[:cats])
          %hr
        - when "remove_tags"
          %h3=_("Remove Tags")
          %table.style1
            %tr
              %td.key=_("Categories")
              %td
                = h(@temp[:cats])
          %hr

        - if x_active_tree == :action_tree
          %h3=_("Assigned to Policies")
          - if @action_policies.empty?
            = render :partial => 'layouts/info_msg', :locals => {:message => _("This Action is not assigned to any Policies.")}
          - else
            %table.table.table-striped.table-bordered.table-hover
              %tbody
                - @action_policies.each do |p|
                  - id = "xx-#{p.mode.downcase}_xx-#{p.mode.downcase}-#{p.towhat.downcase}_p-#{to_cid(p.id)}"
                  %tr{:title => _("Click to view Policy"),
                    :onclick => remote_function(:url => "/miq_policy/x_show/#{id}?accord=policy")}
                    %td.narrow
                      - src = "#{p.towhat.downcase}#{p.active ? '' : '_inactive'}"
                      %img{:src => "/images/icons/new/miq_policy_#{src}.png"}
                    %td
                      = p.description
          %hr
