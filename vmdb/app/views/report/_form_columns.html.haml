- url = url_for(:action => 'form_field_changed', :id => "#{@edit[:rpt_id] || 'new'}")
#columns_div
  = form_tag(:action => 'create', :id => "report_columns_form") do
    %p.legend
      = _('Configure Report Columns')
    %table.style1
      %tr
        %td.key
          = _('* Base the report on')
        %td
          = select_tag('chosen_model',
            options_for_select(@edit[:models].sort, @edit[:new][:model]),
            :multiple              => false,
            :class                 => "widthed",
            "data-miq_sparkle_on"  => true,
            "data-miq_sparkle_off" => true,
            "data-miq_observe"     => {:url => url}.to_json)
      - if model_report_type(@edit[:new][:model]) == :performance
        = render :partial => "form_columns_performance"
      - elsif model_report_type(@edit[:new][:model]) == :trend
        = render :partial => "form_columns_trend"
    - unless model_report_type(@edit[:new][:model]) == :trend
      = render :partial => "column_lists"
    %strong
      = _('* Caution: Changing these fields will clear all selected values below them!')
    %hr
      %p.legend
        = _('Report Creation Timeout')
      %table.style1
        %tr
          %td.key
            = _('Cancel after')
          %td
            - opts = [["<#{_('System Default')}>", nil]] + (1..6).map { |i| [n_('%s Hour', '%s Hours', i) % i, i.hours] }
            = select_tag('chosen_queue_timeout',
              options_for_select(opts, @edit[:new][:queue_timeout]),
              :multiple              => false,
              :class                 => "widthed",
              "data-miq_sparkle_on"  => true,
              "data-miq_sparkle_off" => true,
              "data-miq_observe"     => {:url => url}.to_json)
    %hr
