= render :partial => "layouts/flash_msg", :locals => {:div_num => "_report_list"}
- if @sb[:active_tab] == "report_info"
  - if @sb[:miq_report_id] && @miq_report
    %p.legend
      = @miq_report.name
    %table.style1
      %tbody
        %tr
          %td.key
            = _('Title')
          %td.notwide
            = @miq_report.title
        - if @miq_report.conditions
          %tr
            %td.key
              = _('Primary (Record) Filter')
            %td.notwide
              = @miq_report.conditions.to_human
        - if @miq_report.display_filter
          %tr
            %td.key
              = _('Secondary (Display) Filter')
            %td.notwide
              = @miq_report.display_filter.to_human
        - if @miq_report.sortby
          - sortby = []
          - @miq_report.sortby.each do |s|
            - sortby.push(Dictionary::gettext(s, :type => :column, :notfound => :titleize))
          %tr
            %td.key
              = _('Sort By')
            %td.notwide
              = sortby.join(", ")
        - if @miq_report.graph
          %tr
            %td.key
              = _('Chart')
            %td.notwide
              = @miq_report.graph[:type]
        %tr
          %td.key
            = _('Based On')
          %td.notwide
            = Dictionary::gettext(@miq_report.db, :type => :model, :notfound => :titleize)
        %tr
          %td.key
            = _('User')
          %td.notwide
            = @miq_report.user ? @miq_report.user.userid : ""
        %tr
          %td.key
            = Dictionary::gettext("MiqGroup", :type => :model, :notfound => :titleize)
          %td.notwide
            = @miq_report.miq_group ? @miq_report.miq_group.description : ""
        %tr
          %td.key
            = _('Updated On')
          %td.notwide
            = format_timezone(@miq_report.updated_on, Time.zone, "gtl")
    %hr
  %p.legend
    = _('Schedules')
  - if @temp[:schedules].blank?
    = render :partial => 'layouts/info_msg', :locals => {:message => _("Report is not Scheduled.")}
  - else
    %table.style3
      %thead
        %th.icon
        %th
          = _('Name')
        %th
          = _('Description')
        %th
          = _('Active')
        %th
          = _('Interval')
        %th
          = _('Last Run Time')
        %th
          = _('Next Run Time')
        - if session[:userrole] == "super_administrator"
          %th
            = _('Userid')
        %th
          = _('Zone')
      %tbody
        - @temp[:schedules].each do |s|
          - tz = s.run_at && s.run_at[:tz] ? s.run_at[:tz] : session[:user_tz]
          - if role_allows(:feature => "miq_report_schedules")
            - params = {:class => cycle('row0', 'row1'), :title => _("View this Schedule"), :onmouseover => "this.style.cursor = 'pointer'",
              :onclick => remote_function(:url => "/report/x_show/msc-#{to_cid(s.id)}?accord=schedules")}
          - else
            - params = {}
          %tr{params}
            %td.icon{:nowrap => 1}
              %img{:src => "/images/icons/new/miq_schedule.png", :valign => "middle", :border => "0", :height => "20", :width => "20"}
            %td
              = s.name
            %td
              = s.description
            %td
              = s.enabled
            %td
              = s.run_at[:interval][:unit]
            %td
              - unless s.last_run_on.blank?
                %center
                  = h(format_timezone(s.last_run_on, tz, "gtl"))
            %td
              - unless s.next_run_on.blank?
                %center
                  = h(format_timezone(s.next_run_on, tz, "gtl"))
            - if session[:userrole] == "super_administrator"
              %td
                = s.userid
            %td
              = s.v_zone_name
  %p.legend
    = _('Widgets')
  - if @temp[:widget_nodes].nil? || (@temp[:widget_nodes] && @temp[:widget_nodes].empty?)
    = render :partial => 'layouts/info_msg', :locals => {:message => _("Report doesn't belong to Widgets.")}
  - else
    %table.style3
      %thead
        %th.icon
        %th
          = _('Title')
        %th
          = _('Description')
        %th
          = _('Enabled')
      %tbody
        - @temp[:widget_nodes].each do |w|
          - if role_allows(:feature => "miq_report_widget_editor")
            - params = {:class => cycle('row0', 'row1'), :onmouseover => "this.style.cursor='pointer';", :title => _("Click to view selected widget"),
              :onclick => remote_function(:url => "/report/x_show/xx-#{WIDGET_CONTENT_TYPE.invert[w.content_type]}_-#{to_cid(w.id)}?accord=widgets")}
          - else
            - params = {}
          %tr{params}
            %td.icon{:nowrap => 1}
              %img{:src => "/images/icons/new/report_widget.png", :valign => "middle", :border => "0", :height => "20", :width => "20"}
            %td
              = h(w.title)
            %td
              = h(w.description)
            %td
              = h(w.enabled)
