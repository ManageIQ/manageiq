# Kickstart file automatically generated by anaconda.

#version=DEVEL
install
url --url=http://mirror.centos.org/centos/6/os/x86_64/
repo --name=extras --baseurl=http://mirror.centos.org/centos/6/extras/x86_64/
repo --name=epel --baseurl=http://dl.fedoraproject.org/pub/epel/6Server/x86_64/
# http://wiki.centos.org/AdditionalResources/Repositories/SCL
repo --name=SCL --baseurl=http://mirror.centos.org/centos/6/SCL/x86_64/

repo --name=manageiq-scl --baseurl=http://copr-be.cloud.fedoraproject.org/results/jrafanie/manageiq-scl/epel-6-x86_64/

lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp
rootpw  --iscrypted $1$DZprqvCu$mhqFBjfLTH/PVvZIompVP/
firewall --service=ssh --port=80,443,5432
authconfig --enableshadow --passalgo=sha512
selinux --enforcing
timezone --utc America/New_York
bootloader --location=mbr --driveorder=vda --append="crashkernel=auto rhgb quiet"

# disk layout
zerombr
clearpart       --all --drives=vda

part pv.1             --ondrive=vda                     --size=16384
part /boot            --ondrive=vda                     --size=512   --fstype=ext4
part /var/www/miq_tmp --ondrive=vda                     --size=10240 --fstype=ext4 --fsoptions="rw,noatime,data=writeback,barrier=0,nobh"
part pv.2             --ondrive=vda                     --size=10240 --grow

volgroup vg_system    --pesize=4096 pv.1
logvol /              --name=lv_os   --vgname=vg_system --size=10240 --fstype=ext4
logvol swap           --name=lv_swap --vgname=vg_system --size=4096  --grow

volgroup vg_data      --pesize=4096 pv.2
logvol /opt/rh/postgresql92/root/var/lib/pgsql/data --name=lv_pg --vgname=vg_data --size=8192 --grow --fstype=ext4

reboot

%packages
@base --nodefaults
@server-policy --nodefaults
@development tools

centos-release-SCL # http://mirror.centos.org/centos/6/extras/x86_64/Packages/centos-release-SCL-6-5.el6.centos.x86_64.rpm
epel-release       # http://dl.fedoraproject.org/pub/epel/6Server/x86_64/epel-release-6-8.noarch.rpm

createrepo
freeipmi
fuse-libs
httpd
ipmitool
libxml2-devel                    # For nokogiri gem
libxslt-devel                    # For nokogiri gem
lshw                             # From epel
memcached
mod_ssl
net-snmp
net-snmp-libs
net-snmp-utils
nfs-utils
nodejs010-nodejs                 # used for asset pipeline asset compilation
OpenIPMI
openslp-devel                    # build requires
openssl-devel                    # lib build requires
portmap
postgresql92-postgresql          # appliance section
postgresql92-postgresql-devel    # for pg gem
postgresql92-postgresql-server   # appliance section
qpid-cpp-client-ssl              # Enable AMQP SSL connections: https://github.com/ManageIQ/cfme/pull/2150
ruby193-ruby
ruby193-ruby-devel               # build requires
scl-utils-build                  # build requires
yum-utils
zip                              # build requires
zlib-devel                       # lib build requires

# bundler has some downstream patches we need or shared objects are not found
ruby193-rubygem-bundler
ruby193-rubygem-net-http-persistent # bundler rpm dependency
ruby193-rubygem-thor                # bundler rpm dependency

# thin has some downstream patches we need or thin_parser is not found
ruby193-rubygem-thin
ruby193-rubygem-daemons      # thin rpm dependency
ruby193-rubygem-eventmachine # thin rpm dependency
ruby193-rubygem-rack         # thin rpm dependency

# TODO: prototype-rails initializer wants to load minitest/unit, which exists as a separate gem/rpm in rhel/centos/fedora:
# Fix prototype rails initializer and determine if we really need the separate minitest gem/rpm
ruby193-rubygem-minitest

<% if @target == "ovirt" %>
ovirt-guest-agent
<% elsif @target == "vsphere" %>
open-vm-tools
<% end %>

ruby193-rubygem-qpid_messaging

# exclude these defaults from the @core group, with a few (commented) exceptions
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
#efibootmgr
#grub
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6050-firmware
#kernel-firmware
-libertas-usb8388-firmware
#postfix
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-ql2500-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware
-dracut-fips
-dracut-network
%end

%post --log=/root/anaconda-post.log

# Setup private/public ssh throwaway keys while we're private:
mkdir -p /root/.ssh
cat <<'EOF' > /root/.ssh/id_rsa
-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAsS9AzeaSc/mjB2o+/v4HmAqn/Hrq8U630qYlHu3ctfP32SYf
OyseR5pfgXWf2H+/85y6XCgv7AMMNpnWKeDfAWhMw5dmjrcWrqBPRvcjkApLQii4
gnlQpsxn342LTcY2LYAA/81l1cCniSUIkWT3HAkV1EhnAn7Goqbsy3Rh10qf2UiN
teto6oQ73BGDsFrNMZdGq9gIfCp17QpFdjjnKEyCRzH9VoRrMsFLE6Trq1qe2j7E
9qwGsi6he+4Lp8uU6PByfaR/5GTQ6msGrtNadAUxcerb+UWgY6Jutk/sF3Lx7Sa8
ddpXNC7KF6OiFMt55jHynq0UsFb9OhcXQ3s4KwIBIwKCAQEAiK9sgZSc3R+ppqJr
HHrSqH0/wsU45gmGfe3iHyyFsO9nbQAmuJ2bBAlfnmINmGKMwz5j4LFJii48nyY3
f2RUQuoPVQ5lDwJEspjssxZr5CUyvgIn759qGkXpuxVrdoL2mCDq0/Y4nZSef717
o1yEHPEQ1vYGUmHMbtiKyNYfl3LMEDxkcYSm+kUB6sd2Jm4LPAGGUns6EDcYAYpW
4sMNngFNnW4XvkvWqE9vwgTppVLJAzwmwmQ8hXIqz3DB41LxQ9Z3fyw9gTj7lQJ7
xNx6vyyvRud/ZTgIvUXVejl+uugFdYEugSnrfTapT0ZffMlevZsP+to1+FE+kAhs
r5YGqwKBgQDdicX//GoUGrCgWEvZzo2d5eAI43si8Op4K1FTFal3AOGFQqf2VloG
/TF7Tr+F7JtYu2EDCv1apCtWUa4dM2dLpZEF1C6rXg7HjbRY2mqIh1LAmZjfeleC
UCKkeqCmf7P6ieN/X1DqHlKNVm2ial8Q4DwWZxoS4BULsDXcTO+UUQKBgQDMvzRE
aLjuIxtWqMMaNLnLZjoBcGfTKmDeo0f9AbiEbY85l0cql7UeisoGAkdTULxBjHNW
ycRwkG9Mjx+K0nQHB+EdnE9x1VgFm42Ipc/BB9dUvscU+7hxj+xgK3e0RqUpMzz3
UqhrOqhXzDmW2UFy87sTWrEHtEpnjMzT//iRuwKBgQDXNWFB0KGP32nAVcYGyKbT
5p8ek9a0On1eyv6LOZ1PCCuIxGimJ/+vBJZ3yNdO5di8mMSj3so6y11MidxW4XpJ
fEO8hPoi0GYg8A5Hr5qwg3T1nIXgaDfAaxpWowJ12yPdcAGRrQzGLBWt3u4ovxqF
bB0dE7Ltw7ysRMabffAMawKBgQCd8pYI4xJRTkhKKmqfL/0Kn1FRkTomjmf8NNEi
QyfxIVE7DkzXttwtgQI/JlRHlg2RptyiCV0GYMrjSdaBCL/oKqZYq8hB3xgEU20u
5k/PbHLpmnxSBANQSnSEs9FfLy7z5bKwKdJhWSLHYwfaxNq3w1XNGhOJmbW9mIDA
zMcRVQKBgQCmVmD7x85hx+nT1cKnnMKTFRGUh9ktMT0pqOnQJP8l94YeL4lbPwuP
PoXdJ9T/6oTuYFG4EHtPsyxQevSzvei7BynnLan9CyaLdyES4xLMvq4u5hoOZAfD
ccRY31BgLZl2Gr5/rsnppgNZg0GJ1LfGd4Bb8HDSW9aplsT2uqakLg==
-----END RSA PRIVATE KEY-----
EOF

cat <<'EOF' > /root/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAsS9AzeaSc/mjB2o+/v4HmAqn/Hrq8U630qYlHu3ctfP32SYfOyseR5pfgXWf2H+/85y6XCgv7AMMNpnWKeDfAWhMw5dmjrcWrqBPRvcjkApLQii4gnlQpsxn342LTcY2LYAA/81l1cCniSUIkWT3HAkV1EhnAn7Goqbsy3Rh10qf2UiNteto6oQ73BGDsFrNMZdGq9gIfCp17QpFdjjnKEyCRzH9VoRrMsFLE6Trq1qe2j7E9qwGsi6he+4Lp8uU6PByfaR/5GTQ6msGrtNadAUxcerb+UWgY6Jutk/sF3Lx7Sa8ddpXNC7KF6OiFMt55jHynq0UsFb9OhcXQ3s4Kw== cfme.build@gmail.com
EOF

cat <<'EOF' > /root/.ssh/known_hosts
github.com,www.github.com,192.30.252.131 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
EOF

# Make the private key unreadable by others
chmod 600 /root/.ssh/id_rsa

ls -l /root/.ssh/*

ping -c 3 -i 1 www.github.com
echo "ping returned: $?"

ssh -vT -o StrictHostKeyChecking=no git@www.github.com
echo "ssh to github returned: $?"

www_root="/var/www"
app_root="$www_root/miq"

rm -rf $app_root

git clone git@github.com:ManageIQ/manageiq.git $app_root
pushd $app_root

#### TODO: Refactor this so the cfme rpm and the upstream share much of this code.

# Use ruby here: system/miq_system_update.rb???
mkdir -p $app_root/vmdb/log/apache
mkdir -p /etc/httpd/conf.d

#symlink some executables
mkdir -p /bin
pushd ./system/LINK/bin
  for filename in `ls`; do
    ln -vs $app_root/system/LINK/bin/$filename /bin/$filename
  done
popd

#symlink some configuration files
pushd ./system/LINK/etc
  for dirname in `ls`; do
    pushd ./$dirname
      mkdir -p /etc/$dirname
      for filename in `ls`; do
        ln -vs $app_root/system/LINK/etc/$dirname/$filename /etc/$dirname/$filename
      done
    popd
  done
popd

pushd ./system/LINK
  ln -vs $app_root/system/LINK/.toprc /.toprc
popd

#copy etc dir from COPY
cp -vr system/COPY/etc /
popd

# Add copr repository for any updates
pushd /etc/yum.repos.d/
  wget http://copr.fedoraproject.org/coprs/jrafanie/manageiq-scl/repo/epel-6-x86_64/jrafanie-manageiq-scl-epel-6-x86_64.repo
popd

# Add the rubygems binary path to the PATH so we can find bundle and friends:
cat <<'EOF' >> /etc/default/evm
export PATH=$PATH:/opt/rh/ruby193/root/usr/local/bin
EOF

cat /etc/default/evm

cat <<'EOF' > /root/.gemrc
---
gem: --no-rdoc --no-ri
EOF

# https://github.com/plataformatec/devise/issues/909
# Verify this is needed to fix bundle install issue: ArgumentError: invalid byte sequence in US-ASCII
# Perhaps during kickstart the locale/lang is not set and defaults to US-ASCII.
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

/var/www/miq/system/cfme-setup.sh

# Kickstart doesn't load sysctl's kernel runtime memory parameters found in
# /etc/sysctl.conf, hence there is not enough shared memory available to start
# PostgreSQL in the appliance_console_cli step below:
# kernel.shmmax = 33554432 # 32 MB
# kernel.shmall = 2097152  #  2 MB
#
# Since the normal /etc/sysctl.conf provides enough shared memory, load it.
sysctl -p "/etc/sysctl.conf"

[[ -s /etc/default/evm ]] && source /etc/default/evm
pushd ./build
  rake build:build_file
popd

appliance_console_cli --region 0 --internal --key
%end
