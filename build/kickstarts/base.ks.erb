# Kickstart file automatically generated by anaconda.
# Run the text based installer to see dependency info in screenshots
text

#version=DEVEL
install

# build time repos
# these repos are used to install the initial packages

# repo to install the OS
url --url=http://mirror.centos.org/centos/6/os/x86_64/
repo --name=updates --baseurl=http://mirror.centos.org/centos/6/updates/x86_64/

# repos to install packages in %packages section
repo --name=extras --baseurl=http://mirror.centos.org/centos/6/extras/x86_64/
repo --name=epel --baseurl=http://dl.fedoraproject.org/pub/epel/6Server/x86_64/
# http://wiki.centos.org/AdditionalResources/Repositories/SCL
repo --name=SCL --baseurl=http://mirror.centos.org/centos/6/SCL/x86_64/

# repos to install packages not found in the os
# Please also add to "post install repos" around line 210.
repo --name=manageiq-scl --baseurl=http://copr-be.cloud.fedoraproject.org/results/jrafanie/manageiq-scl/epel-6-x86_64/
repo --name=ipa --baseurl=http://copr-be.cloud.fedoraproject.org/results/adelton/identity_demo/epel-6-x86_64/
repo --name=certmonger --baseurl=http://copr-be.cloud.fedoraproject.org/results/nalin/certmonger/epel-6-x86_64/

lang en_US.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp
rootpw  --iscrypted $1$DZprqvCu$mhqFBjfLTH/PVvZIompVP/

# Note: 5900-5999 port range is for vnc and kickstart doesn't provide a way to specify a range
firewall --enabled --port=22:tcp,80:tcp,80:udp,443:tcp,443:udp,5432:tcp,5900:tcp,5901:tcp,5902:tcp,5903:tcp,5904:tcp,5905:tcp,5906:tcp,5907:tcp,5908:tcp,5909:tcp,5910:tcp,5911:tcp,5912:tcp,5913:tcp,5914:tcp,5915:tcp,5916:tcp,5917:tcp,5918:tcp,5919:tcp,5920:tcp,5921:tcp,5922:tcp,5923:tcp,5924:tcp,5925:tcp,5926:tcp,5927:tcp,5928:tcp,5929:tcp,5930:tcp,5931:tcp,5932:tcp,5933:tcp,5934:tcp,5935:tcp,5936:tcp,5937:tcp,5938:tcp,5939:tcp,5940:tcp,5941:tcp,5942:tcp,5943:tcp,5944:tcp,5945:tcp,5946:tcp,5947:tcp,5948:tcp,5949:tcp,5950:tcp,5951:tcp,5952:tcp,5953:tcp,5954:tcp,5955:tcp,5956:tcp,5957:tcp,5958:tcp,5959:tcp,5960:tcp,5961:tcp,5962:tcp,5963:tcp,5964:tcp,5965:tcp,5966:tcp,5967:tcp,5968:tcp,5969:tcp,5970:tcp,5971:tcp,5972:tcp,5973:tcp,5974:tcp,5975:tcp,5976:tcp,5977:tcp,5978:tcp,5979:tcp,5980:tcp,5981:tcp,5982:tcp,5983:tcp,5984:tcp,5985:tcp,5986:tcp,5987:tcp,5988:tcp,5989:tcp,5990:tcp,5991:tcp,5992:tcp,5993:tcp,5994:tcp,5995:tcp,5996:tcp,5997:tcp,5998:tcp,5999:tcp

authconfig --enableshadow --passalgo=sha512
selinux --enforcing
timezone --utc America/New_York
bootloader --location=mbr --driveorder=vda --append="crashkernel=auto rhgb quiet"

# disk layout
zerombr
clearpart       --all --drives=vda

part pv.1             --ondrive=vda                     --size=16384
part /boot            --ondrive=vda                     --size=512   --fstype=ext4
part /var/www/miq_tmp --ondrive=vda                     --size=10240 --fstype=ext4 --fsoptions="rw,noatime,data=writeback,barrier=0,nobh"
part pv.2             --ondrive=vda                     --size=10240 --grow

volgroup vg_system    --pesize=4096 pv.1
logvol /              --name=lv_os   --vgname=vg_system --size=10240 --fstype=ext4
logvol swap           --name=lv_swap --vgname=vg_system --size=4096  --grow

volgroup vg_data      --pesize=4096 pv.2
logvol /opt/rh/postgresql92/root/var/lib/pgsql/data --name=lv_pg --vgname=vg_data --size=8192 --grow --fstype=ext4

reboot

%packages
@base --nodefaults
@server-policy --nodefaults
@development tools

centos-release-SCL # http://mirror.centos.org/centos/6/extras/x86_64/Packages/centos-release-SCL-6-5.el6.centos.x86_64.rpm
epel-release       # http://dl.fedoraproject.org/pub/epel/6Server/x86_64/epel-release-6-8.noarch.rpm

createrepo
freeipmi
fuse-libs
httpd
ipmitool

# ruby dependencies auto-installed by ruby-install
# prefer to have these dependencies explicitly required in the kickstart
# https://github.com/postmodern/ruby-install/blob/8957e0d1a52d59b45cf48cef8f15a1d8ed921cd4/share/ruby-install/ruby/dependencies.txt
automake
gcc
gdbm-devel
libffi-devel
libyaml-devel
ncurses-devel
openssl-devel
readline-devel
zlib-devel

libxml2-devel                    # For nokogiri gem
libxslt-devel                    # For nokogiri gem
lshw                             # From epel
memcached
mod_ssl
net-snmp
net-snmp-libs
net-snmp-utils
nfs-utils
nodejs010-nodejs                 # used for asset pipeline asset compilation
OpenIPMI
openslp-devel                    # build requires
portmap
postgresql92-postgresql          # appliance section
postgresql92-postgresql-devel    # for pg gem
postgresql92-postgresql-server   # appliance section
qpid-cpp-client-ssl              # Enable AMQP SSL connections: https://github.com/ManageIQ/cfme/pull/2150
scl-utils-build                  # build requires
yum-utils
zip                              # build requires

# IPA Identity RPMs for External Authentication
c-ares
ipa-client
sssd-dbus
mod_intercept_form_submit
mod_auth_kerb
mod_authnz_pam
mod_lookup_identity
mod_lookup_identity-selinux      # Only needed for CentOS 6.5.  It will not be needed on CentOS 6.6 and later.

# IPA RPMs for certificate support
ipa-admintools
certmonger
sneakernet_ca

cloud-init

<% if @target == "ovirt" %>
ovirt-guest-agent
<% elsif @target == "vsphere" %>
open-vm-tools
<% end %>

# exclude these defaults from the @core group, with a few (commented) exceptions
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
#efibootmgr
#grub
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6050-firmware
#kernel-firmware
-libertas-usb8388-firmware
#postfix
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-ql2500-firmware
-rt61pci-firmware
-rt73usb-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware
-dracut-fips
-dracut-network
%end

%post --log=/root/anaconda-post.log

# Drop packets for INPUT/FORWARD that aren't whitelisted in the firewall setup
for IPT in /etc/sysconfig/iptables /etc/sysconfig/iptables.old ; do
  if [ -f $IPT ] ; then
     sed -i "s/INPUT ACCEPT/INPUT DROP/g" $IPT
     sed -i "s/FORWARD ACCEPT/FORWARD DROP/g" $IPT
  fi
done

www_root="/var/www"
app_root="$www_root/miq"

rm -rf $app_root

git clone <%= @git_checkout.remote %> $app_root
pushd $app_root

git checkout <%= @git_checkout.branch %>
git reset --hard <%= @git_checkout.commit_sha %>

#### TODO: Refactor this so the cfme rpm and the upstream share much of this code.

mkdir -p $app_root/vmdb/log/apache
mkdir -p /etc/httpd/conf.d

#symlink some executables
mkdir -p /bin
pushd ./system/LINK/bin
  for filename in `ls`; do
    ln -vs $app_root/system/LINK/bin/$filename /bin/$filename
  done
popd

#symlink some configuration files
pushd ./system/LINK/etc
  for dirname in `ls`; do
    pushd ./$dirname
      mkdir -p /etc/$dirname
      for filename in `ls`; do
        ln -vs $app_root/system/LINK/etc/$dirname/$filename /etc/$dirname/$filename
      done
    popd
  done
popd

pushd ./system/LINK
  ln -vs $app_root/system/LINK/.toprc /.toprc
popd

#copy etc dir from COPY
cp -vr system/COPY/etc /
#copy var dir from COPY
cp -vr system/COPY/var /
popd

# post install repos
# yum update uses these repos to update and reinstall packages.
# Please also add to "build time repos" around line 20

pushd /etc/yum.repos.d/
  wget http://copr.fedoraproject.org/coprs/jrafanie/manageiq-scl/repo/epel-6-x86_64/jrafanie-manageiq-scl-epel-6-x86_64.repo
  wget http://copr.fedoraproject.org/coprs/adelton/identity_demo/repo/epel-6/adelton-identity_demo-epel-6.repo
  wget http://copr.fedoraproject.org/coprs/nalin/certmonger/repo/epel-6/nalin-certmonger-epel-6.repo
popd

wget -O ruby-install.tar.gz https://github.com/postmodern/ruby-install/archive/v0.5.0.tar.gz
tar -xzvf ruby-install.tar.gz
rm -f ruby-install.tar.gz
cd ruby-install*/
make install

# Note, we hardcode the ruby patch level for now.
# Once the --update option is available, we could ask
# ruby-install to "learn" what new rubies are available
# See: https://github.com/postmodern/ruby-install/issues/175
/usr/local/bin/ruby-install ruby 2.0.0-p645 -- --disable-install-doc --enable-shared

# Add the ruby binaries path to the PATH so we can find bundle and friends:
ruby_bin_path=(/opt/rubies/ruby-2.0.0*/bin)
echo "export PATH=\$PATH:$ruby_bin_path" >> /etc/default/evm

cat /etc/default/evm

echo "gem: --no-ri --no-rdoc --no-document" > /root/.gemrc

echo "export BUNDLE_WITHOUT=$BUNDLE_WITHOUT:qpid" >> /etc/default/evm_bundler

# https://github.com/plataformatec/devise/issues/909
# Verify this is needed to fix bundle install issue: ArgumentError: invalid byte sequence in US-ASCII
# Perhaps during kickstart the locale/lang is not set and defaults to US-ASCII.
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

[[ -s /etc/default/evm ]] && source /etc/default/evm
gem install bundler -v "~>1.5"

pushd /var/www/miq/vmdb
  bundle install
popd

/var/www/miq/system/cfme-setup.sh

# Kickstart doesn't load sysctl's kernel runtime memory parameters found in
# /etc/sysctl.conf, hence there is not enough shared memory available to start
# PostgreSQL in the appliance_console_cli step below:
# kernel.shmmax = 33554432 # 32 MB
# kernel.shmall = 2097152  #  2 MB
#
# Since the normal /etc/sysctl.conf provides enough shared memory, load it.
sysctl -p "/etc/sysctl.conf"

# Remove the key from the source code, we'll generate on first boot
rm -f /var/www/miq/vmdb/certs/v2_key

# Enable ssh password login via cloud-init
[[ -s /etc/cloud/cloud.cfg ]] && sed -i "s/^ssh_pwauth:.*$/ssh_pwauth: True/g" /etc/cloud/cloud.cfg

[[ -s /etc/default/evm ]] && source /etc/default/evm
appliance_console_cli --region 0 --internal --password smartvm
%end
