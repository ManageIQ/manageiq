-# wf          The workflow object currently in use
-# dialog      The name (symbol) of the selected dialog

- current_tab = @edit && @edit[:new] ? @edit[:new][:current_tab_key] : @options[:current_tab_key]
%br

- if dialog == current_tab
  - case current_tab
  - when :requester
    - keys = [:owner_email, :owner_first_name, :owner_last_name, :owner_address, :owner_city, :owner_state, :owner_zip, :owner_country, :owner_title, :owner_company, :owner_department, :owner_office, :owner_phone, :owner_phone_mobile, :request_notes]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog       => dialog,
        :label        => _("Request Information"),
        :keys         => keys})
    - keys = [:owner_manager, :owner_manager_mail, :owner_manager_mail]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => _("Manager"),
        :keys                       => keys})
  - when :purpose
    - keys = [:vm_tags]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => _("Select Tags to apply"),
        :keys                       => keys,
        :table_class                => "tagstable",
        :extra_table_attributes     => "cellspacing=1"})
  - when :service
    - keys = [:src_host_ids]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => title_for_host,
        :keys                       => keys,
        :extra_table_attributes     => "width=100%"})
    - keys = [:pxe_server_id, :pxe_image_id]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => _("PXE"),
        :keys                       => keys,
        :extra_table_attributes     => "width=100%"})
  - when :environment
    - keys = [:placement_ems_name]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => ui_lookup(:tables => "ext_management_system"),
        :prefix                     => "miq_request/",
        :keys                       => keys})
    - keys = [:placement_cluster_name]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => title_for_cluster,
        :prefix                     => "miq_request/",
        :keys                       => keys})
    - keys = [:attached_ds]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => _("Datastore"),
        :prefix                     => "miq_request/",
        :keys                       => keys})
  - when :customize
    - keys = [:root_password]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => _("Credentials"),
        :prefix                     => "miq_request/",
        :keys                       => keys})
    - keys = [:addr_mode, :hostname, :ip_addr, :subnet_mask, :gateway]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => _("IP Address Information"),
        :prefix                     => "miq_request/",
        :keys                       => keys})
    - keys = [:dns_servers, :dns_suffixes]
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => _("DNS"),
        :prefix                     => "miq_request/",
        :keys                       => keys})
    - keys = [:customization_template_id]
    = render(:partial => "prov_dialog_fieldset",
      :locals => {:workflow => wf,
        :dialog             => dialog,
        :label              => _("Customize Template"),
        :prefix             => "miq_request/",
        :keys               => keys})
    - show_customization_template_script = (@edit && @edit[:new] && @edit[:new][:customization_template_script]) || (@options && @options[:customization_template_script])
    - keys = [show_customization_template_script ? :customization_template_script : nil].compact
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => _("Selected Template Contents"),
        :prefix                     => "miq_request/",
        :keys                       => keys})
  - when :schedule
    - has_schedule_time = (@edit && @edit[:new] && @edit[:new][:schedule_type] && @edit[:new][:schedule_type][0] == "schedule") || (@options && @options[:schedule_type] && @options[:schedule_type][0] == "schedule")
    - keys = [:schedule_type, has_schedule_time ? :schedule_time : nil, :stateless].compact
    = render(:partial => "prov_dialog_fieldset",
      :locals         => {:workflow => wf,
        :dialog                     => dialog,
        :label                      => _("Schedule Info"),
        :keys                       => keys})
