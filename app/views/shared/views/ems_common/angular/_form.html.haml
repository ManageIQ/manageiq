- @angular_form = true

.form-horizontal{:id => "start_form_div", :style => "display:none"}
  = render :partial => "layouts/flash_msg"
  %div
    .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
      %label.col-md-2.control-label{"for" => "ems_name"}
        = _('Name')
      .col-md-8
        %input.form-control{"type"           => "text",
                            "id"             => "ems_name",
                            "name"           => "name",
                            "ng-model"       => "emsCommonModel.name",
                            "maxlength"      => "#{MAX_NAME_LEN}",
                            "required"       => "",
                            "checkchange"    => "",
                            "auto-focus"     => "",
                            "start-form-div" => "start_form_div"}
        %span.help-block{"ng-show" => "angularForm.name.$error.required"}
          = _("Required")

    .form-group{"ng-class" => "{'has-error': angularForm.emstype.$invalid}"}
      %label.col-md-2.control-label{"for" => "ems_type"}
        = _('Type')
      .col-md-8
        = select_tag('emstype',
                     options_for_select([["<#{_('Choose')}>", nil]] + @ems_types, disabled: ["<#{_('Choose')}>", nil]),
                     "ng-if"                       => "newRecord",
                     "ng-model"                    => "emsCommonModel.emstype",
                     "ng-change"                   => "providerTypeChanged()",
                     "id"                          => "ems_type",
                     "required"                    => "",
                     "checkchange"                 => "",
                     "selectpicker-for-select-tag" => "")
        %div{"ng-if" => "!newRecord"}
          %label.form-control{"type"        => "text",
                              "id"          => "ems_type",
                              "name"        => "emstype",
                              "ng-if"       => "!newRecord",
                              "readonly"    => true,
                              "style"       => "color: black; font-weight: normal;"}
            = @emstype_display


    .form-group{"ng-class" => "{'has-error': angularForm.provider_region.$invalid}", "ng-if" => "#{@provider_regions.keys.to_json}.includes(emsCommonModel.emstype)", "ng-switch" => "", "on" => "emsCommonModel.emstype"}
      %label.col-md-2.control-label{"for" => "ems_region"}
        = _('Region')
      .col-md-8
        - @provider_regions.each do |name, regions|
          = select_tag('provider_region',
                       options_for_select([["<#{_('Choose')}>", nil]] + regions, disabled: ["<#{_('Choose')}>", nil]),
                       "ng-model"                    => "emsCommonModel.provider_region",
                       "ng-switch-when"              => name,
                       "required"                    => "",
                       "checkchange"                 => "",
                       "selectpicker-for-select-tag" => "")

    .form-group{"ng-class" => "{'has-error': angularForm.project.$invalid}", "ng-if" => "emsCommonModel.emstype == 'gce'"}
      %label.col-md-2.control-label{"for" => "ems_project"}
        = _('Project')
      .col-md-8
        %input.form-control{"type"        => "text",
                            "id"          => "ems_project",
                            "name"        => "project",
                            "ng-model"    => "emsCommonModel.project",
                            "maxlength"   => "#{MAX_NAME_LEN}",
                            "required"    => "",
                            "checkchange" => ""}
        %span.help-block{"ng-show" => "angularForm.project.$error.required"}
          = _("Required")

    .form-group{"ng-class" => "{'has-error': angularForm.azure_tenant_id.$invalid}", "ng-if" => "emsCommonModel.emstype != '' && emsCommonModel.emstype == 'azure'"}
      %label.col-md-2.control-label{"for" => "ems_tenant_id"}
        = _('Tenant ID')
      .col-md-8
        %input.form-control{"type"                    => "text",
                            "id"                      => "ems_tenant_id",
                            "name"                    => "azure_tenant_id",
                            "ng-model"                => "emsCommonModel.azure_tenant_id",
                            "required"                => "",
                            "checkchange"             => "",
                            "prefix"                  => "default",
                            "reset-validation-status" => "default_auth_status"}
        %span.help-block{"ng-show" => "angularForm.azure_tenant_id.$error.required"}
          = _("Required")

    .form-group{"ng-class" => "{'has-error': angularForm.subscription.$invalid}", "ng-if" => "emsCommonModel.emstype != '' && emsCommonModel.emstype == 'azure'"}
      %label.col-md-2.control-label{"for" => "ems_subscription"}
        = _('Subscription ID')
      .col-md-8
        %input.form-control{"type"                    => "text",
                            "id"                      => "ems_subscription",
                            "name"                    => "subscription",
                            "ng-model"                => "emsCommonModel.subscription",
                            "checkchange"             => "",
                            "prefix"                  => "default",
                            "reset-validation-status" => "default_auth_status"}

    .form-group{"ng-class" => "{'has-error': angularForm.api_version.$invalid}", "ng-if" => "emsCommonModel.emstype == 'openstack' || emsCommonModel.emstype == 'openstack_infra'"}
      %label.col-md-2.control-label{"for" => "ems_api_version"}
        = _("API Version")
      .col-md-8
        = select_tag('api_version',
                     options_for_select(@openstack_api_versions),
                     "ng-model"                    => "emsCommonModel.api_version",
                     "id"                          => "ems_api_version",
                     "checkchange"                 => "",
                     "selectpicker-for-select-tag" => "")

    .form-group{"ng-class" => "{'has-error': angularForm.api_version.$invalid}",
                "ng-if"    => "emsCommonModel.emstype == 'openstack' || emsCommonModel.emstype == 'openstack_infra'"}
      %label.col-md-2.control-label{"for" => "ems_region_input"}
        = _('Region')
      .col-md-8
        %input.form-control{"type"                    => "text",
                            "id"                      => "ems_region_input",
                            "name"                    => "provider_region",
                            "ng-model"                => "emsCommonModel.provider_region",
                            "checkchange"             => ""}

    .form-group{"ng-class" => "{'has-error': angularForm.keystone_v3_domain_id.$invalid}", "ng-if" => "emsCommonModel.api_version == 'v3' && (emsCommonModel.emstype == 'openstack' || emsCommonModel.emstype == 'openstack_infra')"}
      %label.col-md-2.control-label{"for" => "ems_keystone_domain_id"}
        = _('Keystone V3 Domain ID')
      .col-md-8
        %input.form-control{"type"        => "text",
                            "id"          => "ems_keystone_domain_id",
                            "name"        => "keystone_v3_domain_id",
                            "ng-model"    => "emsCommonModel.keystone_v3_domain_id",
                            "required"    => true,
                            "checkchange" => ""}

    .form-group{"ng-class" => "{'has-error': angularForm.provider_id.$invalid}", "ng-if" => "emsCommonModel.emstype == 'openstack' && emsCommonModel.openstack_infra_providers_exist"}
      %label.col-md-2.control-label{"for" => "ems_infra_provider_id"}
        = _("Openstack Infra Provider")
      .col-md-8
        = select_tag('provider_id',
                     options_for_select([["<#{_('blank')}>", nil]] + @openstack_infra_providers.sort_by { |name, _name| name }),
                     "ng-model"                    => "emsCommonModel.provider_id",
                     "id"                          => "ems_infra_provider_id",
                     "checkchange"                 => "",
                     "selectpicker-for-select-tag" => "")

    .form-group{"ng-class" => "{'has-error': angularForm.zone.$invalid}"}
      %label.col-md-2.control-label{"for" => "ems_zone"}
        = _("Zone")
      .col-md-8
        - if @server_zones.length <= 1
          %input.form-control{"type"        => "text",
                              "id"          => "ems_zone",
                              "name"        => "zone",
                              "ng-model"    => "emsCommonModel.zone",
                              "maxlength"   => 15,
                              "required"    => "",
                              "checkchange" => "",
                              "readonly"    => true,
                              "style"       => "color: black;"}
        - else
          = select_tag('zone',
                       options_for_select(@server_zones.sort_by { |name, _name| name }),
                       "ng-model"                    => "emsCommonModel.zone",
                       "id"                          => "ems_zone",
                       "checkchange"                 => "",
                       "required"                    => "",
                       "selectpicker-for-select-tag" => "")

    .form-group{"ng-class" => "{'has-error': angularForm.host_default_vnc_port_start.$invalid}", "ng-if" => "emsCommonModel.emstype_vm"}
      %label.col-md-2.control-label{"for" => "ems_vnc_start_port"}
        = _('Host Default VNC Start Port')
      .col-md-8
        %input.form-control{"type"        => "text",
                            "id"          => "ems_vnc_start_port",
                            "name"        => "host_default_vnc_port_start",
                            "ng-model"    => "emsCommonModel.host_default_vnc_port_start",
                            "maxlength"   => 6,
                            "checkchange" => ""}
        %span.help-block{"ng-show" => "angularForm.name.$error.required"}
          = _("Required")

    .form-group{"ng-class" => "{'has-error': angularForm.host_default_vnc_port_end.$invalid}", "ng-if" => "emsCommonModel.emstype_vm"}
      %label.col-md-2.control-label{"for" => "ems_vnc_end_port"}
        = _('Host Default VNC End Port')
      .col-md-8
        %input.form-control{"type"        => "text",
                            "id"          => "ems_vnc_end_port",
                            "name"        => "host_default_vnc_port_end",
                            "ng-model"    => "emsCommonModel.host_default_vnc_port_end",
                            "maxlength"   => 6,
                            "checkchange" => ""}
        %span.help-block{"ng-show" => "angularForm.name.$error.required"}
          = _("Required")

  %hr
    - if controller_name == "ems_container"
      = render :partial => "/layouts/container_auth", :locals  => {:record => @ems}
    - else
      %div{"ng-if" => "emsCommonModel.emstype != '' && emsCommonModel.emstype == 'azure'"}
        %h3
          = _("Credentials")
        = render :partial => "/layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                 :locals  => {:record                 => @ems,
                              :ng_model               => "emsCommonModel",
                              :ng_reqd_userid         => true,
                              :ng_reqd_password       => true,
                              :ng_reqd_verify         => true,
                              :prefix                 => "default",
                              :validate_url           => @ems.id ? "update" : "create",
                              :id                     => @ems.id || "new",
                              :basic_info_needed      => true,
                              :userid_label           => _("Client ID"),
                              :password_label         => _("Client Key"),
                              :verify_label           => _("Confirm Client Key"),
                              :passwd_mismatch        => _("Client Keys do not match"),
                              :change_stored_password => _("Change stored client key"),
                              :cancel_password_change => _("Cancel client key change"),
                              :verify_title_off       => _("Tenant ID, Client ID and matching Client Key fields are needed to perform verification of credentials")}
      %div{"ng-if" => "emsCommonModel.emstype != '' && emsCommonModel.emstype != 'azure'"}
        = render :partial => "/layouts/angular/multi_auth_credentials", :locals  => {:record => @ems, :ng_model => "emsCommonModel"}

    = render :partial => "layouts/angular/x_edit_buttons_angular", :locals => {:record => @ems, :restful => true}
