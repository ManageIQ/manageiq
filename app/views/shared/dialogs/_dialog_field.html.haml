- url = url_for(:action => 'dialog_field_changed', :id => @edit[:rec_id] || "new") if @edit
- dialog_mode = @edit[:dialog_mode] if @edit

- case dialog_mode
- when :reconfigure
  - edit = field.reconfigurable
- when :review
  - edit = false
- else
  - edit = !@edit.nil?

.form-group{:id => "field_#{field.id}_tr"}
  %label.control-label.col-md-2{:title => field.description}
    = field.label
  .col-md-8{:title => field.description}
    - locals = {:edit => edit, :field => field, :url => url, :wf => wf}
    - case field.type
    - when 'DialogFieldTextBox'
      = render(:partial => "shared/dialogs/dialog_field_text_box", :locals => locals)

    - when 'DialogFieldTextAreaBox'
      = render(:partial => "shared/dialogs/dialog_field_text_area_box", :locals => locals)

    - when 'DialogFieldCheckBox'
      = render(:partial => "shared/dialogs/dialog_field_check_box", :locals => locals)

    - when 'DialogFieldDateControl', 'DialogFieldDateTimeControl'
      = render(:partial => "shared/dialogs/dialog_field_date_and_date_time_control", :locals => locals)

    - when "DialogFieldRadioButton"
      = render(:partial => "shared/dialogs/dialog_field_radio_button", :locals => locals)

    - when "DialogFieldDropDownList"
      = render(:partial => "shared/dialogs/dialog_field_drop_down_list", :locals => locals)

    - when 'DialogFieldButton'
      = button_tag(_("Save"), :class => edit ? 'btn btn-primary' : 'btn btn-primary btn-disabled')

    - when 'DialogFieldTagControl'
      - category_tags = DialogFieldTagControl.category_tags(field.category).map { |cat| [cat[:description], cat[:id]] }
      - if edit
        - if field.single_value?
          - select_values = dialog_dropdown_select_values(field, wf.value(field.name), category_tags)
          = select_tag(field.name,
                       options_for_select(select_values, wf.value(field.name)),
                       drop_down_options(field, url))
        - else
          = select_tag(field.name,
                       options_for_select(category_tags, wf.value(field.name)),
                       drop_down_options(field, url).merge(:multiple => true))

        :javascript
          dialogFieldRefresh.initializeDialogSelectPicker('#{field.name}', '#{field.id}', undefined, '#{url}', '#{field.trigger_auto_refresh}');

      - else
        - value = wf.value(field.name) || ''
        - classification_ids = value.split(',')
        = h(Classification.where(:id => classification_ids).collect(&:description).join(', '))
