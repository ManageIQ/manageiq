- url = url_for(:action => 'form_copy_objects_field_changed', :id => @edit[:rec_id])
= render :partial => "layouts/flash_msg", :locals => {:div_num => "_copy"}
#form_div
  = hidden_div_if(!@edit[:new][:namespace], :id => "ae_tree_select_div") do
    = render(:partial => 'layouts/ae_tree_select', :locals => {:entry_point => "Namespace"})
  %fieldset
    %p
    %table.style1
      %tr
        %td.key=_('From Domain')
        %td.wide
          = @edit[:domain_name]
      %tr
        %td.key=_('To Domain')
        %td.wide
          - if @edit[:domains].length == 1
            = @edit[:domains].first.last
          - else
            = select_tag("domain",
              options_for_select(Array(@edit[:domains].invert).sort,
              @edit[:new][:domain]),
              "data-miq_observe" => {:url => url}.to_json)
      - if @edit[:selected_items].length == 1 && @edit[:new][:domain].to_i == @edit[:domain_id]
        %tr
          %td.key=_('New Name')
          %td.wider
            = text_field_tag("new_name", @edit[:new][:new_name],
              "data-miq_observe" => {:interval => '.5', :url => url}.to_json)

      %tr
        %td.key=_('Copy to same path')
        %td
          = check_box_tag("override_source",
                          value   = "1",
                          checked = @edit[:new][:override_source],
                          :id                         => "override_source",
                          "data-miq_observe_checkbox" => {:url => url}.to_json)
      - if %w(MiqAeInstance MiqAeMethod).include?(@edit[:typ].to_s)
        %tr
          %td.key=_('Replace items if they already exist?')
          %td
            = check_box_tag("override_existing",
                           value   = "1",
                           checked = @edit[:new][:override_existing],
                           :id                         => "override_existing",
                           "data-miq_observe_checkbox" => {:url => url}.to_json)
      - unless @edit[:new][:override_source]
        %tr
          %td.key=_('Namespace')
          %td.wider
            = text_field_tag("namespace",
                             @edit[:new][:namespace],
                             :onFocus => 'miqShowAE_Tree("namespace");miqButtons("hide");')
  %p
    %table.table.table-striped.table-bordered
      %thead
        %th #{@edit[:selected_items].count} #{n_('Item', 'Items', @edit[:selected_items].count)} #{_('selected to copy')}
      %tbody
        - @edit[:selected_items].values.each do |item|
          %tr
            %td
              = item
