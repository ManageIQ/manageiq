#method_inputs_div
  - if !@in_a_form && @ae_method
    = render :partial => "layouts/flash_msg", :locals => {:div_num => "_method_inputs"}
    %h3
      = _('Main Info')
    .form-horizontal.static
      .form-group
        %label.col-md-2.control-label
          = Dictionary.gettext('fqname', :type => :column, :notfound => :titleize)
        .col-md-8
          %p.form-control-static
            = h(@sb[:namespace_path])
      .form-group
        %label.col-md-2.control-label
          = _('Name')
        .col-md-8
          %p.form-control-static
            = @ae_method.name
      .form-group
        %label.col-md-2.control-label
          = _('Display Name')
        .col-md-8
          %p.form-control-static
            = @ae_method.display_name
      .form-group
        %label.col-md-2.control-label
          = _('Location')
        .col-md-8
          %p.form-control-static
            = @ae_method.location
      .form-group
        %label.col-md-2.control-label
          = _('Created On')
        .col-md-8
          %p.form-control-static
            = h(format_timezone(@ae_method.created_on, Time.zone, "gtl"))
    = render :partial => "domain_overrides", :locals => {:node_prefix => "aem", :model => "Method"}
    %h3= _('Data')
    - if @ae_method.location == "inline"
      = text_area("method1",
        "data",
        :value    => @ae_method.data,
        :size     => "90x20",
        :disabled => true,
        :style    => "display:none;")
      -# Create a MyCodeMirror editor for the text area
      = render :partial => "/layouts/my_code_mirror",
        :locals  => {:text_area_id => "method1_data",
          :mode                    => "ruby",
          :line_numbers            => true,
          :read_only               => true}
    - else
      = @ae_method.data
    -# show inputs parameters grid if there are any inputs
    #params_div{:style => @record.inputs.empty? ? "display: none;" : ""}
      %hr
      %h3= _('Input Parameters')
      %table#params_grid.table.table-striped.table-bordered
        %thead
          %tr
            %th= _('Input Name')
            %th= _('Default Value')
            %th= _('Data Type')
        %tbody
          - @record.inputs.each do |record|
            %tr
              %td= record_name(record)
              %td
                - if record.datatype == 'password'
                  ********
                - else
                  = record.default_value
              %td= record.datatype.blank? ? 'string' : record.datatype
  - else
    #method_form_div
      = render :partial => "layouts/flash_msg", :locals  => {:div_num => "_method_inputs"}
      = render :partial => "method_form", :locals  => {:prefix => ""}
  %br
