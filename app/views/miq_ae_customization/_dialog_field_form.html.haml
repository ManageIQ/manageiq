- url = url_for(:action => 'dialog_form_field_changed', :id => "#{@record.id || 'new'}")
#dialog_field_div
  %h3
    = _('Element Information')
  .form-horizontal
    .form-group
      %label.col-md-2.control-label
        = _('Label')
      .col-md-8
        = text_field_tag("field_label",
                        @edit[:field_label],
                        :maxlength         => MAX_NAME_LEN,
                        :class => "form-control",
                        "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
        = javascript_tag(javascript_focus('field_label'))

    .form-group
      %label.col-md-2.control-label
        = _('Name')
      .col-md-8
        = text_field_tag("field_name",
                        @edit[:field_name],
                        :maxlength         => MAX_NAME_LEN,
                        :class => "form-control",
                        "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
    .form-group
      %label.col-md-2.control-label
        = _('Description')
      .col-md-8
        = text_field_tag("field_description",
                        @edit[:field_description],
                        :maxlength         => 100,
                        :class => "form-control",
                        "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
    .form-group
      %label.col-md-2.control-label
        = _('Type')
      .col-md-8
        = select_tag('field_typ',
                      options_for_select(([["<#{_('Choose')}>", nil]]) + Array(@edit[:field_types].invert).sort,
                                        @edit[:field_typ]),
                      :class    => "selectpicker")
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent("field_typ", "#{url}")

        - if %w(DialogFieldDateControl DialogFieldDateTimeControl).include?(@edit[:field_typ])
          &nbsp;
          = _('Only 1 Date or Date/Time element can be present in a Dialog')

    - if DialogField::DIALOG_FIELD_DYNAMIC_CLASSES.include?(@edit[:field_typ])
      .form-group
        %label.col-md-2.control-label
          = _('Dynamic')
        .col-md-8
          = check_box_tag('field_dynamic', '1', @edit[:field_dynamic],
                          "data-miq_observe_checkbox" => {:url => url}.to_json)

  - unless @edit[:field_typ].nil?
    %h3
      = _('Options')
    .form-horizontal
      - if @edit[:field_dynamic] == true
        = render :partial => 'dialog_field_form_dynamic_options', :locals => {:url => url}
      - else
        = render :partial => 'dialog_field_form_non_dynamic_options', :locals => {:url => url}
        
      .form-group
        %label.col-md-2.control-label
          = _('Visible')
        .col-md-8
          = check_box_tag('field_visible', '1',
                          @edit[:field_visible],
                          'data-miq_observe_checkbox' => {:url => url}.to_json)
      .form-group
        %label.col-md-2.control-label
          = _('Auto Refresh other fields when modified')
        .col-md-8
          = check_box_tag('field_trigger_auto_refresh', '1',
                          @edit[:field_trigger_auto_refresh],
                          'data-miq_observe_checkbox' => {:url => url}.to_json)

  - if @edit[:field_typ] =~ /Drop|Radio/ && !@edit[:field_dynamic]
    = render :partial => 'field_values', :locals => {:entry => nil}
  - elsif @edit[:field_typ] && @edit[:field_typ].include?("TagControl") && @edit[:field_category].present?
    = render :partial => 'tag_field_values', :locals => {:entry => nil}

  - unless @edit[:field_typ].nil?
    %h3
      = _('Advanced')
    .form-horizontal
      .form-group
        %label.col-md-2.control-label
          = _('Reconfigurable')
        .col-md-8
          = check_box_tag('field_reconfigurable', '1',
                          @edit[:field_reconfigurable],
                          "data-miq_observe_checkbox" => {:url => url}.to_json)

