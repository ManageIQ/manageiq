- nothing = "<#{_('Nothing')}>"
- url = url_for(:action => 'cb_assign_field_changed', :id => "#{x_node}")
#cb_assignment_div
  = render :partial => "layouts/flash_msg"
  %h3
    = _('Basic Info')
  .form-horizontal
    .form-group
      %label.col-md-2.control-label
        = _('Assign To')
      .col-md-8
        - options = ASSIGN_TOS[x_node.split('-').last == "Compute" ? "chargeback_compute".to_sym : "chargeback_storage".to_sym].map do |k, v|
          - [v.kind_of?(PostponedTranslation) ? v.translate : _(v), k]
        = select_tag("cbshow_typ", options_for_select([[nothing, "nil"]] + options, @edit[:new][:cbshow_typ]),
                    "data-miq_sparkle_on" => true, "data-miq_sparkle_off" => true, :class    => "selectpicker")
      :javascript
        miqInitSelectPicker();
        miqSelectPickerEvent("cbshow_typ", "#{url}")
    - if !@edit[:new][:cbshow_typ].blank? && @edit[:new][:cbshow_typ].ends_with?("-tags")
      .form-group
        %label.col-md-2.control-label
          = _('Tag Category')
        .col-md-8
          - options = Array(@edit[:cb_assign][:cats].invert).sort_by { |a| a.first.downcase }
          = select_tag("cbtag_cat", options_for_select([["<#{_('Choose a Category')}>", ""]] + options, @edit[:new][:cbtag_cat].to_s),
                      "data-miq_sparkle_on" => true, "data-miq_sparkle_off" => true, :class    => "selectpicker")
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent("cbtag_cat", "#{url}")
  - unless @edit[:new][:cbshow_typ].nil? || @edit[:new][:cbshow_typ] == "nil"
    - if !@edit[:new][:cbshow_typ].ends_with?("-tags") || @edit[:new][:cbtag_cat].present?
      %hr
      %h3
        = _('Selections')
      - if @edit[:new][:cbshow_typ] == "tenant"
        %table.table.table-bordered.table-hover.table-treegrid
          %thead
            %tr
              %th= _('Name')
              %th= _('Rate')
          %tbody
            - @edit[:cb_assign][:hierarchy].sort_by(&:first).each do |id, data|
              %tr.collapsed{:id => "tenant_#{id}"}
                %td.treegrid-node
                  = h(data[:name])
                %td
                  - options = @edit[:cb_rates].invert.sort
                  = select_tag("#{@edit[:new][:cbshow_typ]}__#{id}",
                              options_for_select([[nothing, "nil"]] + options, @edit[:new]["#{@edit[:new][:cbshow_typ]}__#{id}".to_sym].to_s),
                              "data-miq_sparkle_on" => true, "data-miq_sparkle_off" => true, :class => "selectpicker")
                :javascript
                  miqInitSelectPicker();
                  miqSelectPickerEvent("#{@edit[:new][:cbshow_typ]}__#{id}", "#{url}")
              - data[:subtenant].each do |tenant|
                %tr{:id => "tenant_#{tenant[:id]}", :'data-parent' => "#tenant_#{tenant[:parent]}"}
                  %td.treegrid-node
                    = h(tenant[:name])
                  %td
                    - options = @edit[:cb_rates].invert.sort
                    = select_tag("#{@edit[:new][:cbshow_typ]}__#{tenant[:id]}",
                                options_for_select([[nothing, "nil"]] + options, @edit[:new]["#{@edit[:new][:cbshow_typ]}__#{tenant[:id]}".to_sym].to_s),
                                "data-miq_sparkle_on" => true, "data-miq_sparkle_off" => true, :class => "selectpicker")
                  :javascript
                    miqInitSelectPicker();
                    miqSelectPickerEvent("#{@edit[:new][:cbshow_typ]}__#{tenant[:id]}", "#{url}")
        :javascript
           $('.table-treegrid').treegrid({})
      - elsif @edit[:new][:cbshow_typ].ends_with?("-tags")
        %table.table.table-bordered.table-striped
          %thead
            %tr
              %th= _('Name')
              %th= _('Rate')
          %tbody
            - @edit[:cb_assign][:tags].invert.sort_by { |a| a.first.downcase }.each do |tag, id|
              %tr
                %td
                  = h(tag)
                %td
                  - options = @edit[:cb_rates].invert.sort
                  = select_tag("#{@edit[:new][:cbshow_typ]}__#{id}",
                              options_for_select([[nothing, "nil"]] + options, @edit[:new]["#{@edit[:new][:cbshow_typ]}__#{id}".to_sym].to_s),
                              "data-miq_sparkle_on" => true, "data-miq_sparkle_off" => true, :class => "selectpicker")
                :javascript
                  miqInitSelectPicker();
                  miqSelectPickerEvent("#{@edit[:new][:cbshow_typ]}__#{id}", "#{url}")
      - else
        %table.table.table-bordered.table-striped
          %thead
            %tr
              %th= _('Name')
              %th= _('Rate')
          %tbody
            - @edit[:cb_assign][:cis].invert.sort_by { |a| a.first.downcase }.each do |ci, id|
              %tr#new_tr
                %td
                  = h(ci)
                %td
                  - options = @edit[:cb_rates].invert.sort
                  = select_tag("#{@edit[:new][:cbshow_typ]}__#{id}",
                              options_for_select([[nothing, "nil"]] + options, @edit[:new]["#{@edit[:new][:cbshow_typ]}__#{id}".to_sym].to_s),
                              "data-miq_sparkle_on" => true, "data-miq_sparkle_off" => true, :class => "selectpicker")
                :javascript
                  miqInitSelectPicker();
                  miqSelectPickerEvent("#{@edit[:new][:cbshow_typ]}__#{id}", "#{url}")
