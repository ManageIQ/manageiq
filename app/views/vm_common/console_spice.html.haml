- record_name = (@record.name rescue '')
= render :partial => 'layouts/doctype'
%html
  %head
    %title
      = _('SPICE Console')
    = split_stylesheet_link_tag 'application'
    = javascript_include_tag 'application', 'spiceHTML5/enums', 'spiceHTML5/atKeynames', 'spiceHTML5/utils',
    'spiceHTML5/png', 'spiceHTML5/lz', 'spiceHTML5/quic', 'spiceHTML5/bitmap',
    'spiceHTML5/spicedataview', 'spiceHTML5/spicetype', 'spiceHTML5/spicemsg', 'spiceHTML5/wire',
    'spiceHTML5/spiceconn', 'spiceHTML5/display', 'spiceHTML5/main', 'spiceHTML5/inputs',
    'spiceHTML5/cursor', 'spiceHTML5/thirdparty/jsbn', 'spiceHTML5/thirdparty/rsa',
    'spiceHTML5/thirdparty/prng4', 'spiceHTML5/thirdparty/rng', 'spiceHTML5/thirdparty/sha1',
    'spiceHTML5/ticket', 'spice-html5'
    - if Rails.env.development?
      = javascript_include_tag 'miq_debug'

  %body{:style => 'margin: 0px; padding-top: 0px !important;'}
    = link_to('Ctrl-Alt-Del', '#', :id => 'sendCtrlAltDelButton', :class => 'btn btn-default', :onclick => 'sendCtrlAltDel()')
    #spice-area{'data-port' => proxy_port, 'data-password' => password, 'data-encrypt' => encrypt}
      .console-status
        #spice-status.label{'data-host' => record_name}
          = _("Connecting (unencrypted) to: %s") % record_name

      #spice-screen.console-screen

      :javascript
        var sc = null;
        var encrypt;

        $(function () {

          var host     = window.location.hostname;
          var port     = $('#spice-area').data('port');
          var password = $('#spice-area').data('password');
          var encrypt_attr = vnc_el.attr('data-encrypt');
          encrypt = (encrypt_attr !== undefined) && (encrypt_attr !== 'false');
          var scheme   = (encrypt ? "wss://" : "ws://"), uri;

          if (!host || !port || !password) {
            spice_error(__("must set host, port and password"));
            return;
          }

          spice_connecting();

          uri = scheme + host + ":" + port;

          sc = new SpiceMainConn({
            uri:       uri,
            screen_id: "spice-screen",
            password:  password,
            onerror:   spice_error,
            onsuccess: spice_success
          });
        });

        function disconnect() {
          if (sc) { sc.stop(); }
        }

        function spice_error(e) {
          $('#spice-status').text(e);
          $('#spice-status').removeClass('label-success').addClass('label-danger');
          disconnect();
        }

        function spice_connecting() {
          var enc_text = encrypt ? 'encrypted' : 'unencrypted';
          $('#spice-status').text('Connecting ('+ enc_text + ') to: ' +
            $('#spice-status').attr('data-host'));
          $('#spice-status').addClass('label-success');
        }

        function spice_success(m) {
          var enc_text = encrypt ? 'encrypted' : 'unencrypted';
          $('#spice-status').text('Connected ('+ enc_text + ') to: ' +
            $('#spice-status').attr('data-host'));
          $('#spice-status').addClass('label-success');
        }
