- @angular_form = true

%form#form_div.form-horizontal{"name"          => "angularForm",
                               "ng-controller" => "reconfigureFormController"}
  = render :partial => "layouts/flash_msg"
  %h3= _('Options')
  .form-group{"ng-class" => "{'has-error': angularForm.memory.$invalid}"}
    %label.col-md-2.control-label
      = _('Memory')
    .col-md-1
      %input{"bs-switch"       => "",
             "type"            => "checkbox",
             "name"            => "cb_memory",
             "ng-model"        => "reconfigureModel.cb_memory",
             "switch-on-text"  => "Yes",
             "switch-off-text" => "No",
             "checkchange" => ""}
    #memory_div{"ng-if" => "reconfigureModel.cb_memory"}
      .col-md-4
        %input.form-control{"type"        => "text",
                            "id"          => "textInput-markup",
                            "name"        => "memory",
                            "ng-model"    => "reconfigureModel.memory",
                            "ng-if"       => "reconfigureModel.cb_memory",
                            "maxlength"   => "#{MAX_NAME_LEN}",
                            "ng-pattern"  => "/^[-+]?[0-9]+$/",
                            "maxvalue"    => "#{@reconfig_limits[:max__vm_memory]}",
                            "minvalue"    => "#{@reconfig_limits[:min__vm_memory]}",
                            "miqrequired" => "",
                            "checkchange" => "",
                            "auto-focus"  => ""}
        %span{"style"=>"color:red", "ng-show" => "angularForm.memory.$invalid"}
          = _(" Valid memory value required ")
      .col-md-2
        = select_tag('mem_type',
                     options_for_select(%w(MB GB)),
                     "ng-if"                       => "reconfigureModel.cb_memory",
                     "ng-model"                    => "reconfigureModel.mem_type",
                     "ng-change"                   => "memtypeChanged()",
                     "required"                    => "",
                     "checkchange"                 => "",
                     "selectpicker-for-select-tag" => "")
        = (@reconfig_memory_note)
  .form-group
    %label.col-md-2.control-label
      = _('Processors')
    .col-md-1
      %input{"bs-switch"       => "",
         "type"            => "checkbox",
         "name"            => "cb_cpu",
         "ng-model"        => "reconfigureModel.cb_cpu",
         "switch-on-text"  => "Yes",
         "switch-off-text" => "No",
         "checkchange" => ""}

    #cpu_div{"ng-if" => "reconfigureModel.cb_cpu"}

      %hr
      %h3
        = _('Processor Options')
      .form-group{"ng-class" => "{'has-error': angularForm.socket_count.$invalid}"}
        %label.col-sm-2.control-label
          = _('Sockets')
        %div{"ng-if" => @socket_options.length > 1}
          .col-md-2
          = select_tag('cores_per_socket_count',
                        options_for_select([["<#{_('Choose>')}", nil]] + @socket_options),
                        "ng-model"                    => "reconfigureModel.socket_count",
                        "checkchange"                 => "",
                        "ng-required"                 => "reconfigureModel.socket_count",
                        "selectpicker-for-select-tag" => "")
        %div{"ng-if" => @socket_options.length <= 1}
          @socket_options[0]
      .form-group{"ng-class" => "{'has-error': angularForm.cores_per_socket_count.$invalid}"}
        %label.col-sm-2.control-label
          = _('Cores Per Socket')
        %div{"ng-if" => @cores_options.length > 1}
          .col-md-2
          = select_tag('socket_count',
                        options_for_select([["<#{_('Choose>')}", nil]] + @cores_options),
                        "ng-model"                    => "reconfigureModel.cores_per_socket_count",
                        "checkchange"                 => "",
                        "ng-required"                 => "reconfigureModel.cores_per_socket_count",
                        "selectpicker-for-select-tag" => "")
          %div{"ng-if" => @cores_options.length <= 1}
            @cores_options[0]
      .form-group
        %div{"ng-if" => @cores_options.length <= 1}
        %label.col-md-2.control-label
          = _('Total Processors')
        .col-md-4
          %input.form-control{"type"        => "text",
                              "id"          => "textInput-markup",
                              "name"        => "total_cpu",
                              "ng-model"    => "reconfigureModel.total_cpu",
                              "checkchange" => "",
                              :readonly     => '',
                              "auto-focus"  => ""}
          %span{"style"=>"color:red", "ng-show" => "angularForm.total_cpu.$invalid"}
            = _(" Total memory value not valid ")

  %hr
  %hr
  %h3= _('Affected VMs')
  %table.admintable{:height => "75"}
    %tbody
      %tr
        %td
          - if @reconfigitems
            - @embedded = true
            - @gtl_type = "list"
            = render :partial => "layouts/gtl"

  %table{:width => "100%"}
    %tr
      %td#buttons_on{:align => "right"}
        = button_tag(_("Submit"),
                     :class        => "btn btn-primary",
                     :alt          => _("Submit"),
                     "ng-click"    => "submitClicked()",
                     "ng-disabled" => "angularForm.$pristine || angularForm.$invalid",
                     "ng-class"    => "{'btn-disabled': angularForm.$pristine || angularForm.$invalid}")
        = button_tag(_("Cancel"),
                     :class     => "btn btn-default",
                     :alt          => _("Cancel"),
                     "ng-click" => "cancelClicked()")

:javascript
  ManageIQ.angular.app.value('reconfigureFormId', '#{@req ? @req.id : "new"}');
  ManageIQ.angular.app.value('objectIds', #{ @reconfigitems.collect(&:id) });
  miq_bootstrap('#form_div');
