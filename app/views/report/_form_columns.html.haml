- url = url_for(:action => 'form_field_changed', :id => "#{@edit[:rpt_id] || 'new'}")
#columns_div
  = form_tag({:action => 'create', :id => "report_columns_form"}, {:class => "form-horizontal"}) do
    %h3
      = _('Configure Report Columns')
    .form-group
      %label.control-label.col-md-2
        = _('* Base the report on')
      .col-md-8
        = select_tag('chosen_model',
          options_for_select(@edit[:models].sort, @edit[:new][:model]),
          :multiple              => false,
          :class                 => "selectpicker")
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent('chosen_model', '#{url}', {beforeSend: true, complete: true});
    - if model_report_type(@edit[:new][:model]) == :performance
      = render :partial => "form_columns_performance"
    - elsif model_report_type(@edit[:new][:model]) == :trend
      = render :partial => "form_columns_trend"
    - unless model_report_type(@edit[:new][:model]) == :trend
      = render :partial => "column_lists"
    %strong
      = _('* Caution: Changing these fields will clear all selected values below them!')
    %hr
      %h3
        = _('Report Creation Timeout')
      .form-horizontal
        .form-group
          %label.control-label.col-md-2
            = _('Cancel after')
          .col-md-8
            - opts = [["<#{_('System Default')}>", nil]] + (1..6).map { |i| [n_('%s Hour', '%s Hours', i) % i, i.hours] }
            = select_tag('chosen_queue_timeout',
              options_for_select(opts, @edit[:new][:queue_timeout]),
              :multiple              => false,
              :class                 => "selectpicker",
              "data-miq_sparkle_on"  => true,
              "data-miq_sparkle_off" => true)
            :javascript
              miqInitSelectPicker();
              miqSelectPickerEvent("chosen_queue_timeout", "#{url}")
    %hr
