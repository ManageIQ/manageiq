- url = url_for(:action => 'form_field_changed', :id => "#{@edit[:rpt_id] || 'new'}")
.form-group
  %label.control-label.col-md-2
    = _('Trending for')
  .col-md-8
    - opts = ["<#{_('Choose')}>"] + MiqExpression.reporting_available_fields(@edit[:new][:model], @edit[:new][:perf_interval]).sort
    = select_tag('chosen_trend_col',
      options_for_select(opts, @edit[:new][:perf_trend_db] ? @edit[:new][:perf_trend_db] + "-" + @edit[:new][:perf_trend_col] : ""),
      :multiple              => false,
      :class                 => "selectpicker",
      "data-miq_sparkle_on"  => true,
      "data-miq_sparkle_off" => true)
    :javascript
      miqInitSelectPicker();
      miqSelectPickerEvent("chosen_trend_col", "#{url}")
- if @edit[:new][:perf_trend_col]
  .form-group
    %label.control-label.col-md-2
      = _('Trend Target Limit')
    .col-md-8
      - unless @edit[:limit_cols].empty?
        = _('Column:')
        = select_tag('chosen_limit_col',
          options_for_select(["<#{_('None')}>"] + @edit[:limit_cols].sort,  @edit[:new][:perf_limit_col]),
          :multiple              => false,
          :class                 => "selectpicker",
          "data-miq_sparkle_on"  => true,
          "data-miq_sparkle_off" => true)
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent("chosen_limit_col", "#{url}")
      - unless @edit[:new][:perf_limit_col]
        = _('Value:')
        - if @edit[:percent_col]
          = "#{h(@edit[:new][:perf_limit_val])}%"
        - else
          = text_field_tag("chosen_limit_val", @edit[:new][:perf_limit_val],
            :maxlength         => 20,
            "class"            => "form-control",
            "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
- if @edit[:new][:perf_trend_col]
  .form-group
    %label.control-label.col-md-2
      = _('Trend Target Percents')
    .col-md-8
      - steps = (0..100).step(5).to_a
      - [steps,
         ["<#{_('None')}>"] + steps,
         ["<#{_('None')}>"] + steps].each.with_index(1) do |opt, index|
        = select_tag("percent#{index}",
          options_for_select(opt, @edit[:new]["perf_target_pct#{index}".to_sym]),
          :multiple              => false,
          :class                 => "selectpicker",
          "data-miq_sparkle_on"  => true,
          "data-miq_sparkle_off" => true)
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent("percent#{index}", "#{url}")
