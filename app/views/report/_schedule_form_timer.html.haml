- url = url_for(:action => action_url, :id => "#{record.id || 'new'}")
#form_timer_div
  %h3
    = _('Timer')
  .form-horizontal
    .form-group
      %label.control-label.col-md-2
        = _('Run')
      .col-md-8
        - timer_types = [_("Once"), _("Hourly"), _("Daily"), _("Weekly"), _("Monthly")]
        - timer_types.shift if x_active_tree == :widgets_tree
        = select_tag("timer_typ",
          options_for_select(timer_types, @edit[:new][:timer_typ]),
          :class => "selectpicker")
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent("timer_typ", "#{url}");
        = hidden_span_if(@edit[:new][:timer].typ.downcase != "daily", :id => "daily_span") do
          = _("every")
          = select_tag("timer_days",
            options_for_select(TIMER_DAYS.map { |x, y| [_(x), y] }, @edit[:new][:timer].days),
            :class => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent("timer_days", "#{url}");
        = hidden_span_if(@edit[:new][:timer].typ.downcase != "hourly", :id => "hourly_span") do
          = _("every")
          = select_tag("timer_hours",
            options_for_select(TIMER_HOURS.map { |x, y| [_(x), y] }, @edit[:new][:timer].hours),
            :class => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent("timer_hours", "#{url}");
        = hidden_span_if(@edit[:new][:timer].typ.downcase != "weekly", :id => "weekly_span") do
          = _("every")
          = select_tag("timer_weeks",
            options_for_select(TIMER_WEEKS.map { |x, y| [_(x), y] }, @edit[:new][:timer].weeks),
            :class => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent("timer_weeks", "#{url}");
        = hidden_span_if(@edit[:new][:timer].typ.downcase != "monthly", :id => "monthly_span") do
          = _("every")
          = select_tag("timer_months",
            options_for_select(TIMER_MONTHS.map { |x, y| [_(x), y] }, @edit[:new][:timer].months),
            :class => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent("timer_months", "#{url}");
    .form-group
      %label.control-label.col-md-2
        = _('Time Zone')
      .col-md-8
        = select_tag("time_zone",
          options_for_select(ALL_TIMEZONES, @edit[:tz]),
          "data-live-search" => "true",
          :class             => "selectpicker")
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent("time_zone", "#{url}");
        &nbsp;&nbsp;
        = _("* Changing the Time Zone will reset the Starting Date and Time fields below")
    .form-group
      %label.control-label.col-md-2
        = _("Starting Date")
      .col-md-8
        = datepicker_input_tag("miq_date_1", @edit[:new][:timer].start_date,
          :readonly               => "true",
          "data-miq_observe_date" => {:url => url}.to_json)
    .form-group
      %label.control-label.col-md-2
        = _("Starting Time")
        (
        %span#tz_span
          = @timezone_abbr
        )
      .col-md-8
        = select_tag("start_hour",
          options_for_select((0..23).to_a, @edit[:new][:timer].start_hour.to_i),
          :class => "selectpicker selectWidth")
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent("start_hour", "#{url}");
        -# TODO: Enable comments for the translators in the gettext parser
        -# TRANSLATORS: this h means hours
        = _("h")
        = select_tag("start_min",
          options_for_select((0..55).step(5).to_a, @edit[:new][:timer].start_min.to_i),
          :class => "selectpicker selectWidth")
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent("start_min", "#{url}");
        -# TODO: Enable comments for the translators in the gettext parser
        -# TRANSLATORS: this m means minutes
        = _("m")
  %hr
