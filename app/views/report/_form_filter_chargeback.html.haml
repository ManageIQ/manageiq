- url = url_for(:action => 'form_field_changed', :id => "#{@edit[:rpt_id] || 'new'}")
%h3
  = _('Chargeback Filters')
.form-horizontal
  - if @edit[:cb_users]
    .form-group
      %label.control-label.col-md-2
        = _('Show Costs by')
      .col-md-8
        - opts = [["<#{_('Choose')}>", nil]]
        - if @edit[:new][:model] == "ChargebackContainerProject"
          - opts += [[ui_lookup(:model => @edit[:new][:cb_model]), "entity"]]
        - elsif @edit[:new][:model] == "ChargebackVm"
          - opts += [[_('Owner'), "owner"], ["%{tenant_name} Tag" % {:tenant_name => current_tenant.name}, "tag"], [_('Tenant'), "tenant"]]
        - else
          - opts += [[_('Owner'), "owner"], ["%{tenant_name} Tag" % {:tenant_name => current_tenant.name}, "tag"], [_(@edit[:new][:cb_model].to_s), "entity"]]
        = select_tag("cb_show_typ",
          options_for_select(opts, @edit[:new][:cb_show_typ]),
          :class                 => "selectpicker")
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent('cb_show_typ', '#{url}', {beforeSend: true, complete: true});
    - if @edit[:new][:cb_show_typ] == "owner"
      .form-group
        %label.control-label.col-md-2
          = _('Owner')
        .col-md-8
          - opts = [["<#{_('Choose an Owner')}>", nil]] + Array(@edit[:cb_users].invert).sort_by { |a| a.first.downcase }
          = select_tag("cb_owner_id",
            options_for_select(opts, @edit[:new][:cb_owner_id]),
            :class                 => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent('cb_owner_id', '#{url}', {beforeSend: true, complete: true});
    - elsif @edit[:new][:cb_show_typ] == "tenant"
      .form-group
        %label.control-label.col-md-2
          = _('Tenant')
        .col-md-8
          - opts = [["<#{_('Choose a tenant')}>", nil]] + Array(@edit[:cb_tenant].invert).sort_by { |a| a.first.downcase }
          = select_tag("cb_tenant_id",
            options_for_select(opts, @edit[:new][:cb_tenant_id]),
            :class                 => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent('cb_tenant_id', '#{url}', {beforeSend: true, complete: true});
    - elsif @edit[:new][:cb_show_typ] == "tag"
      .form-group
        %label.control-label.col-md-2
          = _('Tag Category')
        .col-md-8
          - opts = [["<#{_('Choose a Category')}>", nil]] + Array(@edit[:cb_cats].invert).sort_by { |a| a.first.downcase }
          = select_tag("cb_tag_cat",
            options_for_select(opts, @edit[:new][:cb_tag_cat]),
            :class                 => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent('cb_tag_cat', '#{url}', {beforeSend: true, complete: true});
      - if @edit[:new][:cb_tag_cat]
        .form-group
          %label.control-label.col-md-2
            = _('Tag')
          .col-md-8
            - opts = [["<#{_('Choose a Value')}>", nil]] + Array(@edit[:cb_tags].invert).sort_by { |a| a.first.downcase }
            = select_tag("cb_tag_value",
              options_for_select(opts, @edit[:new][:cb_tag_value]),
              :class                 => "selectpicker")
            :javascript
              miqInitSelectPicker();
              miqSelectPickerEvent('cb_tag_value', '#{url}', {beforeSend: true, complete: true});
    - elsif @edit[:new][:cb_show_typ] == "entity"
      .form-group
        %label.control-label.col-md-2
          = _("Provider")
        .col-md-8
          - opts = [["<#{_('Choose %{provider}')}>" % {:provider => _("Provider")}, nil],
                    [_("All %{providers}" % {:providers => _("Providers")}), :all]]
          - if @edit[:cb_providers][@edit[:new][:cb_model].underscore.to_sym].present?
            - opts += Array(@edit[:cb_providers][@edit[:new][:cb_model].underscore.to_sym]).sort_by { |a| a.first.downcase }
          = select_tag('cb_provider_id',
                options_for_select(opts, @edit[:new][:cb_provider_id]),
                :class                 => "selectpicker")
          :javascript
             miqInitSelectPicker();
             miqSelectPickerEvent('cb_provider_id', '#{url}', {beforeSend: true, complete: true});
      - if @edit[:new][:cb_provider_id].present?
        .form-group
          %label.control-label.col-md-2
            = ui_lookup(:model => @edit[:new][:cb_model])
          .col-md-8
            - opts = [["<#{_('Choose %{entity}')}>" % {:entity => ui_lookup(:model => @edit[:new][:cb_model])}, nil],
                      [_("All #{ui_lookup(:tables => @edit[:new][:cb_model].to_s)}"), :all]]
            - if @edit[:cb_entities_by_provider_id][@edit[:new][:cb_provider_id].to_i].present?
              - opts += Array(@edit[:cb_entities_by_provider_id][@edit[:new][:cb_provider_id].to_i].invert).sort_by { |a| a.first.downcase }
            = select_tag('cb_entity_id',
              options_for_select(opts, @edit[:new][:cb_entity_id]),
              :class                 => "selectpicker")
            :javascript
              miqInitSelectPicker();
              miqSelectPickerEvent('cb_entity_id', '#{url}', {beforeSend: true, complete: true});
  - else
    .form-group
      %label.control-label.col-md-2
        = _('Owner')
      .col-md-8
        = h(@edit[:cb_owner_name])
  .form-group
    %label.control-label.col-md-2
      = _('Group by')
    .col-md-8
      = select_tag("cb_groupby",
        options_for_select([["#{_('Date')}", "date"], ["#{_('VM/Instance/Project')}", "vm"]], @edit[:new][:cb_groupby]),
        :class                 => "selectpicker")
      :javascript
        miqInitSelectPicker();
        miqSelectPickerEvent('cb_groupby', '#{url}', {beforeSend: true, complete: true});

%h3
  = _('Chargeback Interval')
.form-horizontal
  .form-group
    %label.control-label.col-md-2
      = _('Show Costs by')
    .col-md-8
      = select_tag("cb_interval",
        options_for_select([[_("Day"), "daily"], [_("Week"), "weekly"], [_("Month"), "monthly"]], @edit[:new][:cb_interval]),
        :class                 => "selectpicker")
      :javascript
        miqInitSelectPicker();
        miqSelectPickerEvent('cb_interval', '#{url}', {beforeSend: true, complete: true});
  .form-group
    %label.control-label.col-md-2
      = _("%{chargeback_interval} Ending with") % {:chargeback_interval => @edit[:new][:cb_interval].capitalize}
    .col-md-8
      - case @edit[:new][:cb_interval]
      - when "daily"
        - opts = [[_("Today (partial)"), 0], [_("Yesterday"), 1]] + (2..6).map { |i| [_("%{number} Days Ago") % {:number => i}, i] } + [[_("1 Week Ago"), 7]]
      - when "weekly"
        - opts = [[_("This Week (partial)"), 0], [_("Last Week"), 1]] + (2..4).map { |i| [_("%d Weeks Ago") % i, i] }
      - when "monthly"
        - opts = [[_("This Month (partial)"), 0], ["Last Month", 1]] + (2..3).map { |i| [_("%d Months Ago") % i, i] }
      = select_tag("cb_end_interval_offset",
        options_for_select(opts, @edit[:new][:cb_end_interval_offset]),
        :class                 => "selectpicker")
      :javascript
        miqInitSelectPicker();
        miqSelectPickerEvent('cb_end_interval_offset', '#{url}', {beforeSend: true, complete: true});
      = _("going back")
      - case @edit[:new][:cb_interval]
      - when "daily"
        - opts = (1..6).map { |i| [n_('%{number} Day', '%{number} Days', i) % {:number => i}, i] } + (1..4).map { |i| [n_('%{number} Week', '%{number} Weeks', i) % {:number => i}, i * 7] }
      - when "weekly"
        - opts = [1, 2, 3, 4, 8, 12].map! { |i| [n_('%{number} Week', '%{number} Weeks', i) % {:number => i}, i] }
      - when "monthly"
        - opts = [1, 2, 3, 6, 9, 12].map! { |i| [n_('%{number} Month', '%{number} Months', i) % {:number => i}, i] }
      = select_tag("cb_interval_size",
        options_for_select(opts, @edit[:new][:cb_interval_size]),
        :class                 => "selectpicker")
      :javascript
        miqInitSelectPicker();
        miqSelectPickerEvent('cb_interval_size', '#{url}', {beforeSend: true, complete: true});
  .form-group
    %label.control-label.col-md-2
      = _('Time Zone')
    .col-md-8
      = select_tag('chosen_tz',
        options_for_select(ALL_TIMEZONES, @edit[:new][:tz]),
        :class => "selectpicker")
      :javascript
        miqInitSelectPicker();
        miqSelectPickerEvent('chosen_tz', '#{url}')
