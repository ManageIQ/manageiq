- url = url_for(:action => 'widget_form_field_changed', :id => "#{@widget.id || "new"}")
%h3
  = _('Menu Shortcuts')
%table.admintable
  %tbody
    %tr
      %td.wider
        = select_tag("add_shortcut",
          options_for_select([["Add a Shortcut", nil]] + @edit[:avail_shortcuts], nil),
          :disabled => @edit[:read_only],
          :class    => "selectpicker")
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent("add_shortcut", "#{url}");
.row#modules
  .col-md-4#col1
    - @edit[:new][:shortcuts].each do |s_id, s_desc|
      -# :shortcuts is a hash of s.id => s.miq_widget_shortcut.description
      %div{:id => "s_#{s_id}", :title => _("Drag this Shortcut to a new location")}
        .panel.panel-default#test
          .panel-header
            %h3.panel-title{:style => @edit ? "cursor: move;" : ""}
              %a{:class => "#{@widget.content_type}box"}
              = link_to("",
                {:controller => "report", :action => "widget_shortcut_remove", :id => @widget.id || "new", :shortcut => s_id},
                "data-miq_sparkle_on" => true,
                :remote               => true,
                :id                   => "s_#{s_id}_close",
                :title                => _("Remove this Shortcut"),
                :class                => "delbox")
              = link_to("",
                {:controller => "report", :action => "widget_shortcut_reset", :id => @widget.id || "new", :shortcut => s_id},
                "data-miq_sparkle_on" => true,
                :remote               => true,
                :id                   => "s_#{s_id}_reset",
                :title                => _("Reset this Shortcut's text"),
                :class                => "resetbox")
              = text_field_tag("shortcut_desc_#{s_id}", s_desc,
                :disabled          => @edit[:read_only],
                :maxlength         => 50,
                :style             => "width: 250px;",
                "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
