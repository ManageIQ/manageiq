#report_list_div
  -# Added position:relative so dhtmlxcombo boxes scroll properly in IE7
  - if @sb[:active_accord] == :reports
    - if @in_a_form
      = render :partial => 'form'
    - elsif @report && !@report_result
      = render :partial => "layouts/flash_msg", :locals => {:div_num => "_report_list"}

      - if @zgraph
        - width, height = @html ? [350, 250] : [700, 500]

        = chart_remote('report',
          :width   => width,
          :height  => height,
          :bgcolor => "#f2f2f2",
          :id      => 'my_chart')

        - if !@html && @report.filter_summary
          = @report.filter_summary
        %p

      - if @html
        = render :partial => 'layouts/report_html'
    - elsif x_active_tree == :reports_tree && x_node.split('-').length <= 4
      - nodes = x_node.split('-')
      - if (nodes.length == 1 && @sb[:rpt_menu].blank?) || (nodes.length == 2 && @sb[:rpt_menu][nodes[1].to_i][1].blank?) || (nodes.length == 4 && @sb[:rpt_menu][nodes[1].to_i].present? && @sb[:rpt_menu][nodes[1].to_i][1][nodes[3].to_i][1].blank?)
        = render :partial => 'layouts/info_msg', :locals => {:message => _("No Reports available.")}
      - else
        = render :partial => "layouts/flash_msg", :locals => {:div_num => "_report_list"}
        %table.table.table-striped.table-bordered.table-hover
          - if nodes.length == 1
            -# level1 folders list
            - @sb[:rpt_menu].each_with_index do |folder, i|
              - if i == 0
                %thead
                  %th.narrow
                  %th
                    = _("Name")
              %tr{:title => _("Click to view details"), :onclick => "miqDynatreeActivateNode('reports_tree','xx-#{i}');"}
                %td.narrow
                  - if folder[0] == @sb[:grp_title]
                    - glyphicon = "pficon pficon-folder-close-blue"
                  - else
                    - glyphicon = "pficon pficon-folder-close"
                  %ul.icons.list-unstyled
                    %li
                      %span{:class => "#{glyphicon}"}
                %td
                  -# removing :::#{@sb[:count]} that was added at the end of report name to make id's unique in the dhtmlxtree
                  -# custom reports will be shown in assigned folders and custom folder both
                  = folder[0]
          - elsif nodes.length == 2
            -# level2 folders list
            - @sb[:rpt_menu][nodes[1].to_i][1].each_with_index do |folder, i|
              - if i == 0
                %thead
                  %th.narrow
                  %th
                    = _('Name')
              %tr{:title => _("Click to view details"), :onclick => "miqDynatreeActivateNode('reports_tree','xx-#{nodes[1].to_i}_xx-#{nodes[1].to_i}-#{i}');"}
                %td.narrow
                  %ul.icons.list-unstyled
                    %li
                      %span.pficon{:class => "pficon-folder-close#{@sb[:rpt_menu][nodes[1].to_i][0] == @sb[:grp_title] ? '-blue' : ''}"}
                %td
                  -# removing :::#{@sb[:count]} that was added at the end of report name to make id's unique in the dhtmlxtree
                  -# custom reports will be shown in assigned folders and custom folder both
                  = folder[0]
          - elsif nodes.length == 4 && @sb[:rpt_menu][nodes[1].to_i].present?
            -# reports list
            - @sb[:rpt_menu][nodes[1].to_i][1][nodes[3].to_i][1].each_with_index do |rep, i|
              - if i == 0
                %thead
                  -# had to move <th> inside loop to show following columns only when report node is selected in tree
                  %th.narrow
                  %th
                    = _('Name')
                  %th
                    = _('Primary (Record) Filter')
                  %th
                    = _('Secondary (Display) Filter')
                  %th
                    = _('Sort By')
                  %th
                    = _('Chart')
                  %th
                    = _('User')
                  %th
                    = Dictionary.gettext("MiqGroup", :type => :model, :notfound => :titleize)
              - if @sb[:rep_details][rep]
                %tr{:title => _('Click to view details'), :onclick => "miqDynatreeActivateNode('reports_tree','xx-#{nodes[1].to_i}_xx-#{nodes[2].to_i}-#{nodes[3].to_i}_rep-#{to_cid(@sb[:rep_details][rep]["id"])}');"}
                  %td.narrow
                    %ul.icons.list-unstyled
                      %li
                        %span.product.product-report
                  %td
                    -# removing :::#{@sb[:count]} that was added at the end of report name to make id's unique in the dhtmlxtree
                    -# custom reports will be shown in assigned folders and custom folder both
                    = rep
                  - yes = _("Yes")
                  - no = _("No")
                  %td
                    = @sb[:rep_details][rep]["filters"] ? yes : no
                  %td
                    = @sb[:rep_details][rep]["display_filters"] ? yes : no
                  %td
                    = @sb[:rep_details][rep]["sortby"] ? yes : no
                  %td
                    = @sb[:rep_details][rep]["charts"] ? yes : no
                  %td
                    = @sb[:rep_details][rep]["user"]
                  %td
                    = @sb[:rep_details][rep]["group"]
    - elsif x_active_tree == :reports_tree
      #rep_tabs
        %ul.nav.nav-tabs
          = miq_tab_header('report_info', @sb[:active_tab]) do
            = _('Report Info')
          %li
          = miq_tab_header('saved_reports', @sb[:active_tab]) do
            = _('Saved Reports')
        .tab-content
          = miq_tab_content('report_info', @sb[:active_tab]) do
            = render :partial => "report_info"
          = miq_tab_content('saved_reports', @sb[:active_tab]) do
            = render :partial => "report_saved_reports"
      :javascript
        miq_tabs_init('#rep_tabs', '/report/rep_change_tab');
    - else
      = render :partial => 'layouts/info_msg', :locals => {:message => _("Choose a Report to view from the menus on the left.")}
