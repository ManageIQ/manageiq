- url = url_for(:action => 'tasks_change_options')
#tasks_options_div
  %h3=_("Filter By")
  %table.style1
    %tbody
      - if %w(my_tasks all_tasks).include?(@layout)
        %tr
          %td.key=_("Zone:")
          %td
            - my_zone = MiqServer.my_server(true).my_zone
            - opts = [["<#{_('All Zones')}>", "<all>"]] + @tasks_options[:zones].sort.collect { |a| [a == my_zone ? a + " (current)" : a, a] }
            = select_tag("chosen_zone",
              options_for_select(opts, @tasks_options[@tabform][:zone]),
              "data-miq_observe" => {:url => url}.to_json)
      - if @lastaction == "all_jobs" || @lastaction == "all_ui_jobs"
        %tr
          %td.key=_("User:")
          %td
            = select_tag("user_choice",
              options_for_select([["#{_('All Users')}", "all"]] + @user_names.sort, @tasks_options[@tabform][:user_choice]),
              "data-miq_observe" => {:url => url}.to_json)
      %tr
        %td.key=_("24 Hour Time Period:")
        %td
          = select_tag("time_period",
            options_for_select(Array(TASK_TIME_PERIODS.invert).sort_by(&:last), @tasks_options[@tabform][:time_period]),
            "data-miq_observe" => {:url => url}.to_json)
      %tr
        %td.key=_("Task Status:")
        %td
          = check_box_tag("queued", "1", @tasks_options[@tabform][:queued], "data-miq_observe_checkbox" => {:url => url}.to_json)
          &nbsp;
          %img{:src => "/images/icons/16/job-queued.png", :valign => "middle", :title => "Queued"}=_("Queued")
          &nbsp;
          = check_box_tag("running", "1", @tasks_options[@tabform][:running], "data-miq_observe_checkbox" => {:url => url}.to_json)
          &nbsp;
          %img{:src => "/images/icons/16/job-running.png", :valign => "middle", :title => "Warn"}=_("Running")
          &nbsp;
          = check_box_tag("ok", "1", @tasks_options[@tabform][:ok], "data-miq_observe_checkbox" => {:url => url}.to_json)
          &nbsp;
          %img{:src => "/images/icons/new/checkmark.png", :valign => "middle", :title => "Ok"}=_("Ok")
          &nbsp;
          = check_box_tag("error", "1", @tasks_options[@tabform][:error], "data-miq_observe_checkbox" => {:url => url}.to_json)
          &nbsp;
          %img{:src => "/images/icons/new/x.png", :valign => "middle", :title => "Error"}=_("Error")
          &nbsp;
          = check_box_tag("warn", "1", @tasks_options[@tabform][:warn], "data-miq_observe_checkbox" => {:url => url}.to_json)
          &nbsp;
          %img{:src => "/images/icons/16/warning.png", :valign => "middle", :title => "Warn"}=_("Warn")
      %tr
        %td.key=_("Task State:")
        %td
          = select_tag("state_choice",
            options_for_select([["#{_('All')}", "all"]] + @tasks_options[@tabform][:states].sort, @tasks_options[@tabform][:state_choice]),
            "data-miq_observe" => {:url => url}.to_json)
      %tr
        %td
        %td{:align => "right"}
          #buttons_off
            = button_tag(_("Apply"), :class => "btn btn-primary btn-disabled")
            = button_tag(_("Reset"), :class => "btn btn-default btn-disabled")
            = link_to(_('Default'),
              {:action => "tasks_button", :button => "default"},
              :class                 => "btn btn-default",
              :alt                   => (t = _("Set filters to default")),
              "data-miq_sparkle_on"  => true,
              "data-miq_sparkle_off" => true,
              :remote                => true,
              :title                 => t)
          #buttons_on{:style => "display:none"}
            = link_to(_('Apply'),
              {:action => "tasks_button", :button => "apply"},
              :class                 => "btn btn-primary",
              :alt                   => (t = _("Apply the selected filters")),
              "data-miq_sparkle_on"  => true,
              "data-miq_sparkle_off" => true,
              :remote                => true,
              :title                 => t)
            = link_to(_('Reset'),
              {:action => "tasks_button", :button => "reset"},
              :class                 => "btn btn-default",
              :alt                   => (t = _("Reset filter changes")),
              "data-miq_sparkle_on"  => true,
              "data-miq_sparkle_off" => true,
              :remote                => true,
              :title                 => t)
            = link_to(_('Default'),
              {:action => "tasks_button", :button => "default"},
              :class                 => "btn btn-default",
              :alt                   => (t = _("Set filters to default")),
              "data-miq_sparkle_on"  => true,
              "data-miq_sparkle_off" => true,
              :remote                => true,
              :title                 => t)
  %hr

