- url = url_for(:action => 'form_field_changed', :id => "#{@sm.id || "new"}")
- validate_url ||= %w(new create).include?(controller.action_name) ? "create" : "update"
- change_stored_password ||= _("Change stored password")
- cancel_password_change ||= _("Cancel password change")
- stored_password_placeholder = "●●●●●●●●"
- pfx ||= ""

#form_div
  = render :partial => "layouts/flash_msg"
  %h3
    = _('Basic Information')
  .form-horizontal
    .form-group
      %label.control-label.col-md-2
        = _('Name')
      .col-md-8
        = text_field_tag("name",
          @edit[:new][:name],
          :maxlength => MAX_NAME_LEN,
          :class     => "form-control",
          "data-miq_focus" => true,
          "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
    .form-group
      %label.control-label.col-md-2
        = _('Type')
      .col-md-8
        - if @sm.id
          = h(@edit[:new][:sm_type])
        - else
          = select_tag("sm_type",
            options_for_select([["<#{_('Choose')}>", nil]] + @edit[:sm_types].invert.sort, @edit[:new][:sm_type]),
            :class => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent("sm_type", "#{url}");
    .form-group
      %label.control-label.col-md-2
        = _('Hostname')
      .col-md-8
        = text_field_tag("hostname",
          @edit[:new][:hostname],
          :maxlength => MAX_NAME_LEN,
          :class     => "form-control",
          "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
    .form-group
      %label.control-label.col-md-2
        = _('IP Address')
      .col-md-8
        = text_field_tag("ipaddress",
          @edit[:new][:ipaddress],
          :maxlength => 15,
          :class     => "form-control",
          "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
    .form-group
      %label.control-label.col-md-2
        = _('Port')
      .col-md-8
        = text_field_tag("port",
          @edit[:new][:port],
          :maxlength => 15,
          :class     => "form-control",
          "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
    .form-group
      %label.control-label.col-md-2
        = _('Zone')
      .col-md-8
        - if @edit[:server_zones].length <= 1
          = text_field_tag("server_zone",
            @edit[:new][:zone],
            :disabled => true,
            :maxlength => 15,
            :class     => "form-control",
            "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
        - else
          = select_tag("server_zone",
            options_for_select(@edit[:server_zones].sort, @edit[:new][:zone]),
            :class             => "selectpicker",
            "data-miq_observe" => {:url => url}.to_json)
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent("server_zone", "#{url}");
  %hr
  %h3
    = _('Credentials')
  .form-horizontal
    .form-group
      %label.control-label.col-md-2
        = _('Username')
      .col-md-8
        = text_field_tag("userid",
          @edit[:new][:userid],
          :maxlength => 50,
          :class     => "form-control",
          "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
    .form-group
      %label.control-label.col-md-2
        = _('Password')
      .col-md-8
        = password_field_tag("password",
          @edit[:new][:userid].blank? ? "" : stored_password_placeholder,
          :maxlength => 50,
          :disabled => @edit[:new][:userid].blank? ? false : true,
          :class     => "form-control",
          "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
      - unless @edit[:new][:userid].blank?
        %div
          %a{:id => "change_stored_password", "style" => "display:block;cursor: pointer; cursor: hand;", "onclick" => "changeStoredPassword('#{pfx}', '#{url}')"}
            = change_stored_password
          %a{:id => "cancel_password_change", "style" => "display:none;cursor: pointer; cursor: hand;", "onclick" => "cancelPasswordChange('#{pfx}', '#{url}')"}
            = cancel_password_change
    .form-group{:id => "verify_group", :style => @edit[:new][:userid].blank? ? "display:block" : "display:none"}
      %label.col-md-2.control-label
        = _("Confirm Password")
      .col-md-8
        = password_field_tag("verify",
                             "",
                             :maxlength         => 50,
                             :class     => "form-control",
                             "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
    .form-group
      %label.control-label.col-md-2
      .col-md-8
        = render(:partial => "/layouts/form_buttons_verify",
          :locals => {:validate_url => validate_url, :record => @sm})

  - if %w(new create).include?(controller.action_name)
    %table{:width => '100%'}
      %tr
        %td{:align => 'right'}
          #buttons_on
            = button_tag(_('Add'),
              :class => "btn btn-primary",
              :alt => (t = _("Add this Storage Manager")),
              :title => t,
              :onclick => "miqAjaxButton('#{url_for(:action => "create", :id => "new", :button => "add")}');")
            = button_tag((t = _('Cancel')),
              :class => "btn btn-default",
              :alt => t,
              :title => t,
              :onclick => "miqAjaxButton('#{url_for(:action => "create", :id => "new", :button => "cancel")}');")
  - else
    = render(:partial => '/layouts/edit_form_buttons', :locals => {:record_id => @sm.id, :ajax_buttons => true})
