- @angular_form = true

.form-horizontal{:id => "start_form_div", :style => "display:none"}
  %form#form_div{"name"            => "angularForm",
                 "ng-controller"   => "hostFormController",
                 "ng-show"         => "afterGet",
                 "form-fields-url" => "/#{controller_name}/host_form_fields/",
                 "create-url"      => "/#{controller_name}/create/",
                 "update-url"      => "/#{controller_name}/update/",
                 "novalidate"      => true,
                 "start-form-div"  => "start_form_div"}
    = render :partial => "layouts/flash_msg"
    - if session[:host_items].nil?
      %div
        %div
          .form-group{"ng-class" => "{'has-error': angularForm.name.$invalid}"}
            %label.col-md-2.control-label{"for" => "textInput-markup"}
              = _("Name")
            .col-md-8
              %input.form-control{"type"           => "text",
                                  "id"             => "textInput-markup",
                                  "name"           => "name",
                                  "ng-model"       => "hostModel.name",
                                  "maxlength"      => "#{MAX_NAME_LEN}",
                                  "miqrequired"    => "",
                                  "checkchange"    => "",
                                  "auto-focus"     => ""}
              %span.help-block{"ng-show" => "angularForm.name.$error.miqrequired"}
                = _("Required")
          .form-group{"ng-class" => "{'has-error': angularForm.hostname.$invalid}"}
            %label.col-md-2.control-label{"for" => "textInput-markup"}
              = _("Hostname (or IPv4 or IPv6 address)")
            .col-md-8
              %input.form-control{"type"        => "text",
                                  "id"          => "textInput-markup",
                                  "name"        => "hostname",
                                  "ng-model"    => "hostModel.hostname",
                                  "maxlength"   => "#{MAX_HOSTNAME_LEN}",
                                  "miqrequired" => "",
                                  "checkchange" => ""}
              %span.help-block{"ng-show" => "angularForm.hostname.$error.miqrequired"}
                = _("Required")
          .form-group{"ng-class" => "{'has-error': angularForm.user_assigned_os.$invalid}", "ng-hide" => "hostModel.operating_system"}
            %label.col-md-2.control-label
              = _("Host platform")
            .col-md-8
              = select_tag('user_assigned_os',
                           options_for_select([["<#{_('Choose')}>", nil]] + Host.host_create_os_types.to_a, disabled: ["<#{_('Choose')}>", nil]),
                           "ng-model"                    => "hostModel.user_assigned_os",
                           "checkchange"                 => "",
                           "ng-required"                 => "!hostModel.operating_system",
                           "selectpicker-for-select-tag" => "")
              %span.help-block{"ng-show" => "angularForm.user_assigned_os.$error.required"}
                = _("Required")
          .form-group
            %label.col-md-2.control-label
              = _("Custom Identifier")
            .col-md-8
              %input#custom_1.form-control{"type"        => "text",
                                           "name"        => "custom_1",
                                           "ng-model"    => "hostModel.custom_1",
                                           "maxlength"   => 50,
                                           "checkchange" => ""}
          .form-group{"ng-class" => "{'has-error': angularForm.ipmi_address.$error.requiredDependsOn}"}
            %label.col-md-2.control-label{"for" => "textInput-markup"}
              = _("IPMI IP Address")
            .col-md-8
              %input.form-control#ipmi_address{"type"                => "text",
                                               "name"                => "ipmi_address",
                                               "ng-model"            => "hostModel.ipmi_address",
                                               "required-depends-on" => "hostModel.ipmi_userid",
                                               "required-if-exists"  => "ipmi_userid",
                                               "maxlength"           => 15,
                                               "checkchange"         => ""}
              %span.help-block{"ng-show" => "angularForm.ipmi_address.$error.requiredDependsOn"}
                = _("Required")
          .form-group
            %label.col-md-2.control-label
              = _("MAC Address")
            .col-md-8
              %input#mac_address.form-control{"type"        => "text",
                                              "name"        => "mac_address",
                                              "ng-model"    => "hostModel.mac_address",
                                              "maxlength"   => "#{MAX_NAME_LEN}",
                                              "checkchange" => ""}
    %hr
    = render(:partial => "/layouts/angular/multi_auth_credentials",
             :locals  => {:record => @host, :ng_model => "hostModel"})
    = render :partial => "layouts/angular/x_edit_buttons_angular"

  - unless session[:host_items].nil?
    %h3
      = pluralize(session[:host_items].length, Dictionary.gettext(Host.to_s, :type => :model, :notfound => :titleize))
      = _('Selected')
    = _('Click on a Host to fetch its settings')
    %table.admittable{:height => '75'}
      %tbody
        %tr
          %td
            - if session[:host_items]
              - @embedded = true
              - @gtl_type = @settings[:views][:host]
              = render :partial => 'layouts/gtl'

:javascript
  ManageIQ.angular.app.value('hostFormId', '#{(@host.id || (session[:host_items] && session[:host_items].join(","))) || "new"}');
  angular.bootstrap(jQuery('#form_div'), ['ManageIQ'], { strictDi: true });
