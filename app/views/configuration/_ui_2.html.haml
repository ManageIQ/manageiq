= render :partial => "layouts/flash_msg"

#tab_div
  = form_tag({:action => "update"},
             :id     => "config_form",
             :class  => "form-horizontal static",
             :method => :post) do
    .row
      .col-md-12.col-lg-6
        %fieldset
          %h3
            = _('General')
          - keys = {:tagging      => _('Tagging'),
                    :compare      => _('Compare'),
                    :compare_mode => _('Compare Mode'),
                    :drift        => _('Drift'),
                    :drift_mode   => _('Drift Mode')}
          - keys.each do |resource, view_name|
            .form-group
              %label.col-md-3.control-label
                #{view_name}
              .col-md-8
                %ul.list-inline= render_view_buttons(resource, @edit[:new][:views][resource])

        - if has_any_role?(%w(service catalog_items_accord catalog_items_view orchestration_templates_accord vms_instances_filter_accord templates_images_filter_accord))
          %fieldset
            %h3
              = _('Services')
            - keys = {:service               => ["service",                        _('My Services')],
                      :catalog               => ["catalog_items_accord",           _('Service Catalogs')],
                      :servicetemplate       => ["catalog_items_view",             _('Catalog Items')],
                      :orchestrationtemplate => ["orchestration_templates_accord", _('Orchestration Templates')],
                      :vm                    => ["vms_instances_filter_accord",    _('VMs & Instances')],
                      :miqtemplate           => ["templates_images_filter_accord", _('Templates & Images')]}
            - keys.each do |resource, (feature, view_name)|
              - if role_allows(:feature => feature)
                .form-group
                  %label.col-md-3.control-label
                    #{view_name}
                  .col-md-8
                    %ul.list-inline= render_view_buttons(resource, @edit[:new][:views][resource])
        - if has_any_role?(%w(ems_container_show_list container_group_show_list container_node_show_list container_route_show_list container_project_show_list container_replicator_show_list container_image_show_list container_image_registry_show_list container_service_accord containers_filter_accord containers_accord persistent_volume container_build_show_list))
          %fieldset
            %h3
              = _('Containers')
            - keys = {:emscontainer           => "ems_container",
                      :containernode          => "container_node",
                      :containergroup         => "container_group",
                      :containerservice       => "container_service",
                      :containerroute         => "container_route",
                      :containerproject       => "container_project",
                      :containerreplicator    => "container_replicator",
                      :containerimage         => "container_image",
                      :containerimageregistry => "container_image_registry",
                      :container              => "container",
                      :containerbuild         => "container_build",
                      :persistentvolume       => "persistent_volume"}
            - keys.each do |resource, table_view_name|
              .form-group
                %label.col-md-3.control-label
                  = ui_lookup(:tables => table_view_name)
                .col-md-8
                  %ul.list-inline= render_view_buttons(resource, @edit[:new][:views][resource])
      .col-md-12.col-lg-6
        - if has_any_role?(%w(ems_middleware_show_list middleware_server_show_list middleware_deployment_show_list))
          %fieldset
            %h3
              = _('Middleware')
            - keys = {:manageiq_providers_middlewaremanager => ["ems_middleware_show_list",        _('Middleware Providers')],
                      :middlewareserver                     => ["middleware_server_show_list",     _('Middleware Servers')],
                      :middlewaredeployment                 => ["middleware_deployment_show_list", _('Middleware Deployments')]}
            - keys.each do |resource, (feature, view_name)|
              - if role_allows(:feature => feature)
                .form-group
                  %label.col-md-3.control-label
                    #{view_name}
                  .col-md-8
                    %ul.list-inline= render_view_buttons(resource, @edit[:new][:views][resource])
        - if has_any_role?(%w(ems_cloud_show_list availability_zone_show_list cloud_tenant_show_list flavor_show_list instances_accord instances_filter_accord images_filter_accord orchestration_stack_show_list cloud_volume_show_list cloud_volume_snapshot_show_list cloud_object_store_container_show_list))
          %fieldset
            %h3
              = _('Clouds')
            - if role_allows(:feature => "ems_cloud_show_list")
              .form-group
                %label.col-md-3.control-label
                  #{ui_lookup(:tables => "ems_clouds")}
                .col-md-8
                  %ul.list-inline= render_view_buttons(:emscloud, @edit[:new][:views][:emscloud])
            - if role_allows(:feature => "availability_zone_show_list")
              .form-group
                %label.col-md-3.control-label
                  = _('Availability Zones')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:availabilityzone, @edit[:new][:views][:availabilityzone])
            - if role_allows(:feature => "cloud_tenant_show_list")
              .form-group
                %label.col-md-3.control-label
                  = _('Tenants')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:cloudtenant, @edit[:new][:views][:cloudtenant])
            - if role_allows(:feature => "flavor_show_list")
              .form-group
                %label.col-md-3.control-label
                  = _('Flavors')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:flavor, @edit[:new][:views][:flavor])
            - if has_any_role?(%w(instances_accord instances_filter_accord))
              .form-group
                %label.col-md-3.control-label
                  = _('Instances')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:vmcloud, @edit[:new][:views][:vmcloud])
            - if has_any_role?(%w(images_accord images_filter_accord))
              .form-group
                %label.col-md-3.control-label
                  = _('Images')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:templatecloud, @edit[:new][:views][:templatecloud])
            - if role_allows(:feature => "orchestration_stack_show_list")
              .form-group
                %label.col-md-3.control-label
                  = _('Stacks')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:orchestrationstack, @edit[:new][:views][:orchestrationstack])
            - if role_allows(:feature => "cloud_volume_show_list")
              .form-group
                %label.col-md-3.control-label
                  = _('Volumes')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:cloudvolume, @edit[:new][:views][:cloudvolume])
            - if role_allows(:feature => "auth_key_pair_cloud_show_list")
              .form-group
                %label.col-md-3.control-label
                  = _('Key Pairs')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:authkeypaircloud, @edit[:new][:views][:authkeypaircloud])
            - if role_allows(:feature => "cloud_volume_snapshot_show_list")
              .form-group
                %label.col-md-3.control-label
                  = _('Snapshots')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:cloudvolumesnapshot, @edit[:new][:views][:cloudvolumesnapshot])
            - if role_allows(:feature => "cloud_object_store_container_show_list")
              .form-group
                %label.col-md-3.control-label
                  = _('Object Store')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:cloudobjectstorecontainer, @edit[:new][:views][:cloudobjectstorecontainer])
        - if has_any_role?(%w(ems_infra_show_list ems_cluster_show_list host_show_list resource_pool_show_list storage_show_list vandt_accord vms_filter_accord templates_filter_accord))
          %fieldset
            %h3
              = _('Infrastructure')
            - if role_allows(:feature => "ems_infra_show_list")
              .form-group
                %label.col-md-3.control-label
                  = ui_lookup(:tables => "ems_infras")
                .col-md-8
                  %ul.list-inline= render_view_buttons(:emsinfra, @edit[:new][:views][:emsinfra])
            - if role_allows(:feature => "ems_cluster_show_list")
              .form-group
                %label.col-md-3.control-label
                  = title_for_clusters
                .col-md-8
                  %ul.list-inline= render_view_buttons(:emscluster, @edit[:new][:views][:emscluster])
            - if role_allows(:feature => "host_show_list")
              .form-group
                %label.col-md-3.control-label
                  = title_for_hosts
                .col-md-8
                  %ul.list-inline= render_view_buttons(:host, @edit[:new][:views][:host])
            - if has_any_role?(%w(vandt_accord vms_filter_accord))
              .form-group
                %label.col-md-3.control-label
                  = _('VMs')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:vminfra, @edit[:new][:views][:vminfra])
            - if has_any_role?(%w(vandt_accord templates_filter_accord))
              .form-group
                %label.col-md-3.control-label
                  = _('Templates')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:templateinfra, @edit[:new][:views][:templateinfra])
            - if role_allows(:feature => "resource_pool_show_list")
              .form-group
                %label.col-md-3.control-label
                  = _('Resource Pools')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:resourcepool, @edit[:new][:views][:resourcepool])
            - if role_allows(:feature => "storage_show_list")
              .form-group
                %label.col-md-3.control-label
                  = ui_lookup(:tables => "storages")
                .col-md-8
                  %ul.list-inline= render_view_buttons(:storage, @edit[:new][:views][:storage])
            - if role_allows(:feature => "storage_pod")
              .form-group
                %label.col-md-3.control-label
                  = ui_lookup(:tables => "storage_pods")
                .col-md-8
                  %ul.list-inline= render_view_buttons(:storage_pod, @edit[:new][:views][:storage_pod])
            - if role_allows(:feature => "providers_accord")
              .form-group
                %label.col-md-3.control-label
                  = _('Configuration Management Providers')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:cm_providers, @edit[:new][:views][:cm_providers])
            - if role_allows(:feature => "configured_systems_filter_accord")
              .form-group
                %label.col-md-3.control-label
                  = _('Configuration Management Configured Systems')
                .col-md-8
                  %ul.list-inline= render_view_buttons(:cm_configured_systems,
                                                    @edit[:new][:views][:cm_configured_systems])
        - if get_vmdb_config[:product][:storage]
          %fieldset
            %h3
              = _('Storage')
            - keys = {:ontapstoragesystem   => "ontap_storage_system",
                      :ontapstoragevolume   => "ontap_storage_volume",
                      :ontaplogicaldisk     => "ontap_logical_disk",
                      :ontapfileshare       => "ontap_file_share",
                      :cimbasestorageextent => "cim_base_storage_extent",
                      :snialocalfilesystem  => "snia_local_file_system"}
            - keys.each do |resource, table_view_name|
              .form-group
                %label.col-md-3.control-label
                  = ui_lookup(:tables => table_view_name)
                .col-md-8
                  %ul.list-inline= render_view_buttons(resource, @edit[:new][:views][resource])
            .form-group
              %label.col-md-3.control-label
                = _('Storage Managers')
              .col-md-8
                %ul.list-inline= render_view_buttons(:storagemanager, @edit[:new][:views][:storagemanager])
    = render :partial => "/layouts/form_buttons"
