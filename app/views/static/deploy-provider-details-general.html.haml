%div{"ng-controller" => "containers.deployProviderDetailsGeneralController"}
  %div{"miq-wizard-substep" => "", "next-enabled" => "deploymentDetailsGeneralComplete", "on-show" => "onShow", "review-template" => "{{reviewTemplate}}", "show-review-details" => "true", "step-id" => "details-general", "step-priority" => "0", "step-title" => "General"}
    %form.form-horizontal
      %div{"pf-form-group" => "", "pf-input-class" => "miq-input-class", "pf-label" => "Name", "pf-label-class" => "miq-input-label-class", :required => ""}
        %input#new-provider-name{:name => "name", "ng-change" => "updateProviderName()", "ng-model" => "data.providerName", :required => "", :type => "text"}/
      %div{"pf-form-group" => "", "pf-input-class" => "miq-radio-input-class", "pf-label" => "Type", "pf-label-class" => "miq-input-label-class", :required => ""}
        %label.radio
          %input{"ng-model" => "data.providerType", :type => "radio", :value => "openshiftOrigin"} OpenShift Origin
        %label.radio
          %input{"ng-model" => "data.providerType", :type => "radio", :value => "openshiftEnterprise"} OpenShift Enterprise
    .miq-form-heading Provider to provision on
    %form.form-horizontal
      .miq-form-no-label
        %label.radio
          %input{"ng-model" => "data.provisionOn", :type => "radio", :value => "existingVms"} Use existing VMs from an existing provider
        .form-group.sub-group
          %select#exitingProviderType{"ng-disabled" => "data.provisionOn != 'existingVms'", "ng-model" => "data.existingProviderId", "pf-select" => ""}
            %option{"ng-repeat" => "provider in existingProviders", :value => "{{provider.id}}"} {{provider.name}}
        %label.radio
          %input{"ng-model" => "data.provisionOn", :type => "radio", :value => "newVms"} Create new VMs on provider
        .form-group.sub-group
          %select#newVmProviders{"ng-disabled" => "data.provisionOn != 'newVms'", "ng-model" => "data.newVmProviderId", "pf-select" => ""}
            %option{"ng-repeat" => "provider in newVmProviders", :value => "{{provider.id}}"} {{provider.name}}
          %a{"ng-class" => "{disabled: data.provisionOn != 'newVms'}"} + Create new provider
        %label.radio
          %input{"ng-model" => "data.provisionOn", :type => "radio", :value => "noProvider"} Specify a list of machines to deploy on (No existing provider)
