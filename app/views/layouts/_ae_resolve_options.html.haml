- field_changed_url ||= "form_field_changed"
- ae_sim_form       ||= false
- ae_custom_button  ||= false
- rec_id = @edit && @edit[:action_id].present? ? @edit[:action_id] : "new"
- url    = url_for(:action => field_changed_url, :id => rec_id)
- if form_action == "ae_resolve"
  %hr
  %h3
    = _("Object Details")
  .form-horizontal
    .form-group
      %label.col-md-2.control-label
        = _("System/Process")
      .col-md-8
        = select_tag('instance_name',
                     options_for_select(resolve[:instance_names].sort_by(&:downcase),
                     resolve[:new][:instance_name]),
                     "data-miq_sparkle_on"  => true,
                     "data-miq_sparkle_off" => true,
                     :class    => "selectpicker")
        :javascript
          miqInitSelectPicker();
          miqSelectPickerEvent('instance_name', "#{url}")
    .form-group
      %label.col-md-2.control-label
        = _("Message")
      .col-md-8
        = text_field_tag("object_message",
                         resolve[:new][:object_message],
                         :maxlength         => MAX_NAME_LEN,
                         :class             => "form-control",
                         "data-miq_observe" => {:interval => '.5',
                                                :url      => url}.to_json)
        - unless is_browser_ie?
          = javascript_tag("if (!$('#description').length) #{javascript_focus('object_message')}")
    .form-group
      %label.col-md-2.control-label
        = _("Request")
      .col-md-8
        = text_field_tag("object_request",
                         resolve[:new][:object_request],
                         :maxlength         => MAX_NAME_LEN,
                         :class            => "form-control",
                         "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
- if form_action != "miq_action"
  - if ae_custom_button
    %hr
    %h3
      = _("Object Attribute")
    .form-horizontal
      .form-group
        %label.col-md-2.control-label
          = _("Type")
        .col-md-8
          = ui_lookup(:model => @resolve[:target_class])
  - else
    %hr
    %h3
      = _("Object Attribute")
    .form-horizontal
      .form-group
        %label.col-md-2.control-label
          = _("Type")
        .col-md-8
          = select_tag('target_class',
                       options_for_select([["<None>", nil]] + resolve[:target_classes],
                       resolve[:new][:target_class]),
                       "data-miq_sparkle_on"  => true,
                       "data-miq_sparkle_off" => true,
                       :class    => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent('target_class', "#{url}")
      - if resolve[:new][:target_class] && !resolve[:new][:target_class].blank? && resolve[:targets]
        .form-group
          %label.col-md-2.control-label
            = _("Selection")
          .col-md-8
            = select_tag('target_id',
                         options_for_select([["<Choose>", nil]] + resolve[:targets],
                                            resolve[:new][:target_id]),
                         "data-miq_sparkle_on"  => true,
                         "data-miq_sparkle_off" => true,
                         :class    => "selectpicker")
            :javascript
              miqInitSelectPicker();
              miqSelectPickerEvent('target_id', "#{url}")
- if ae_sim_form
  %hr
  %h3
    = _("Simulation Parameters")
  .form-horizontal
    .form-group
      %label.col-md-2.control-label
        = _("Execute Methods")
      .col-md-8
        = check_box_tag("readonly",
                        "1",
                        resolve[:new][:readonly] != true,
                        "data-miq_observe_checkbox" => {:url => url}.to_json)
%hr
%h3
  = _("Attribute/Value Pairs")
.form-horizontal
  - AE_MAX_RESOLUTION_FIELDS.times do |i|
    - f = "attribute_" + (i + 1).to_s
    - v = "value_" + (i + 1).to_s
    .form-group
      %label.col-md-2.control-label
        = (i + 1).to_s
      .col-md-4
        = text_field_tag(f,
                         resolve[:new][:attrs][i][0],
                         :maxlength         => MAX_NAME_LEN,
                         :class            => "form-control",
                         "data-miq_observe" => {:interval => '.5',
                                                :url => url}.to_json)
      .col-md-4
        = text_field_tag(v,
                         resolve[:new][:attrs][i][1],
                         :maxlength         => MAX_NAME_LEN,
                         :class            => "form-control",
                         "data-miq_observe" => {:interval => '.5',
                                                :url => url}.to_json)
