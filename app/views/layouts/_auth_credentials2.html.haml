-#
  locals:
    * validate      -- bool, display 'Validate' button
    * change_url    -- url for changes observation
    * validate_url  -- url for credentials validation
    * prefix        -- prefix for params

- prefix ||= ''
- pfx = prefix.blank? ? '' : prefix + '_'
- default_labels = {:user     => 'Login',
                    :password => 'Change Password / Confirm Password',
                    :title    => 'Validate the credentials'}
- labels = defined?(labels) && labels.present? ? default_labels.update(labels) : default_labels
- observe_url_json = {:interval => '.5', :url => change_url}.to_json

.form-group
  %label.col-md-2.control-label
    = labels[:user]
  .col-md-8
    = text_field_tag("#{pfx}userid",
                     @edit[:new]["#{pfx}userid".to_sym],
                     :maxlength         => 50,
                     :class             => "form-control",
                     'data-miq_observe' => observe_url_json)
.form-group
  %label.col-md-2.control-label
    = labels[:password]
  .col-md-4
    = password_field_tag("#{pfx}password", '',
                         :maxlength         => 50,
                         :class             => "form-control",
                         :placeholder       => placeholder_if_present(@edit[:new]["#{pfx}password".to_sym]),
                         'data-miq_observe' => observe_url_json)
  .col-md-4
    = password_field_tag("#{pfx}password2", '',
                         :maxlength         => 50,
                         :class             => "form-control",
                         :placeholder       => placeholder_if_present(@edit[:new]["#{pfx}password2".to_sym]),
                         'data-miq_observe' => observe_url_json)
- if validate
  .form-group
    .col-md-10{:align => 'right'}
      = link_to('Validate',
                {:action => validate_url,
                 :button => 'validate',
                 :type   => prefix,
                 :id     => record_id},
                :class                => 'btn btn-primary btn-xs',
                :alt                  => labels[:title],
                :title                => labels[:title],
                :remote               => true,
                'data-miq_sparkle_on' => true)
-# Note that we do not turn off the sparkle. We expect async handling here.
