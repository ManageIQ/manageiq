- change_url ||= "form_field_changed"
- pfx        ||= ""
- record     ||= nil
- rec_id   = record && record.id ? "#{record.id}" : "new"
- url      = url_for(:action => change_url, :id => "#{rec_id}")
- url_json = {:interval => '.5', :url => url}.to_json
- uid_label ||= _("Username")
- pwd_label ||= _("Private Key")

%tr
  %td.key= uid_label
  %td
    = text_field_tag("#{pfx}_userid",
                     @edit[:new]["#{pfx}_userid".to_sym],
                     :maxlength         => 50,
                     "data-miq_observe" => url_json)
%tr
  %td.key= pwd_label
  %td
    - if rec_id == "new"
      %iframe.import-hidden-iframe(name="upload_target")
      = form_tag({:action => "upload_key_file"}, :target => "upload_target", :multipart => true) do
        = file_field("upload", "file")
        = submit_tag(_("Upload"), :id => "upload_key_file", :class => "upload")
      = hidden_field_tag("#{pfx}_password",
                         '',
                         :class => "hidden-#{pfx}_password",
                         :placeholder => placeholder_if_present(@edit[:new]["#{pfx}_password".to_sym]),
                         "data-miq_observe" => url_json)
    - else
      = password_field_tag("#{pfx}_password",
                           '',
                           :placeholder => placeholder_if_present(@edit[:new]["#{pfx}_password".to_sym]),
                           "data-miq_observe" => url_json)


:javascript
  $(function() {
    $('#upload_key_file').click(function() {
      miqSparkleOn();
    });

    listenForKeyPostMessages();
  });
