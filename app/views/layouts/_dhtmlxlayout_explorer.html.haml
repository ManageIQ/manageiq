- layout_id              ||= "layout_div"
- layout_name            ||= "dhxLayout"
- layout_pattern         ||= "2U"
- layoutb_name           ||= "dhxLayoutB"
- accord_name            ||= "dhxAccord"
- width_factor           ||= nil
- lock_slider            ||= false
- accords                ||= nil
- accord_select_function ||= nil
- right_cell_top         ||= "taskbar_div"
- right_cell_middle      ||= "main_div"
- right_cell_bottom      ||= "paging_div"
- left_cell_bottom       ||= nil
- cell_a_text            ||= nil
- cell_b_text            ||= nil
- cell_a_object          ||= nil
- cell_b_object          ||= nil
- show_searchbar         ||= nil

- if accords
  = render :partial => "layouts/dhtmlx_tags", :locals => {:control => "accordion"}

%script{:type => "text/javascript"}

  // Following function will be called by miqOnLoad if init_dhtmlx_layout is true
  function miqInitDhtmlxLayout() {
  #{layout_name} = new dhtmlXLayoutObject("center_div", "#{layout_pattern}");

  - if width_factor
    width = #{layout_name}.cells("a").getWidth() * #{width_factor.split("/").first} / #{width_factor.split("/").last}
  - elsif saved_width = @settings.fetch_path(:explorer, params[:controller], :width)
    width = #{saved_width}
  - else
    width = #{layout_name}.cells("a").setWidth(#{layout_name}.cells("a").getWidth() / 2)
    
  #{layout_name}.cells("a").setWidth(width)

  - if lock_slider
    #{layout_name}.cells("a").fixSize(true, false);
  - else
    #{layout_name}.attachEvent("onPanelResizeFinish", miqOnPanelResize);

    // Build the accordions in the left cell, if present
  - if accords
    #{accord_name} = #{layout_name}.cells("a").attachAccordion();
    dhxAccord.setIconsPath("/images/icons/new/");

    - accords.each do |a|
      #{accord_name}.addItem("#{a[:name]}", "#{a[:title].html_safe}");
      #{accord_name}.cells("#{a[:name]}").attachObject("#{a[:container]}");

    - active_accord ||= accords.first[:name]
    #{accord_name}.openItem("#{active_accord}");
    - if accord_select_function
      #{accord_name}.attachEvent("onBeforeActive", #{accord_select_function});

    if (miqDomElementExists('custom_left_cell_div'))
    #{accord_name} = #{layout_name}.cells("a").view("custom").attachObject('custom_left_cell_div');

  - if @explorer
    #{layout_name}.cells("a").hideHeader();
    #{layout_name}.cells("b").hideHeader();

    #{layoutb_name} = new dhtmlXLayoutObject(#{layout_name}.cells("b"), "3E");
    #{layoutb_name}._minHeight = 20;
    #{layoutb_name}.cells("a").setHeight(32);
    #{layoutb_name}.cells("c").setHeight(32);
    #{layoutb_name}.cells("a").hideHeader();
    #{layoutb_name}.cells("c").hideHeader();
    var cell = #{layoutb_name}.cells("b");
    cell.childNodes[0].childNodes[0].childNodes[4].style.display = "none";
    #{layoutb_name}.cells("b").setText("#{@right_cell_text}");
    #{layoutb_name}.cells("a").fixSize(false, true);
    #{layoutb_name}.cells("c").fixSize(false, true);
    #{layoutb_name}.setAutoSize("a;b;c", "b");
    #{layoutb_name}.cells("a").attachObject('#{right_cell_top}');
    #{layoutb_name}.cells("b").attachObject('#{right_cell_middle}');
    #{layoutb_name}.cells("c").attachObject('#{right_cell_bottom}');

    #{layout_name}.attachEvent('onPanelResizeFinish', miqResizeTaskbarCell);
    #{layout_name}.attachEvent('onResizeFinish', miqResizeTaskbarCell);

    - if left_cell_bottom
      #{layout_name}.cells("c").setHeight(32);
      #{layout_name}.cells("c").hideHeader();
      #{layout_name}.setAutoSize("b", "a;b");
      #{layout_name}.cells("c").attachObject('#{left_cell_bottom}');

    // Set collapsed cell height to zero for MIQ
    #{layoutb_name}._collapsedH = 0;

    - if (!@in_a_form && @record && ![:diagnostics_tree, :savedreports_tree,:svccat_tree].include?(x_active_tree)) || @collapse_c_cell
      #{layoutb_name}.cells("c").collapse();

    - if (@layout == "chargeback" && (x_node == "root" || x_active_tree == :cb_assignments_tree || (x_active_tree == :cb_reports_tree && !@report))) || ["miq_capacity_bottlenecks"].include?(@layout)
      #{layoutb_name}.cells("a").collapse();

    - if show_advanced_search?
      #{javascript_show_if_exists("adv_searchbox_div")}

  - else

    - if cell_a_text
      #{layout_name}.cells("a").setText("#{cell_a_text}");
      var cell = #{layout_name}.cells("a");
      cell.childNodes[0].childNodes[0].childNodes[4].style.display = "none";
    - else
      #{layout_name}.cells("a").hideHeader();

    - if cell_a_object
      #{layout_name}.cells("a").attachObject('#{cell_a_object}');

    - if cell_b_text
      #{layout_name}.cells("b").setText("#{cell_b_text}");
      var cell = #{layout_name}.cells("b");
      cell.childNodes[0].childNodes[0].childNodes[4].style.display = "none";
    - else
      #{layout_name}.cells("b").hideHeader();

    - if cell_b_object
      #{layout_name}.cells("b").attachObject('#{cell_b_object}');


  - if show_searchbar
    = javascript_show("control_searchbar")
    = javascript_focus("search_text")
  };

:javascript
  ManageIQ.layout.toolbar = {
    hide: function() { #{layoutb_name}.cells('a').collapse(); },
    show: function() { #{layoutb_name}.cells('a').expand(); },
    height: function(v) { #{layoutb_name}.cells('a').setHeight(v); }
  };

  ManageIQ.layout.content = {
    hide: function() { #{layoutb_name}.cells('b').collapse(); },
    show: function() { #{layoutb_name}.cells('b').expand(); },
    height: function(v) { #{layoutb_name}.cells('b').setHeight(v); },
    title: function(v) { #{layoutb_name}.cells('b').setText(v); }
  };

  ManageIQ.layout.paginator = {
    hide: function() { #{layoutb_name}.cells('c').collapse(); },
    show: function() { #{layoutb_name}.cells('c').expand(); },
    height: function(v) { #{layoutb_name}.cells('c').setHeight(v); }
  }