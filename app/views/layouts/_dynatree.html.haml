- cfme_changes_check          ||= false
- cfme_no_click               ||= false
- click_url                   ||= false
- cookie_id_prefix            ||= "treeOpenStatex"
- check_url                   ||= false
- select_node                 ||= false
- id_prefix                   ||= ""
- checkboxes                  ||= false
- three_checks                ||= false
- disable_checks              ||= false
- tree_state                  ||= false
- onmousein                   ||= false
- onmouseout                  ||= false
- onclick                     ||= false
- onselect                    ||= false
- oncheck                     ||= false
- no_base_exp                 ||= false
- open_close_all_on_dbl_click ||= false
- autoload                    ||= false
- min_expand_level            ||= 1
- tree_id                     ||= "tree_div"
- tree_name                   ||= "tree"

%script{:type => "text/javascript"}
  - if check_url
    check_url = "#{check_url}"
  - if click_url
    ManageIQ.clickUrl = "#{click_url}";
  cfme_changes_check = #{cfme_changes_check}
  - if session[:group_changed]
    miqDeleteDynatreeCookies();
    - session[:group_changed] = false

  $("##{tree_id}").dynatree({
  title: "#{tree_name}",
  imagePath: "",
  generateIds: true,
  idPrefix: "#{id_prefix}",
  children: #{json_tree.to_s.html_safe},
  cookieId: "#{cookie_id_prefix}#{tree_name}",
  cookie: {path: "/"},

  - if no_base_exp
    onDblClick: miqOnDblClickNoBaseExpand,
  - if min_expand_level
    minExpandLevel: #{min_expand_level},
  - if checkboxes
    checkbox: #{checkboxes},
  - if three_checks
    selectMode: 3,
  - if open_close_all_on_dbl_click
    onDblClick: miqOnDblClickExpand,
  - if tree_state
    persist: true,

  - if cfme_no_click
    onClick: function(node, event) {
    var event_type = node.getEventTargetType(event);
    if (event_type != 'expander') {
    return false;
    }
    },

  - if onselect
    onSelect: function(flag, node) {
    var selectedNodes = node.tree.getSelectedNodes();
    var selectedKeys = $.map(selectedNodes, function(node) {
    return node.data.key;
    });
    #{onselect}('#{tree_name}', node.data.key, flag, selectedKeys);
    },

  - if onclick || disable_checks || oncheck

    - if onclick
      onActivate: function(node) {
      #{onclick}(node.data.key);
      },

    onClick: function(node, event) {
    var event_type = node.getEventTargetType(event);
    if (event_type != 'expander' && node.data.cfmeNoClick) return false;
    - if onclick
      if (event_type == 'icon' || event_type == 'title' || event.target.localName == 'img') {
      - if click_url
        if (node.isActive()) #{onclick}(node.data.key);
        return;
      - else
        if (miqCheckForChanges() == false) {
        this.activeNode.focus();
        return false;
        } else {
        if (node.isActive()) #{onclick}(node.data.key);
        return;
        }
      }

    - if disable_checks || oncheck
      if (event_type == 'checkbox') {
      - if disable_checks
        return false;
      - elsif oncheck
        #{oncheck}(node, "#{tree_name}");
        return;
      }

      if (event_type != 'expander') return false;
    },

    - if onmousein || onmouseout
      onExpand: function(node){
      miqBindHoverEvent("#{tree_name}");
      },


  - if autoload
    onLazyRead: function(node) {
    miqOnLazyReadGetNodeChildren(node, '#{tree_name}', '#{request.parameters[:controller]}');
    },

  - if @explorer && tree_name == x_active_tree.to_s
    onPostInit: function(isReloading, isError) {
    miqDynatreeActivateNodeSilently('#{tree_name}', '#{select_node}');
    },

  debugLevel: 0
  });

  - if @reselect_node
    miqDynatreeActivateNodeSilently('#{tree_name}', '#{@reselect_node}');

  - if @expand_parent_nodes
    miqExpandParentNodes("#{tree_name}", "#{@expand_parent_nodes}");

  - if @add_nodes && @add_nodes[x_active_tree] && tree_name == x_active_tree.to_s
    miqAddNodeChildren(
    '#{x_active_tree}',
    '#{@add_nodes[x_active_tree][:key]}',
    '#{select_node}',
    #{@add_nodes[x_active_tree][:children].to_json.html_safe}
    );

  - if onmousein || onmouseout
    miqBindHoverEvent("#{tree_name}");
