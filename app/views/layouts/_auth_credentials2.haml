-# locals:
-#  * validate      -- bool, display 'Validate' button
-#  * change_url    -- url for changes observation
-#  * validate_url  -- url for credentials validation
-#  * prefix        -- prefix for params

- prefix ||= ''
- pfx = prefix.blank? ? '' : prefix + '_'
- default_labels = {:user     => 'Login',
                    :password => 'Change Password / Confirm Password',
                    :title    => 'Validate the credentials'}
- labels = defined?(labels) && labels.present? ? default_labels.update(labels) : default_labels
- observe_url_json = {:interval => '.5', :url => change_url}.to_json

%tr
  %td{:class => 'key'}
    =labels[:user]
  %td
    = text_field_tag("#{pfx}userid",
                     @edit[:new]["#{pfx}userid".to_sym],
                     :maxlength         => 50,
                     'data-miq_observe' => observe_url_json)
%tr
  %td{:class => 'key'}
    =labels[:password]
  %td
    = password_field_tag("#{pfx}password", '',
                         :maxlength         => 50,
                         :placeholder       => placeholder_if_present(@edit[:new]["#{pfx}password".to_sym]),
                         'data-miq_observe' => observe_url_json)
    = password_field_tag("#{pfx}password2", '',
                         :maxlength         => 50,
                         :placeholder       => placeholder_if_present(@edit[:new]["#{pfx}password2".to_sym]),
                         'data-miq_observe' => observe_url_json)
  - if validate
    %tr
      %td{:colspan => 2, :align => 'right'}
        = link_to('Validate',
                  {:action => validate_url,
                   :button => 'validate',
                   :type   => prefix,
                   :id     => record_id},
                  :class                => 'btn btn-primary btn-xs',
                  :alt                  => labels[:title],
                  :title                => labels[:title],
                  :remote               => true,
                  'data-miq_sparkle_on' => true)
-# Note that we do not turn off the sparkle. We expect async handling here.
