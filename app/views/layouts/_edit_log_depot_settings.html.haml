- action ||= "log_depot_field_changed"
- div_num ||= ""
- record    = @schedule || @record
- url       = url_for(:action => action, :id => (record.try(:id) || "new"))

#form_filter_div
  = render :partial => "layouts/flash_msg", :locals => {:div_num => div_num}
  - if (@sb[:active_tree] == :diagnostics_tree && @sb[:active_tab] == "diagnostics_database") || (@sb[:active_tree] == :settings_tree)
    = _("Database Backup Settings")
  - else
    = _("Editing Log Depot Settings for %{class}: %{display}") % {:class   => Dictionary.gettext(record.class.name, :type => :model, :notfound => :titleize),
                                                                  :display => @record.display_name}
  .form-group
    %label.control-label.col-md-2
      = _("Type")
    .col-md-8
      = select_tag("log_protocol",
                   options_for_select([[_("<No Depot>"), nil]] + @edit[:protocols_arr].sort,
                                      @edit[:protocol]),
                   :class             => "selectpicker")
      :javascript
        miqInitSelectPicker();
        miqSelectPickerEvent('log_protocol', '#{url}')
  - if @edit[:protocol]
    .form-group
      %label.control-label.col-md-2
        = _("Depot Name")
      .col-md-8
        = text_field_tag("depot_name",
                         @edit[:new][:depot_name],
                         :maxlength         => 50,
                         :class             => "form-control",
                         "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
    .form-group
      %label.control-label.col-md-2
        = _("URI")
      .col-md-8
        #{@edit[:new][:uri_prefix]}://
        = text_field_tag("uri", @edit[:new][:uri],
                         :maxlength         => 100,
                         "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
      = javascript_tag(javascript_focus('uri'))
    - if @edit[:new][:requires_credentials]
      -# log depot validation is handled by log_depot_edit :validate case,
      -# the rest (db backup, pxe, schedule, ..?) by log_depot_validate
      - validate_url = "log_depot_#{action == 'log_depot_field_changed' ? 'validate' : 'edit'}"
      = render(:partial => "/layouts/auth_credentials",
               :locals  => {:pfx          => "log",
                            :change_url   => action,
                            :validate_url => validate_url,
                            :record       => record})
