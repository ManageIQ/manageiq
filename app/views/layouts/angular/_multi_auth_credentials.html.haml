- validate_url ||= (record.id || @selected_hosts) ? "update" : "create"
- legendtext ||= _("Endpoints")

#auth_tabs
  %h3
    = legendtext
  %ul.nav.nav-tabs
    = miq_tab_header('default') do
      %i{"error-on-tab" => "default", :style => "color:#cc0000"}
      = _("Default")
    - if %w(ems_cloud ems_infra).include?(controller_name)
      = miq_tab_header('metrics') do
        %i{"error-on-tab" => "metrics", :style => "color:#cc0000"}
        = _("C & U Database")
      = miq_tab_header('amqp') do
        %i{"error-on-tab" => "amqp", :style => "color:#cc0000"}
        = _("Events")
      = miq_tab_header('ssh_keypair') do
        %i{"error-on-tab" => "ssh_keypair", :style => "color:#cc0000"}
        = _("RSA key pair")
    - elsif controller_name == "ems_container"
      = miq_tab_header('hawkular') do
        %i{"error-on-tab" => "hawkular", :style => "color:#cc0000"}
        = _("Hawkular")
    - elsif controller_name == "host"
      = miq_tab_header('remote') do
        = _("Remote Login")
      = miq_tab_header('ws') do
        = _("Web Services")
      = miq_tab_header('ipmi') do
        = _("IPMI")

  .tab-content
    = miq_tab_content('default', 'default') do
      .form-group
        .col-md-12{"ng-if" => "#{ng_model}.ems_controller == 'ems_container' || " +  |
                              "#{ng_model}.ems_controller == 'ems_middleware' || " + |
                              "#{ng_model}.ems_controller == 'ems_network'"}         |
          = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                => true,
                                                :ng_model               => "#{ng_model}",
                                                :id                     => record.id,
                                                :prefix                 => "default"}
        .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'ec2'"}
          = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show                => true,
                                              :ng_model               => "#{ng_model}",
                                              :ng_reqd_userid         => true,
                                              :ng_reqd_password       => true,
                                              :ng_reqd_verify         => true,
                                              :validate_url           => validate_url,
                                              :userid_label           => _("Access Key ID"),
                                              :password_label         => _("Secret Access Key"),
                                              :verify_label           => _("Confirm Secret Access Key"),
                                              :passwd_mismatch        => _("Secret Access Keys do not match"),
                                              :change_stored_password => _("Change stored secret access key"),
                                              :cancel_password_change => _("Cancel secret access key change"),
                                              :id                     => record.id,
                                              :prefix                 => "default",
                                              :verify_title_off       => _("Access Key ID and matching Secret Access Key fields are needed to perform verification of credentials"),
                                              :basic_info_needed      => true}
        .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'gce'"}
          = render :partial => "layouts/angular/auth_service_account_angular",
                               :locals  => {:ng_show                => true,
                                            :ng_model               => "#{ng_model}",
                                            :validate_url           => validate_url,
                                            :id                     => record.id,
                                            :prefix                 => "service_account",
                                            :basic_info_needed      => true}
        .col-md-12{"ng-if" => "#{ng_model}.emstype != 'gce' && #{ng_model}.emstype != 'ec2'" || "#{ng_model}" != "emsCommonModel"}
          %div{"ng-if" => "#{ng_model}.emstype == 'openstack' || (#{ng_model}.ems_controller == 'ems_infra' && #{ng_model}.emstype != 'rhevm')  || #{ng_model}.emstype == 'vmware_cloud'"}
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                => true,
                                                :ng_model               => "#{ng_model}",
                                                :id                     => record.id,
                                                :prefix                 => "default"}
          %div{"ng-if" => "#{ng_model}.ems_controller == 'ems_infra' && #{ng_model}.emstype == 'rhevm'"}
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                   :locals  => {:ng_show                => true,
                                                :ng_model               => "#{ng_model}",
                                                :id                     => record.id,
                                                :prefix                 => "default",
                                                :ng_reqd_api_port       => "false"}
          %div{"ng-if" => controller_name != "ems_container"}
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                   :locals  => {:ng_show           => "true",
                                                :ng_model          => "#{ng_model}",
                                                :ng_reqd_userid    => "#{ng_model}" == "hostModel" ? false : true,
                                                :ng_reqd_password  => "#{ng_model}" == "hostModel" ? false : true,
                                                :ng_reqd_verify    => "#{ng_model}" == "hostModel" ? false : true,
                                                :validate_url      => validate_url,
                                                :id                => record.id,
                                                :prefix            => "default",
                                                :basic_info_needed => true}
          %div{"ng-if" => controller_name == "ems_container"}
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                   :locals  => {:ng_show                => "true",
                                                :ng_model               => "#{ng_model}",
                                                :validate_url           => validate_url,
                                                :id                     => record.id,
                                                :prefix                 => "default",
                                                :ng_show_userid         => "false",
                                                :ng_reqd_password       => true,
                                                :ng_reqd_verify         => true,
                                                :password_label         => _("Token"),
                                                :verify_label           => _("Confirm Token"),
                                                :passwd_mismatch        => _("Tokens do not match"),
                                                :change_stored_password => _("Change stored token"),
                                                :cancel_password_change => _("Cancel stored token"),
                                                :basic_info_needed      => true}
      .form-group
        .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'gce'"}
          %span{:style => "color:black"}
            = _("Copy and paste the contents of your Service Account JSON file above.")
      .form-group
        .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'gce'"}
          %span{:style => "color:black"}
            = _("Used to authenticate as a service account against your provider.")
        .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype != 'gce'" && "#{ng_model}.ems_controller != 'ems_container'"}
          %span{:style => "color:black"}
            = _("Required. Should have privileged access, such as root or administrator.")
        .col-md-12{"ng-if" => "#{ng_model}.ems_controller == 'ems_container'"}
          %span{:style => "color:black"}
            = _("Required. Used to gather Utilization data.")

    - if %w(ems_cloud ems_infra).include?(params[:controller])
      = miq_tab_content('metrics', 'default') do
        .form-group
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'rhevm'"}
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                 :locals  => {:ng_show                => true,
                                              :ng_model               => "#{ng_model}",
                                              :id                     => record.id,
                                              :database_name_required => true,
                                              :database_name_show     => true,
                                              :prefix                 => "metrics",
                                              :ng_reqd_hostname       => "#{ng_model}.metrics_userid != '' && #{ng_model}.metrics_userid != undefined",
                                              :ng_reqd_api_port       => "false"}
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "#{ng_model}",
                                              :ng_reqd_userid    => "#{ng_model}.metrics_hostname != ''",
                                              :ng_reqd_password  => "#{ng_model}.metrics_userid != ''",
                                              :ng_reqd_verify    => "#{ng_model}.metrics_userid != ''",
                                              :validate_url      => validate_url,
                                              :id                => record.id,
                                              :prefix            => "metrics",
                                              :basic_info_needed => true}
        .form-group
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'rhevm'"}
            %span{:style => "color:black"}
              = _("Used to gather Capacity & Utilization metrics.")
      = miq_tab_content('amqp', 'default') do
        .form-group
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'openstack' || #{ng_model}.emstype == 'openstack_infra' || #{ng_model}.emstype == 'vmware_cloud'"}
            %label.radio-inline.control-label{"for" => "none_radio", "ng-show" => "#{ng_model}.emstype == 'vmware_cloud'"}
              %input{:type         => "radio",
                     :name         => "event_stream_selection",
                     :id           => "none_radio",
                     "ng-checked"  => "emsCommonModel.event_stream_selection == none",
                     :value        => "none",
                     "ng-model"    => "emsCommonModel.event_stream_selection",
                     "ng-change"   => "radioSelectionChanged()",
                     "checkchange" => ""}
                = _("None")
            %label.radio-inline.control-label{"for" => "ceilometer_radio", "ng-show" => "#{ng_model}.emstype == 'openstack' || #{ng_model}.emstype == 'openstack_infra'"}
              %input{:type         => "radio",
                     :name         => "event_stream_selection",
                     :id           => "ceilometer_radio",
                     "ng-checked"  => "emsCommonModel.event_stream_selection == ceilometer",
                     :value        => "ceilometer",
                     "ng-model"    => "emsCommonModel.event_stream_selection",
                     "ng-change"   => "radioSelectionChanged()",
                     "checkchange" => ""} Ceilometer
            %label.radio-inline.control-label{"for" => "amqp_radio"}
              %input{:type         => "radio",
                     :name         => "event_stream_selection",
                     :id           => "amqp_radio",
                     "ng-checked"  => "emsCommonModel.event_stream_selection == amqp",
                     :value        => "amqp",
                     "ng-model"    => "emsCommonModel.event_stream_selection",
                     "checkchange" => ""} AMQP
            %hr

            %div{"ng-if" => "emsCommonModel.event_stream_selection == 'amqp'"}
              = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                       :locals  => {:ng_show                => true,
                                    :ng_model               => "#{ng_model}",
                                    :id                     => record.id,
                                    :prefix                 => "amqp",
                                    :ng_reqd_api_port       => "false"}
              = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                       :locals  => {:ng_show           => true,
                                    :ng_model          => "#{ng_model}",
                                    :ng_reqd_userid    => true,
                                    :ng_reqd_password  => true,
                                    :ng_reqd_verify    => true,
                                    :validate_url      => validate_url,
                                    :id                => record.id,
                                    :prefix            => "amqp",
                                    :basic_info_needed => true}
        .form-group
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'openstack' || #{ng_model}.emstype == 'openstack_infra'"}
            %span{:style => "color:black"}
              %div{"ng-if" => "emsCommonModel.event_stream_selection == 'amqp'"}
                = _("Used to authenticate with OpenStack AMQP Messaging Bus for event handling. Configure AMQP if eventing is not enabled on Ceilometer.")
              %div{"ng-if" => "emsCommonModel.event_stream_selection == 'ceilometer'"}
                = _("Select Ceilometer if eventing is not enabled on AMQP.")
          .col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'vmware_cloud'"}
            %span{:style => "color:black"}
              %div{"ng-if" => "emsCommonModel.event_stream_selection == 'amqp'"}
                = _("Enable event monitoring. Used to automatically resync state when changes are performed on VMware vCloud Director directly.")
              %div{"ng-if" => "emsCommonModel.event_stream_selection == 'none'"}
                = _("Disable event monitoring.")
      = miq_tab_content('ssh_keypair', 'default') do
        .form-group
          .col-md-12.col-md-12{"ng-if" => "#{ng_model}" == "emsCommonModel" && "#{ng_model}.emstype == 'openstack_infra'"}
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                 :locals  => {:ng_show                => true,
                                              :ng_model               => "#{ng_model}",
                                              :id                     => record.id,
                                              :hostname_hide          => true,
                                              :apiport_hide           => true,
                                              :security_protocol_hide => true,
                                              :prefix                 => "ssh_keypair"}
            = render :partial => "layouts/angular-bootstrap/auth_keypair_angular_bootstrap",
                                 :locals  => {:ng_show                => true,
                                              :ng_model               => "#{ng_model}",
                                              :ng_reqd_private_key    => "#{ng_model}.ssh_keypair_userid != ''",
                                              :validate_url           => validate_url,
                                              :id                     => record.id,
                                              :prefix                 => "ssh_keypair",
                                              :basic_info_needed      => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Used for SSH connection to all %{hosts} in this provider.") % {:hosts => title_for_hosts}
    - elsif controller_name == "ems_container"
      = miq_tab_content('hawkular', 'default') do
        .form-group
          .col-md-12.col-md-12
            = render :partial => "layouts/angular-bootstrap/endpoints_angular",
                                 :locals  => {:ng_show                => true,
                                              :ng_model               => "#{ng_model}",
                                              :id                     => record.id,
                                              :security_protocol_hide => true,
                                              :ng_reqd_hostname       => "false",
                                              :ng_reqd_api_port       => "false",
                                              :prefix                 => "hawkular"}
          %label.col-md-2
          .col-md-4
            = render :partial => "layouts/angular/form_buttons_verify_angular",
                     :locals  => {:ng_show           => true,
                                  :validate_url      => validate_url,
                                  :id                => record.id,
                                  :ng_model          => "#{ng_model}",
                                  :valtype           => "hawkular",
                                  :verify_title_off  => _("hawkular URL and API port fields are needed to perform validation."),
                                  :basic_info_needed => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Used to gather Capacity & Utilization metrics.")
    - elsif controller_name == "host"
      = miq_tab_content('remote', 'default') do
        .form-group
          .col-md-12
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "#{ng_model}",
                                              :validate_url      => validate_url,
                                              :id                => record.id,
                                              :prefix            => "remote",
                                              :basic_info_needed => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Required if SSH login is disabled for the Default account.")
      = miq_tab_content('ws', 'default') do
        .form-group
          .col-md-12
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "#{ng_model}",
                                              :validate_url      => validate_url,
                                              :id                => record.id,
                                              :prefix            => "ws",
                                              :basic_info_needed => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Used for access to Web Services.")
      = miq_tab_content('ipmi', 'default') do
        .form-group
          .col-md-12
            = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                                 :locals  => {:ng_show           => true,
                                              :ng_model          => "#{ng_model}",
                                              :validate_url      => validate_url,
                                              :id                => record.id,
                                              :prefix            => "ipmi",
                                              :verify_title_off => _("IPMI IP Address, Username and matching password fields are needed to perform verification of credentials"),
                                              :basic_info_needed => true}
        .form-group
          .col-md-12
            %span{:style => "color:black"}
              = _("Used for access to IPMI.")

%div{"ng-if" => "#{ng_model}.emstype == ''"}
  :javascript
    $('#auth_tabs').hide();
%div{"ng-if" => "#{ng_model}.emstype == 'ec2' || "      + |
                "#{ng_model}.emstype == 'gce' || "      + |
                "#{ng_model}.emstype == 'scvmm' || "    + |
                "#{ng_model}.emstype == 'vmwarews' || " + |
                "#{ng_model}.emstype == 'hawkular'"}      |
  :javascript
    miq_tabs_show_hide("#amqp_tab", false);
    miq_tabs_show_hide("#metrics_tab", false);
    miq_tabs_show_hide("#ssh_keypair_tab", false);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype == 'rhevm'"}
  :javascript
    miq_tabs_show_hide("#amqp_tab", false);
    miq_tabs_show_hide("#metrics_tab", true);
    miq_tabs_show_hide("#ssh_keypair_tab", false);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype == 'openstack' || #{ng_model}.emstype == 'vmware_cloud'"}
  :javascript
    miq_tabs_show_hide("#amqp_tab", true);
    miq_tabs_show_hide("#metrics_tab", false);
    miq_tabs_show_hide("#ssh_keypair_tab", false);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype == 'openstack_infra'"}
  :javascript
    miq_tabs_show_hide("#amqp_tab", true);
    miq_tabs_show_hide("#metrics_tab", false);
    miq_tabs_show_hide("#ssh_keypair_tab", true);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.emstype == 'nuage_network'"}
  :javascript
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();
%div{"ng-if" => "#{ng_model}.ems_controller == 'ems_container'"}
  :javascript
    miq_tabs_show_hide("#hawkular_tab", true);
    miq_tabs_init('#auth_tabs');
    $('#auth_tabs').show();

- unless session[:host_items].nil?
  .col-md-12
    %div
      .form-group
        %label.col-md-2.control-label
          = _("Select Host to validate against")
        .col-md-10
          = select_tag('validate_id',
                       options_for_select([["<#{_('Choose')}>", '']] + @selected_hosts.invert.sort, disabled: ["<#{_('Choose')}>", nil]),
                       "ng-model"                    => "#{ng_model}.validate_id",
                       "checkchange"                 => "",
                       "selectpicker-for-select-tag" => "")

:javascript
  miq_tabs_init('#auth_tabs');
