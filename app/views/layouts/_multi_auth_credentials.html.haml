- validate_url ||= (record.id || @edit[:hostitems]) ? "update" : "create"
- change_url ||= "form_field_changed"
- legendtext ||= _("Credentials")

%h3
  = legendtext
#auth_tabs
  %ul.nav.nav-tabs
    = miq_tab_header('default') do
      = _("Default")
    - if %w(ems_cloud ems_infra).include?(params[:controller])
      - if @edit[:new][:emstype] == "rhevm"
        = miq_tab_header('metrics') do
          = _("C & U Database")
      - if %w(openstack openstack_infra).include?(@edit[:new][:emstype])
        = miq_tab_header('amqp') do
          = _("AMQP")
      - if %w(openstack_infra).include?(@edit[:new][:emstype])
        = miq_tab_header('ssh_keypair') do
          = _("RSA key pair")
    - else
      = miq_tab_header('remote') do
        = _("Remote Login")
      = miq_tab_header('web') do
        = _("Web Services")
      = miq_tab_header('ipmi') do
        = _("IPMI")

  .tab-content
    = miq_tab_content('default') do
      %table.style1
        %tbody
          = render(:partial => "/layouts/auth_credentials",
                   :locals  => {:pfx => "default",
                                :change_url   => change_url,
                                :validate_url => validate_url,
                                :ujs_button   => true,
                                :uid_label    => @edit[:new][:emstype] == "ec2" ? _("Access Key ID") : nil,
                                :pwd_label    => @edit[:new][:emstype] == "ec2" ? _("Secret Access Key") : nil,
                                :record       => record})
      %span{:style => "color:black"}= _("Required. Should have privileged access, such as root or administrator.")
    - if %w(ems_cloud ems_infra).include?(params[:controller])
      = miq_tab_content('metrics') do
        %table.style1
          %tbody
            = render(:partial => "/layouts/auth_credentials",
                     :locals   => {:pfx          => "metrics",
                                   :change_url   => change_url,
                                   :validate_url => validate_url,
                                   :ujs_button   => true,
                                   :uid_label    => @edit[:new][:emstype] == "ec2" ? _("Access Key ID") : nil,
                                   :pwd_label    => @edit[:new][:emstype] == "ec2" ? _("Secret Access Key") : nil,
                                   :record       => record})
        %span{:style => "color:black"}= _("Used to gather Capacity & Utilization metrics.")
      = miq_tab_content('amqp') do
        %table.style1
          %tbody
            = render(:partial => "/layouts/auth_credentials",
                     :locals  => {:pfx          => "amqp",
                                  :change_url   => change_url,
                                  :validate_url => validate_url,
                                  :ujs_button   => true,
                                  :record       => record})
        %span{:style => "color:black"}= _("Used to authenticate with OpenStack AMQP Messaging Bus for event handling.")
      = miq_tab_content('ssh_keypair') do
        %table.style1
          %tbody
            = render(:partial => "/layouts/auth_credentials_keypair",
                     :locals  => {:pfx          => "ssh_keypair",
                                  :change_url   => change_url,
                                  :ujs_button   => true,
                                  :record       => record})
        %span{:style => "color:black"}= _("Used for SSH connection to all %s in this provider.") % title_for_hosts
    - else
      = miq_tab_content('remote') do
        %table.style1
          %tbody
            = render(:partial => "/layouts/auth_credentials",
                     :locals  => {:pfx          => "remote",
                                  :change_url   => change_url,
                                  :validate_url => validate_url,
                                  :ujs_button   => true,
                                  :record       => record})
        %span{:style => "color:black"}= _("Required if SSH login is disabled for the Default account.")
      = miq_tab_content('web') do
        %table.style1
          %tbody
            = render(:partial => "/layouts/auth_credentials",
                     :locals  => {:pfx          => "ws",
                                  :change_url   => change_url,
                                  :validate_url => validate_url,
                                  :ujs_button   => true,
                                  :record       => record})
        %span{:style => "color:black"}= _("Used for access to Web Services.")
      = miq_tab_content('ipmi') do
        %table.style1
          %tbody
            = render(:partial => "/layouts/auth_credentials",
                     :locals  => {:pfx          => "ipmi",
                                  :change_url   => change_url,
                                  :validate_url => validate_url,
                                  :ujs_button   => true,
                                  :record       => record})
        %span{:style => "color:black"}= _("Used for access to IPMI.")

- unless session[:host_items].nil?
  %table.admintable
    %tbody
      %tr
        %td.key= _("Select %s to validate against") % title_for_host
        %td
          = select_tag('validate_id',
                       options_for_select(@edit[:selected_hosts].invert.sort,
                                          @edit[:validate_against].to_i),
                       "data-miq_observe" => {:url => url_for(:action => 'form_field_changed',
                                                              :id     => "#{record.id || "new"}")}.to_json)
%hr

:javascript
  miq_tabs_init('#auth_tabs');
