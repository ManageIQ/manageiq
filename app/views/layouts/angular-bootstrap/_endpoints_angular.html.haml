- return unless %w(ems_cloud ems_infra ems_container).include?(controller_name)
- prefix ||= "default"
- ng_reqd_hostname ||= true
- ng_reqd_api_port ||= true

%div{"ng-if" => defined?(hostname_hide) ? false : true}
  .form-group{"ng-class" => "{'has-error': angularForm.#{prefix}_hostname.$invalid}"}
    %label.col-md-2.control-label{"for" => "#{prefix}_hostname"}
      = _('Hostname (or IPv4 or IPv6 address)')
    .col-md-8
      %input.form-control{"type"                    => "text",
                          "id"                      => "#{prefix}_hostname",
                          "name"                    => "#{prefix}_hostname",
                          "ng-model"                => "#{ng_model}.#{prefix}_hostname",
                          "maxlength"               => "#{MAX_NAME_LEN}",
                          "ng-required"             => "#{ng_reqd_hostname}",
                          "ng-trim"                 => false,
                          "detect-spaces"           => "",
                          "checkchange"             => "",
                          "prefix"                  => "#{prefix}",
                          "reset-validation-status" => "#{prefix}_auth_status"}
      %span.help-block{"ng-show" => "angularForm.#{prefix}_hostname.$error.required"}
        = _("Required")
      %span.help-block{"ng-show" => "angularForm.#{prefix}_hostname.$error.detectedSpaces"}
        = _("Spaces are prohibited")

%div{"ng-if" => defined?(apiport_hide) ? false : true}
  .form-group{"ng-class" => "{'has-error': angularForm.#{prefix}_api_port.$invalid}",
              "ng-if" => "emsCommonModel.emstype == 'openstack' || " +       |
                         "emsCommonModel.emstype == 'openstack_infra' || " + |
                         "emsCommonModel.emstype == 'rhevm' || " +           |
                         "emsCommonModel.ems_controller == 'ems_container'"} |
    %label.col-md-2.control-label{"for" => "#{prefix}_api_port"}
      = _('API Port')
    .col-md-8
      %input.form-control{"type"                        => "text",
                          "id"                          => "#{prefix}_api_port",
                          "name"                        => "#{prefix}_api_port",
                          "ng-model"                    => "#{ng_model}.#{prefix}_api_port",
                          "maxlength"                   => 15,
                          "ng-required"                 => "#{ng_reqd_api_port}",
                          "checkchange"                 => "",
                          "ng-trim"                     => false,
                          "detect-spaces"               => "",
                          "prefix"                      => "#{prefix}",
                          "reset-validation-depends-on" => %w(hawkular metrics).include?(prefix) ? "#{prefix}_hostname" : "",
                          "reset-validation-status"     => "#{prefix}_auth_status"}
      %span.help-block{"ng-show" => "angularForm.#{prefix}_api_port.$error.required"}
        = _("Required")
      %span.help-block{"ng-show" => "angularForm.#{prefix}_api_port.$error.detectedSpaces"}
        = _("Spaces are prohibited")

%div{"ng-if" => defined?(security_protocol_hide) ? false : true}
  .form-group{"ng-class" => "{'has-error': angularForm.#{prefix}_security_protocol.$invalid}",
              "ng-if"    => "emsCommonModel.emstype == 'openstack' || emsCommonModel.emstype == 'openstack_infra' || emsCommonModel.emstype == 'scvmm'"}
    %label.col-md-2.control-label{"for" => "#{prefix}_security_protocol"}
      = _('Security Protocol')
    .col-md-8{"ng-if" => "emsCommonModel.emstype == 'openstack' || emsCommonModel.emstype == 'openstack_infra'"}
      - prefix == "amqp" ? security_protocols = @openstack_amqp_security_protocols : security_protocols = @openstack_security_protocols
      = select_tag("#{prefix}_security_protocol",
                       options_for_select([["<#{_('Choose')}>", nil]] + security_protocols, disabled: ["<#{_('Choose')}>", nil]),
                       "ng-model"                    => "#{ng_model}.#{prefix}_security_protocol",
                       "checkchange"                 => "",
                       "ng-required"                 => true,
                       "ng-change"                   => "openstackSecurityProtocolChanged()",
                       "selectpicker-for-select-tag" => "",
                       "prefix"                      => "#{prefix}",
                       "reset-validation-status"     => "#{prefix}_auth_status")
    .col-md-8{"ng-if" => "emsCommonModel.emstype == 'scvmm'"}
      = select_tag("#{prefix}_security_protocol",
                       options_for_select([["<#{_('Choose')}>", nil]] + @scvmm_security_protocols, disabled: ["<#{_('Choose')}>", nil]),
                       "ng-model"                    => "#{ng_model}.#{prefix}_security_protocol",
                       "checkchange"                 => "",
                       "required"                    => "",
                       "ng-change"                   => "scvmmSecurityProtocolChanged()",
                       "selectpicker-for-select-tag" => "",
                       "prefix"                      => "#{prefix}",
                       "reset-validation-status"     => "#{prefix}_auth_status")
.form-group{"ng-class" => "{'has-error': angularForm.realm.$invalid}",
            "ng-if" => "emsCommonModel.emstype == 'scvmm' && emsCommonModel.default_security_protocol == 'kerberos'"}
  %label.col-md-2.control-label{"for" => "realm"}
    = _('Realm')
  .col-md-8
    %input.form-control{"type"          => "text",
                        "id"            => "realm",
                        "name"          => "realm",
                        "ng-model"      => "emsCommonModel.realm",
                        "maxlength"     => "#{MAX_NAME_LEN}",
                        "required"      => "",
                        "checkchange"   => "",
                        "auto-focus"    => "",
                        "ng-trim"       => false,
                        "detect-spaces" => ""}
    %span.help-block{"ng-show" => "angularForm.realm.$error.required"}
      = _("Required")
    %span.help-block{"ng-show" => "angularForm.realm.$error.detectedSpaces"}
      = _("Spaces are prohibited")
