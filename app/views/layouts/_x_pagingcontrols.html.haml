.col-md-12
  - if @pages && @items_per_page != ONE_MILLION && @pages[:items] > 0
    - button_div ||= "center_tb"
    - action_url ||= "explorer"
    - pages = @pages
    - if action_url.include?("/")
      - action_method = action_url.split("/").first
      - action_id = action_url.split("/").last
    - url = action_id ? url_for(:action => action_method, :id => action_id) : url_for(:action => action_url)
    - @pc_occ ||= 0
    - @pc_occ += 1

    .clearfix{:id => "pc_div_#{@pc_occ}"}
      - if @pc_occ == 1
        .pull-left.text-nowrap
          - if ! @no_checkall && ! @no_checkboxes
            = render :partial => 'shared/master_toggle',
                     :locals  => {:button_div => button_div,
                                  :label      => _("Check All")}
      .pull-right
        .form-group.text-nowrap
          - if @gtl_type != "list" && @view
            - sort_text = "#{@view.headers[@sortcol]} (#{@sortdir == "ASC" ? _("Asc") : _("Desc")})"
            = select_tag("sort_choice",
                        options_for_select([sort_text] + @view.headers),
                        :class => "selectpicker dropup btn-group", "data-width" => "auto")
            :javascript
              miqSelectPickerEvent("sort_choice", "#{url}", {beforeSend: true, complete: true})
          -else
            = @view.headers[@sortcol]
            - font_icon = @sortdir == "ASC" ? "asc" :"desc"
            %span.fa{:class => "fa-sort-alpha-#{font_icon}"}
        .form-group
          = select_tag("ppsetting",
                      options_for_select(@pp_choices, pages[:perpage]),
                      "data-width" => "auto",
                      :class       => "selectpicker dropup")
          :javascript
            miqSelectPickerEvent("ppsetting", "#{url}", {beforeSend: true, complete: true})
        .form-group.pull-right{:style => "border-right: 0"}
          %ul.pagination
            %li.first
              / first button
              - if pages[:current] > 1
                %span{:type    => "button",
                      :onclick => remote_function(:loading  => "miqSparkle(true);",
                                                  :complete => "miqSparkle(false);",
                                                  :url      => "#{action_url}?page=1&id=#{action_id}"),
                      :class   => "fa fa-angle-double-left",
                      :alt     => _("First"),
                      :title   => _("First")}
                %li.prev
                  %span{:type    => "button",
                        :onclick => remote_function(:loading  => "miqSparkle(true);",
                                                    :complete => "miqSparkle(false);",
                                                    :url      => "#{action_url}?page=#{pages[:current] - 1}&id=#{action_id}"),
                        :class   => "fa fa-angle-left",
                        :alt     => _("Previous"),
                        :title   => _("Previous")}
              - else
                %li.first.disabled
                  %span{:class => "i fa fa-angle-double-left"}
                %li.prev.disabled
                  %span{:class => "i fa fa-angle-left"}

              %li
                %span
                  - start_number = (pages[:perpage] * pages[:current]) - pages[:perpage] + 1
                  - end_number = pages[:perpage] * pages[:current]
                  - if start_number == pages[:items]
                    = _("%{start_number} of %{total_items}") % {:start_number => start_number, :total_items => pages[:items]}
                  - else
                    - if end_number > pages[:items]
                      = _("%{start_number}-%{end_number} of %{total_items}") % {:start_number => start_number, :end_number => pages[:items], :total_items => pages[:items]}
                    - else
                      = _("%{start_number}-%{end_number} of %{total_items}") % {:start_number => start_number, :end_number => end_number, :total_items => pages[:items]}
                  %input{:name => "limitstart", :type => "hidden", :value => "0"}/

              - if pages[:current] < pages[:total]
                %li.next
                  %span{:type    => "button",
                        :onclick => remote_function(:loading  => "miqSparkle(true);",
                                                    :complete => "miqSparkle(false);",
                                                    :url      => "#{action_url}?page=#{pages[:current] +1}&id=#{action_id}"),
                        :class   => "i fa fa-angle-right",
                        :alt     => _("Next"),
                        :title   => _("Next")}
                %li.last
                  %span{:type    => "button",
                        :onclick => remote_function(:loading  => "miqSparkle(true);",
                                                    :complete => "miqSparkle(false);",
                                                    :url      => "#{action_url}?page=#{pages[:total]}&id=#{action_id}"),
                        :class   => "i fa fa-angle-double-right",
                        :alt     => _("Last"),
                        :title   => _("Last")}
              - else
                %li.next.disabled
                  %span{:class => "i fa fa-angle-right"}
                %li.last.disabled
                  %span{:class => "i fa fa-angle-double-right"}

  = render(:partial => '/layouts/x_form_buttons')
  :javascript
    miqInitSelectPicker();
