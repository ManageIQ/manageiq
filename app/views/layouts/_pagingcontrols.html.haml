.col-md-12
  - if !@embedded && @pages && @items_per_page != ONE_MILLION
    - button_div ||= "center_tb"
    - db ||= nil
    - action_id    = action_url.split("/").last if action_url.include?("/")

    - @pc_occ ||= 0
    - @pc_occ += 1

    .clearfix{:id => "pc_div_#{@pc_occ}"}
      - if @pc_occ == 1
        .pull-left.text-nowrap
          - if !@no_checkall && !@no_checkboxes
            = render :partial => 'shared/master_toggle',
                     :locals  => {:button_div => button_div,
                                  :label      => _("(Check All)")}
      .pull-right
        .form-group.text-nowrap
          - if @gtl_type != "list" && @view
            - sort_text = "#{@view.headers[@sortcol]} (#{@sortdir == "ASC" ? _("Asc") : _("Desc")})"
            = select_tag("sort_choice",
                        options_for_select([sort_text] + @view.headers),
                       :class => "selectpicker dropup",
                       "data-width" => "auto",
                       )
            :javascript
              miqSelectPickerEvent("sort_choice", "#{update_paging_url_parms(action_url, {}, true)}", {beforeSend: true, complete: true})
          -else
            - if @pc_occ == 1
              - unless @embedded
                - if @sortdir == "ASC"
                  %span.fa{:class => "fa-sort-alpha-asc"}
                - else
                  %span.fa{:class => "fa-sort-alpha-desc"}
              = _(@view.headers[@sortcol])

          - unless db.blank?
            - if %w(EmsInfra EmsCloud EmsCluster ResourcePool OntapStorageSystem OntapLogicalDisk CimBaseStorageExtent OntapStorageVolume StorageManager OntapFileShare SniaLocalFileSystem).include?(db)
              - @db = db.underscore

        .form-group
          = select_tag("ppsetting",
                      options_for_select(@pp_choices, pages[:perpage]),
                      "data-width" => "auto",
                      :class       => "selectpicker dropup")
          :javascript
            miqSelectPickerEvent("ppsetting", "#{update_paging_url_parms(action_url, {}, true)}", {beforeSend: true, complete: true})

        .form-group.pull-right{:style => "border-right: 0"}
          %ul.pagination
            - if pages[:current] > 1
              - if @ajax_paging_buttons
                %li.first
                  %span{:onclick => remote_function(:loading  => "miqSparkle(true);",
                                                    :complete => "miqSparkle(false);",
                                                    :url      => update_paging_url_parms(action_url, :page => 1)),
                        :class   => "fa fa-angle-double-left",
                        :alt     => _("First"),
                        :title   => _("First")}
                %li.prev
                  %span{:onclick => remote_function(:loading  => "miqSparkle(true);",
                                                    :complete => "miqSparkle(false);",
                                                    :url      => update_paging_url_parms(action_url, :page => pages[:current] - 1)),
                        :class   => "fa fa-angle-left",
                        :alt     => _("Previous"),
                        :title   => _("Previous")}
              - elsif action_id
                %li.first
                  %span{:onclick => "DoNav('#{update_paging_url_parms(action_url, :page => 1, :id => action_id)}')",
                        :class   => "fa fa-angle-double-left",
                        :alt     => _("First"),
                        :title   => _("First")}
                %li.prev
                  %span{:onclick => "DoNav('#{update_paging_url_parms(action_url, :page => pages[:current] - 1, :id => action_id)}')",
                        :class   => "fa fa-angle-left",
                        :alt     => _("Previous"),
                        :title   => _("Previous")}
              - else
                %li.first
                  %span{:onclick => "DoNav('#{update_paging_url_parms(action_url, :page => 1)}')",
                        :class   => "fa fa-angle-double-left",
                        :alt     => _("First"),
                        :title   => _("First")}
                %li.prev
                  %span{:onclick => "DoNav('#{update_paging_url_parms(action_url, :page => pages[:current] - 1)}')",
                        :class   => "fa fa-angle-left",
                        :alt     => _("Previous"),
                        :title   => _("Previous")}
            - else
              %li.first.disabled
                %span{:class => "fa fa-angle-double-left"}
              %li.prev.disabled
                %span{:class => "fa fa-angle-left"}

            %li
              %span
                - start_number = pages[:items] > 0 ? (pages[:perpage] * pages[:current]) - pages[:perpage] + 1 : 0
                - end_number = pages[:perpage] * pages[:current]
                - if start_number == pages[:items]
                  = _("%{start_number} of %{total_items}") % {:start_number => start_number, :total_items => pages[:items]}
                - else
                  - if end_number > pages[:items]
                    = _("%{start_number}-%{total_items} of %{total_items}") % {:start_number => start_number, :total_items => pages[:items]}
                  - else
                    = "%{start_number}-%{end_number} of %{total_items}" % {:start_number => start_number,
                                                                                   :end_number   => end_number,
                                                                                   :total_items  => pages[:items]}
                %input{:type => 'hidden', :name => 'limitstart', :value => '0'}

            - if pages[:current] < pages[:total]
              - if @ajax_paging_buttons
                %li.next
                  %span{:onclick => remote_function(:loading  => "miqSparkle(true);",
                                                    :complete => "miqSparkle(false);",
                                                    :url      => update_paging_url_parms(action_url, :page => pages[:current] + 1)),
                        :class   => "fa fa-angle-right",
                        :alt     => _("Next"),
                        :title   => _("Next")}
                %li.last
                  %span{:onclick => remote_function(:loading  => "miqSparkle(true);",
                                                    :complete => "miqSparkle(false);",
                                                    :url      => update_paging_url_parms(action_url, :page => pages[:total])),
                        :class   => "fa fa-angle-double-right",
                        :alt     => _("Last"),
                        :title   => _("Last")}
              - elsif action_id
                %li.next
                  %span{:onclick => "DoNav('#{update_paging_url_parms(action_url, :page => pages[:current] + 1, :id => action_id)}')",
                        :class   => "fa fa-angle-right",
                        :alt     => _("Next"),
                        :title   => _("Next")}
                %li.last
                  %span{:onclick => "DoNav('#{update_paging_url_parms(action_url, :page => pages[:total], :id => action_id)}')",
                        :class   => "fa fa-angle-double-right",
                        :alt     => _("Last"),
                        :title   => _("Last")}
              - else
                %li.next
                  %span{:onclick => "DoNav('#{update_paging_url_parms(action_url, :page => pages[:current] + 1)}')",
                        :class   => "fa fa-angle-right",
                        :alt     => _("Next"),
                        :title   => _("Next")}
                %li.last
                  %span{:onclick => "DoNav('#{update_paging_url_parms(action_url, :page => pages[:total])}')",
                        :class   => "fa fa-angle-double-right",
                        :alt     => _("Last"),
                        :title   => _("Last")}
            - else
              %li.next.disabled
                %span{:class => "fa fa-angle-right"}
              %li.last.disabled
                %span{:class => "fa fa-angle-double-right"}

    :javascript
      miqInitSelectPicker();
