- if @record.try(:name)
  - hosts_title = title_for_hosts
  #accordion.panel-group
    = miq_accordion_panel(truncate(@record.name, :length => truncate_length), true, "icon") do
      = render :partial => "layouts/quadicon", :locals => {:mode => :icon, :item => @record, :size => 72, :typ => :listnav}

    = miq_accordion_panel(_("Properties"), false, "storage_prop") do
      %ul.nav.nav-pills.nav-stacked
        %li
          = link_to(_('Summary'),
            {:action => 'show', :id => @record, :display => 'main'},
            :title => _("Show Summary"))
        = li_link(:if => @record.has_perf_data?,
          :text       => _('Capacity & Utilization'),
          :record_id  => @record.id,
          :display    => 'performance',
          :title      => _("Show Capacity & Utilization"))

    = miq_accordion_panel(_("Relationships"), false, "storage_rel") do
      %ul.nav.nav-pills.nav-stacked
        - if role_allows(:feature => "host_show_list")
          = li_link(:count => @record.number_of(:hosts),
            :text          => hosts_title,
            :record_id     => @record.id,
            :display       => 'hosts',
            :title         => _("Show all registered %{hosts}") % {:hosts => hosts_title})

        - if role_allows(:feature => "vm_show_list")
          = li_link(:count => @record.number_of(:all_vms),
            :text          => _("VMs"),
            :record_id     => @record.id,
            :display       => 'all_vms',
            :title         => _("Show registered VMs"))

    - if get_vmdb_config[:product][:storage]
      = miq_accordion_panel(_("Relationships"), false, "storage_inf_rel") do
        %ul.nav.nav-pills.nav-stacked
          - if role_allows(:feature => "ontap_storage_system_show_list")
            = li_link(:count => @record.storage_systems_size,
              :record_id     => @record.id,
              :tables        => 'ontap_storage_system',
              :display       => 'storage_systems',
              :title         => _("Show all %s") % ui_lookup(:tables => "ontap_storage_system"))

          - unless @record.file_share.nil?
            - if role_allows(:feature => "ontap_file_share_show")
              - fs = @record.file_share
              %li
                = link_to("#{ui_lookup(:table => "ontap_file_share")}: #{fs.name}",
                  {:controller => "ontap_file_share", :action => 'show', :id => fs.id.to_s},
                  :title => _("Show %s") % ui_lookup(:table => "ontap_file_share"))
            - else
              - if role_allows(:feature => "ontap_storage_volume_show_list")
                = li_link(:count => @record.storage_volumes_size,
                  :record_id     => @record.id,
                  :tables        => 'ontap_storage_volume',
                  :display       => 'ontap_storage_volumes',
                  :title         => _("Show all %s") % ui_lookup(:tables => "ontap_storage_volume"))

          - if role_allows(:feature => "cim_base_storage_volume_show_list")
            = li_link(:count => @record.base_storage_extents_size,
              :record_id     => @record.id,
              :tables        => 'cim_base_storage_extent',
              :display       => 'storage_extents',
              :action        => 'show',
              :title         => _("Show all %s") % ui_lookup(:tables => "cim_base_storage_extent"))

      = miq_accordion_panel(_("Content"), false, "storage_content") do
        %ul.nav.nav-pills.nav-stacked
          = li_link(:count => @record.number_of(:files),
            :record_id     => @record.id,
            :table         => 'storages',
            :action        => 'files',
            :title         => _("Show all files on this %s") % ui_lookup(:table => "storages"),
            :link_text     => _('All Files'))

          = li_link(:count => @record.number_of(:disk_files),
            :record_id     => @record.id,
            :table         => 'storages',
            :action        => 'disk_files',
            :title         => _("Show VM Provisioned Disk Files on this %s") % ui_lookup(:table => "storages"),
            :link_text     => _('VM Provisioned Disk Files'))

          = li_link(:count => @record.number_of(:snapshot_files),
            :record_id     => @record.id,
            :table         => 'storages',
            :action        => 'snapshot_files',
            :title         => _("Show VM snapshot files on this %s") % ui_lookup(:table => "storages"),
            :link_text     => _('VM Snapshot Files'))

          = li_link(:count => @record.number_of(:vm_ram_files),
            :record_id     => @record.id,
            :table         => 'storages',
            :action        => 'vm_ram_files',
            :title         => _("Show VM memory files on this %s") % ui_lookup(:table => "storages"),
            :link_text     => _('VM Memory Files'))

          = li_link(:count => @record.number_of(:vm_misc_files),
            :record_id     => @record.id,
            :table         => 'storages',
            :action        => 'vm_misc_files',
            :title         => _("Show Other VM files on this %s") % ui_lookup(:table => "storages"),
            :link_text     => _('Other VM Files'))

          = li_link(:count => @record.number_of(:debris_files),
            :record_id     => @record.id,
            :table         => 'storages',
            :action        => 'debris_files',
            :title         => _("Show non-VM files on this %s") % ui_lookup(:table => "storages"),
            :link_text     => _('Non-VM Files'))
