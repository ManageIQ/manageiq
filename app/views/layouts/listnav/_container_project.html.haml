- if @record.try(:name)
  #accordion.panel-group
    = miq_accordion_panel(truncate(@record.name, :length => truncate_length), true, "icon") do
      = render(:partial => "layouts/quadicon",
        :locals         => {:mode => :icon,
          :item                   => @record,
          :size                   => 72,
          :typ                    => :listnav})

    = miq_accordion_panel(_("Properties"), false, "container_project_prop") do
      %ul.nav.nav-pills.nav-stacked
        %li
          = link_to(_('Summary'), {:action => 'show', :id => @record, :display => 'main'}, :title => _("Show Summary"))

        - if @record.has_events? || @record.has_events?(:policy_events)
          %li
            = link_to('Timelines',
              {:action => 'show', :display => 'timeline', :id => @record},
              :title => _("Show Timelines"))
        - else
          %li.disabled
            = link_to(_('Timelines'), "#")

    = miq_accordion_panel(_("Relationships"), false, "container_project_rel") do
      %ul.nav.nav-pills.nav-stacked

        - if role_allows(:feature => "ems_container_show") && !@record.ext_management_system.nil?
          - entity = ui_lookup(:table => "ems_container")
          %li
            = link_to("#{entity}: #{@record.ext_management_system.name}",
                {:controller => "ems_container", :action => 'show', :id => @record.ext_management_system.id.to_s},
                :title => _("Show this container service's parent #{entity}"))
        - if role_allows(:feature => "container_route_show_list")
          - plural = ui_lookup(:tables => "container_route")
          - num_routes = @record.number_of(:container_routes)
          - if num_routes == 0
            %li.disabled
              = link_to("#{plural} (0)", "#")
          - else
            %li
              = link_to("#{plural} (#{num_routes})",
                  {:action  => 'show', :id => @record, :display => 'container_routes'},
                  :title => _("Show #{plural}"))
        - if role_allows(:feature => "container_service_show_list")
          - plural = ui_lookup(:tables => "container_service")
          - num_services = @record.number_of(:container_services)
          - if num_services == 0
            %li.disabled
              = link_to("#{plural} (0)", "#")
          - else
            %li
              = link_to("#{plural} (#{num_services})",
                  {:action  => 'show', :id => @record, :display => 'container_services'},
                  :title => _("Show #{plural}"))
        - if role_allows(:feature => "container_replicator_show_list")
          - plural = ui_lookup(:tables => "container_replicator")
          - num_replicators = @record.number_of(:container_replicators)
          - if num_replicators == 0
            %li.disabled
              = link_to("#{plural} (0)", "#")
          - else
            %li
              = link_to("#{plural} (#{num_replicators})",
                  {:action  => 'show', :id => @record, :display => 'container_replicators'},
                  :title => _("Show #{plural}"))
        - if role_allows(:feature => "container_group_show_list")
          - plural = ui_lookup(:tables => "container_group")
          - num_groups = @record.number_of(:container_groups)
          - if num_groups == 0
            %li.disabled
              = link_to("#{plural} (0)", "#")
          - else
            %li
              = link_to("#{plural} (#{num_groups})",
                  {:action  => 'show', :id => @record, :display => 'container_groups'},
                  :title => _("Show #{plural}"))
        - if role_allows(:feature => "container_node_show")
          - plural = ui_lookup(:tables => "container_node")
          - num_nodes = @record.number_of(:container_nodes)
          - if num_nodes == 0
            %li.disabled
              = link_to("#{plural} (0)", "#")
          - else
            %li
              = link_to("#{plural} (#{num_nodes})",
                  {:action => 'show', :id => @record, :display => 'container_nodes'},
                  :title  => _("Show #{plural}"))
