- if @record.try(:name)
  - cluster_title = title_for_cluster_record(@record)
  #accordion.panel-group
    = miq_accordion_panel(truncate(@record.name, :length => truncate_length), true, "icon") do
      = render :partial => "layouts/quadicon", :locals => {:mode => :icon, :item => @record, :size => 72, :typ => :listnav}

    = miq_accordion_panel(_("Properties"), false, "ems_prop") do
      %ul.nav.nav-pills.nav-stacked
        %li
          = link_to(_('Summary'),
                    {:action  => 'show',
                     :id      => @record,
                     :display => 'main'},
                     :title   => _("Show Summary"))
          = li_link(:if    => !(@cluster_config.nil? || @cluster_config.empty?),
            :text          => _("Configuration"),
            :record_id     => @record.id,
            :display       => 'config_info',
            :title         => _("Show configuration"),
            :check_changes => true)
          = li_link(:if => @record.has_perf_data?,
            :text       => _('Capacity & Utilization'),
            :record_id  => @record.id,
            :display    => 'performance',
            :title      => _("Show Capacity & Utilization"))
          = li_link(:if => (@record.has_events? || @record.has_events?(:policy_events)),
            :text       => _('Timelines'),
            :record_id  => @record.id,
            :display    => 'timeline',
            :title      => _("Show Timelines"))

    = miq_accordion_panel(_("Relationships"), false, "ems_rel") do
      %ul.nav.nav-pills.nav-stacked
        - if role_allows(:feature => "host_show_list")
          = li_link(:text => title_for_hosts,
            :count        => @record.total_hosts,
            :record_id    => @record.id,
            :display      => 'hosts',
            :title        => _("Show %{host_title}") % {:host_title => title_for_hosts})
        - if role_allows(:feature => "vm_show_list")
          = li_link(:text => _("Direct VMs"),
            :count        => @record.total_direct_vms,
            :record_id    => @record.id,
            :display      => "vms",
            :title        => ("Show VMs in this %{cluster_title}, but not in Resource Pools below") % {:cluster_title => cluster_title})
        - if role_allows(:feature => "vm_show_list")
          = li_link(:text => _("All VMs"),
            :count        => @record.total_vms,
            :record_id    => @record.id,
            :display      => "all_vms",
            :title        => _("Show all VMs in this %{cluster_title}") % {:cluster_title => cluster_title})
        - if role_allows(:feature => "miq_template_show_list")
          = li_link(:text => _("All Templates"),
            :count        => @record.total_miq_templates,
            :record_id    => @record.id,
            :display      => "miq_templates",
            :title        => _("Show all Templates in this %{cluster_title}") % {:cluster_title => cluster_title})
        - if role_allows(:feature => "vm_show_list")
          = li_link(:text => _('All VMs (Tree View)'),
            :count        => @record.total_vms,
            :record_id    => @record.id,
            :display      => "descendant_vms",
            :title        => _("Show tree of all VMs by Resource Pool in this %{cluster_title}") % {:cluster_title => cluster_title})
        - if role_allows(:feature => "resource_pool_show_list")
          = li_link(:text => _('Resource Pools'),
            :count        => @record.number_of(:resource_pools),
            :record_id    => @record.id,
            :display      => 'resource_pools',
            :title        => _("Show Resource Pools"))
        - if role_allows(:feature => "resource_pool_show_list")
          = li_link(:text => _('Drift History'),
            :count        => @record.number_of(:drift_states),
            :record_id    => @record.id,
            :display      => nil,
            :title        => _("Show %{cluster_title} drift history") % {:cluster_title => cluster_title})

    - if get_vmdb_config[:product][:storage]
      = miq_accordion_panel(_("Storage Relationships"), false, "host_inf_rel") do
        %ul.nav.nav-pills.nav-stacked
          - if role_allows(:feature => "ontap_storage_system_show_list")
            = li_link(:count => @record.storage_systems.count,
              :record_id     => @record.id,
              :tables        => 'ontap_storage_system',
              :display       => 'storage_systems',
              :action        => 'show',
              :title         => _("Show all %{ontap_storage_system}") % {:ontap_storage_system => ui_lookup(:tables => "ontap_storage_system")})
          - if role_allows(:feature => "ontap_storage_volume_show_list")
            = li_link(:count => @record.storage_volumes.count,
              :record_id     => @record.id,
              :tables        => 'ontap_storage_volume',
              :display       => 'ontap_storage_volumes',
              :action        => 'show',
              :title         => ui_lookup(:tables => "ontap_storage_volume"))
          - if role_allows(:feature => "ontap_file_share_show_list")
            = li_link(:count => @record.file_shares.count,
              :record_id     => @record.id,
              :tables        => 'ontap_file_share',
              :display       => 'ontap_file_shares',
              :action        => 'show',
              :title         => _("Show all %{ontap_file_share}") % {:ontap_file_share => ui_lookup(:tables => "ontap_file_share")})
          - if role_allows(:feature => "cim_base_storage_extent_show_list")
            = li_link(:count => @record.base_storage_extents.count,
              :record_id     => @record.id,
              :tables        => 'cim_base_storage_extent',
              :display       => 'storage_extents',
              :action        => 'show',
              :title         => _("Show all %{base_storage_extent}") % {:base_storage_extent => ui_lookup(:tables => "cim_base_storage_extent")})
