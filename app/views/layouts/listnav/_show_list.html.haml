- if @def_searches.blank? && @my_searches.blank?
  %br
  = render :partial => 'layouts/info_msg', :locals => {:message => _("No filters defined.")}
- else
  #accordion.panel-group
    - unless @def_searches.blank?
      - if @panels["#{@view.db}_def_searches"].nil?
        - @panels["#{@view.db}_def_searches"] = true
      = miq_accordion_panel(_("Filters"), true, "#{@view.db}_def_searches") do
        %ul.nav.nav-pills.nav-stacked
          - @def_searches.each do |search|
            - li_class = ""
            - search_name = search.description
            - if (!@default_search.blank? && @default_search.name == search.name) || (@default_search.blank? && search.id.to_i == 0)
              -# highlight if default is selected, or first time in
              - if @edit && @edit[:expression] && ((@edit[:expression][:selected].nil? && @edit[:selected].nil?) || (!@edit[:expression][:selected].nil? && @edit[:expression][:selected][:id] == search.id.to_i && !@edit[:custom_search]))
                - li_class = "active"
            - elsif @edit && @edit[:expression] && ((@edit[:expression][:selected] && @edit[:expression][:selected][:id] == 0 && search.id.to_i == 0) || (@edit[:expression][:selected] && @edit[:expression][:selected][:name] == search.name && !@edit[:custom_search]))
              - li_class = "active"
            - if (!@default_search.blank? && @default_search.name == search.name) || (@default_search.blank? && search.id.to_i == 0 && @settings[:default_search] && @settings[:default_search][@edit[@expkey][:exp_model].to_s.to_sym] && @settings[:default_search][@edit[@expkey][:exp_model].to_s.to_sym].to_i == 0)
              - search_name << " (#{_('Default')})"
            %li{:class => li_class}
              = link_to(search_name.html_safe,
                {:action => 'listnav_search_selected', :id => search.id, :button => "apply"},
                :remote       => true,
                "data-method" => :post,
                :title        => _("Apply this filter"),
                :onclick      => "return miqCheckForChanges()")

    - unless @my_searches.blank?
      - if @panels["#{@view.db}_my_searches"].nil?
        - @panels["#{@view.db}_my_searches"] = true
      = miq_accordion_panel(_("My Filters"), false, "#{@view.db}_my_searches") do
        %ul.nav.nav-pills.nav-stacked
          - @my_searches.each do |search|
            - li_class = ""
            - if !@default_search.blank? && @default_search.name == search.name
              - if @edit && @edit[:expression] && ((@edit[:expression][:selected].nil? && @edit[:selected].nil?) || (!@edit[:expression][:selected].nil? && @edit[:expression][:selected][:id] == search.id.to_i && !@edit[:custom_search]))
                - li_class = "active"
            - elsif @edit && @edit[:expression] && ((@edit[:expression][:selected].nil? && search.id.to_i == 0) || (@edit[:expression][:selected] && @edit[:expression][:selected][:name] == search.name && !@edit[:custom_search]))
              - li_class = "active"
            %li{:class => "#{li_class}"}
              = link_to(search.description.html_safe,
                {:action => 'listnav_search_selected', :id => search.id, :button => "apply"},
                :remote       => true,
                "data-method" => :post,
                :title        => _("Apply this filter"),
                :onclick      => "return miqCheckForChanges()")


  - if @edit && @edit[:expression] && @edit[:expression][:selected] && (!@settings[:default_search] || (@settings[:default_search] && @edit[:expression][:selected][:id].to_i != @settings[:default_search][@edit[@expkey][:exp_model].to_s.to_sym].to_i) || (!@settings[:default_search][@edit[@expkey][:exp_model].to_s.to_sym]))
    - t = _('Set the current filter as my default')
    = link_to("Set Default",
      {:action => "save_default_search", :id => @edit[:expression][:selected][:id].to_i},
      "data-miq_sparkle_on"  => true,
      "data-miq_sparkle_off" => true,
      :class                 => "btn btn-default pull-right",
      :remote                => true,
      "data-method"          => :post,
      :alt                   => t,
      :title                 => t)
  - else
    = button_tag("Set Default",
      :class => "btn btn-default btn-disabled pull-right",
      :title => _("Select a filter to set it as my default"))
