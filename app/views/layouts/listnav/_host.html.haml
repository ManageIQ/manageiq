- if @record
  - host_title = title_for_host_record(@record)
  #accordion.panel-group
    = miq_accordion_panel(truncate(@record.name, :length => truncate_length), true, "icon") do
      -# Calculate the quadicon div height based on # of lines of text
      - if @record.product_name != "" && @record.service_pack != ""
        - height = 100
      - elsif @record.product_name != "" || @record.service_pack != ""
        - height = 90
      - else
        - height = 78
      = render :partial => "layouts/quadicon", :locals => {:mode => :icon, :item => @record, :size => 72, :typ => :listnav, :height => height}

      %div{:style => "margin-top: -23px; line-height: 13px;"}
        %center{:style => "color: #000;"}
          - unless @record.vmm_product.nil?
            = h(@record.vmm_product)
          - unless @record.vmm_version.nil?
            &nbsp;
            = h(@record.vmm_version)
          - unless @record.vmm_buildnumber.nil?
            %br
            = h(@record.vmm_buildnumber)

    = miq_accordion_panel(_("Properties"), false, "host_prop") do
      %ul.nav.nav-pills.nav-stacked
        %li
          = link_to(_('Summary'),
            {:action => 'show', :id => @record, :display => 'main'},
            :title => _("Show Summary"))
        = li_link(:if => !(@devices.nil? || @devices.empty?),
          :text       => _('Devices'),
          :record_id  => @record.id,
          :display    => 'devices',
          :title      => _("Show %s devices") % host_title)
        = li_link(:count => @record.number_of(:switches),
          :text          => _('Network'),
          :record_id     => @record.id,
          :display       => 'network',
          :title         => _("Show %s network") % host_title)
        = li_link(:if => !(@record.hardware.blank? || @record.hardware.number_of(:storage_adapters) == 0),
          :text       => _('Storage Adapters'),
          :record_id  => @record.id,
          :display    => 'storage_adapters',
          :title      => _("Show %s storage adapters") % host_title)
        = li_link(:if => !(@osinfo.nil? || @osinfo.empty?),
          :text       => _('OS Information'),
          :record_id  => @record.id,
          :display    => 'os_info',
          :title      => _("Show %s OS information") % host_title)
        = li_link(:if => !(@vmminfo.nil? || @vmminfo.empty?),
          :text       => _('VMM Information'),
          :record_id  => @record.id,
          :display    => 'hv_info',
          :title      => _("Show VMM information"))
        = li_link(:if => @record.has_perf_data?,
          :text       => _('Capacity & Utilization'),
          :record_id  => @record.id,
          :display    => 'performance',
          :title      => _("Show Capacity & Utilization"))
        = li_link(:if => @record.has_events? || @record.has_events?(:policy_events),
          :text       => _('Timelines'),
          :display    => 'timeline',
          :record_id  => @record.id,
          :title      => _("Show Timelines"))
        - if get_vmdb_config[:product][:proto]
          = li_link(:count => @record.event_logs.count,
            :text          => _("ESX Logs"),
            :id            => @record.id,
            :title         => _("Show esx logs on this VM"))

    = miq_accordion_panel(_("Relationships"), false, "host_rel") do
      %ul.nav.nav-pills.nav-stacked
        - if role_allows(:feature => "ems_infra_show") && !@record.ext_management_system.nil?
          %li
            = link_to("#{ui_lookup(:table => "ext_management_systems")}: #{@record.ext_management_system.name}",
              {:controller => "ems_infra", :action => 'show', :id => @record.ext_management_system.id.to_s},
              :title => _("Show this %s parent %s") % ["#{host_title}'s", ui_lookup(:table => "ems_infra")])

        - if role_allows(:feature => "ems_cluster_show") && !@record.ems_cluster.nil?
          - cluster_title = title_for_cluster
          %li
            = link_to("#{cluster_title}: #{@record.ems_cluster.name}",
              {:controller => "ems_cluster", :action => 'show', :id => @record.ems_cluster.id.to_s},
              :title => _("Show %s parent %s") % ["#{host_title}'s", cluster_title])

        - if role_allows(:feature => "storage_show_list")
          = li_link(:count => @record.number_of(:storages),
            :record_id     => @record.id,
            :tables        => 'storages',
            :display       => 'storages',
            :action        => 'show')

        - if role_allows(:feature => "resource_pool_show_list")
          = li_link(:count => @record.number_of(:resource_pools),
            :text          => _("Resource Pools"),
            :record_id     => @record.id,
            :display       => 'resource_pools',
            :title         => _("Show Resource Pools"))

        - if role_allows(:feature => "vm_show_list")
          = li_link(:count => @record.number_of(:vms),
            :text          => _("VMs"),
            :record_id     => @record.id,
            :display       => 'vms',
            :title         => _("Show all VMs"))

        - if role_allows(:feature => "miq_template_show_list")
          = li_link(:count => @record.number_of(:miq_templates),
            :text          => _("Templates"),
            :record_id     => @record.id,
            :display       => 'miq_templates',
            :title         => _("Show all Templates"))

        - if role_allows(:feature => "host_drift")
          = li_link(:count => @record.number_of(:drift_states),
            :text          => _("Drift History"),
            :action        => 'drift_history',
            :record_id     => @record.id,
            :title         => _("Show %{host} drift history") % {:host => host_title})

    - if get_vmdb_config[:product][:storage]
      = miq_accordion_panel(_("Storage Relationships"), false, "host_inf_rel") do
        %ul.nav.nav-pills.nav-stacked
          - if role_allows(:feature => "ontap_storage_system_show_list")
            = li_link(:count => @record.storage_systems_size,
              :record_id     => @record.id,
              :tables        => 'ontap_storage_system',
              :display       => 'ontap_storage_systems')

          - if role_allows(:feature => "ontap_storage_volume_show_list")
            = li_link(:count => @record.storage_volumes_size,
              :record_id     => @record.id,
              :tables        => 'ontap_storage_volume',
              :display       => 'ontap_storage_volumes')

          - if role_allows(:feature => "ontap_logical_disk_show_list")
            = li_link(:count => @record.logical_disks.count,
              :record_id     => @record.id,
              :tables        => 'ontap_logical_disk',
              :display       => 'ontap_logical_disks')

          - if role_allows(:feature => "ontap_file_share_show_list")
            = li_link(:count => @record.file_shares_size,
              :record_id     => @record.id,
              :tables        => 'ontap_file_share',
              :display       => 'ontap_file_shares')

    = miq_accordion_panel(_("Security"), false, "host_sec") do
      %ul.nav.nav-pills.nav-stacked
        = li_link(:count => @record.number_of(:users),
          :text          => _("Users"),
          :action        => "users",
          :record_id     => @record.id,
          :db            => "host",
          :title         => _("Show the users defined on this %{host}") % {:host => host_title})
        = li_link(:count => @record.number_of(:groups),
          :text          => _("Groups"),
          :action        => "groups",
          :record_id     => @record.id,
          :db            => "host",
          :title         => _("Show the groups defined on this %{host}") % {:host => host_title})

        = li_link(:count => @record.number_of(:patches),
          :text          => _("Patches"),
          :action        => "patches",
          :record_id     => @record.id,
          :db            => "host",
          :title         => _("Show the patches installed on this %{host}") % {:host => host_title})
        = li_link(:count => @record.number_of(:firewall_rules),
          :text          => _("Firewall Rules"),
          :action        => 'firewall_rules',
          :record_id     => @record.id,
          :title         => _("Show the firewall rules on this %{host}") % {:host => host_title})

    = miq_accordion_panel(_("Configuration"), false, "host_config") do
      %ul.nav.nav-pills.nav-stacked
        = li_link(:count => @record.number_of(:guest_applications),
          :text          => _("Packages"),
          :action        => 'guest_applications',
          :record_id     => @record.id,
          :title         => _("Show the packages installed on this %{host}") % {:host => host_title})
        = li_link(:count => @record.number_of(:host_services),
          :text          => _("Services"),
          :action        => 'host_services',
          :record_id     => @record.id,
          :title         => _("Show the services installed on this %{host}") % {:host => host_title})
        = li_link(:count => @record.number_of(:filesystems),
          :text          => _("Files"),
          :action        => 'filesystems',
          :record_id     => @record.id,
          :title         => _("Show the files on this %{host}") % {:host => host_title})
        = li_link(:count => @record.number_of(:advanced_settings),
          :text          => _("Advanced Settings"),
          :action        => 'advanced_settings',
          :record_id     => @record.id,
          :title         => _("Show the advanced settings on this %{host}") % {:host => host_title})
