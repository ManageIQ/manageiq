- url = url_for(:id => "#{@edit[:rec_id] || "new"}",
  :action => @edit[:new][:service_type] == "composite" ? "st_form_field_changed" : "atomic_form_field_changed")

#resources_info_div
  - if @edit[:new][:service_type] == "composite"
    %h3=_('Resources')
    %table.style1
      %tr
        %td.key=_('Add a Resource')
        %td.notwide
          = select_tag('resource_id',
            options_for_select(([["<#{_('Choose')}>",nil]]) + Array(@edit[:new][:available_resources].invert).sort_by{ |a,b| a.first.downcase }, nil),
            "data-miq_sparkle_on" => true,
            "data-miq_observe" => {:url => url}.to_json)
    - if !@edit[:new][:selected_resources].empty?
      %h3=_('Selected Resources')
      %table.table.table-bordered.table-striped
        %thead
          %tr
            %th.narrow
            - [_('Name'), _('Action Order'), _('Provision Order'), _('Action'), _('Delay (mins)')].each_with_index do |title, id|
              %th{:colspan => (id >= 3) ? 2 : 1}
                = title
          %tr
            %th{:colspan => '4'}
            - [_('Start'), _('Stop'), _('Start'), _('Stop')].each do |st|
              %th
                = st
        %tbody
          - @edit[:new][:rsc_groups].each_with_index do |groups,i|
            - # add blank tr after each group
            - if i != 0 && !groups.empty? && i < @edit[:new][:rsc_groups].length-1
              %tr#new_tr.separator
                %td{:colspan => '9'}

            - groups.sort_by { | g | g[:name].downcase }.each_with_index do |sr,k|
              %tr
                %td
                  = link_to(image_tag("/images/icons/16/notequal-red.png", :alt => _("Click to remove this Resource from the Catalog Item")),
                    {:action => "resource_delete", :rec_id => sr[:id], :id => "#{@edit[:rec_id] || "new"}", :grp_id => i},
                    "data-miq_sparkle_on" => true,
                    "data-miq_sparkle_off" => true,
                    :remote => true,
                    :title => _("Click to remove this Resource from the Catalog Item"))
                %td
                  = h(sr[:name])
                %td
                  - if @edit[:new][:selected_resources].length <= 1
                    = h(@edit[:new][:selected_resources].length)
                  - else
                    = select_tag("gidx_#{to_cid(sr[:id])}",
                      options_for_select(Array.new(@edit[:new][:rsc_groups].length) {|j| j+1}, (i+1).to_s),
                      "data-miq_sparkle_on" => true,
                      "data-miq_observe" => {:url => url}.to_json)
                %td
                  - if @edit[:new][:selected_resources].length <= 1
                    = h(@edit[:new][:selected_resources].length)
                  - else
                    = select_tag("provision_index_#{i}_#{k}",
                      options_for_select(Array.new(@edit[:new][:provision_order].length) {|j| j+1}, (sr[:provision_index]+1).to_s),
                      "data-miq_sparkle_on" => true,
                      "data-miq_observe" => {:url => url}.to_json)
                - start_action_values = [_('Do Nothing'), _('Power On')]
                - stop_action_values = [_('Do Nothing'), _('Suspend'), _('Shutdown'), _('Power Off')]
                - delay_values = [[_("None"),0],[1,1],[2,2],[3,3],[4,4],[5,5],[10,10],[20,20],[30,30],[40,40],[50,50],[60,60]]
                %td
                  = select_tag("start_action_#{i}_#{k}",
                    options_for_select(start_action_values, sr[:start_action]),
                    "data-miq_sparkle_on" => true,
                    "data-miq_observe" => {:url => url}.to_json)
                %td
                  = select_tag("stop_action_#{i}_#{k}",
                    options_for_select(stop_action_values, sr[:stop_action]),
                    "data-miq_sparkle_on" => true,
                    "data-miq_observe" => {:url => url}.to_json)
                %td
                  = select_tag("start_delay_#{i}_#{k}",
                    options_for_select(delay_values, (sr[:start_delay]/60).to_s),
                    "data-miq_sparkle_on" => true,
                    "data-miq_observe" => {:url => url}.to_json)
                %td
                  = select_tag("stop_delay_#{i}_#{k}",
                    options_for_select(delay_values, (sr[:stop_delay]/60).to_s),
                    "data-miq_sparkle_on" => true,
                    "data-miq_observe" => {:url => url}.to_json)
