- url = url_for(:id => "#{@edit[:rec_id] || "new"}",
  :action => @edit[:new][:service_type] == "composite" ? "st_form_field_changed" : "atomic_form_field_changed")

#basic_info_div
  = hidden_div_if(@edit && @edit[:ae_tree_select] != true, :id => "ae_tree_select_div") do
    = render(:partial => 'layouts/ae_tree_select')
  .form-horizontal
    .form-group
      %label.col-md-2.control-label
        = _('Name / Description')
      .col-md-8
        = text_field_tag("name",
                         @edit[:new][:name].to_s,
                         :maxlength => 40,
                         "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
        &nbsp;/&nbsp;
        = text_field_tag("description",
                         @edit[:new][:description],
                         :maxlength => 60,
                         "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
        &nbsp;
        = check_box_tag("display", "1", @edit[:new][:display],
                        "data-miq_observe_checkbox" => {:url => url}.to_json)
        &nbsp;
        = _('Display in Catalog')
    = javascript_tag(javascript_focus('name'))
    - if @edit[:new][:display]
      .form-group
        %label.col-md-2.control-label
          = _('Catalog')
        .col-md-4
          - available_catalogs = @edit[:new][:available_catalogs]
          - catalog_id = @edit[:new][:catalog_id]
          = select_tag('catalog_id',
                       options_for_select(([["<_#{('Unassigned')}>",nil]]) + available_catalogs, catalog_id),
                       "class" => "form-control",
                       "data-miq_sparkle_on" => true,
                       "data-miq_observe" => {:url => url}.to_json)
      .form-group
        %label.col-md-2.control-label= _('Dialog')
        .col-md-4
          %p.form-control-static
            - available_dialogs =  @edit[:new][:available_dialogs].invert.to_a.sort_by { |a| a.first.downcase }
            - options = [["<#{_('No Dialog')}>", nil]] + available_dialogs
            = select_tag('dialog_id',
                          options_for_select(options, @edit[:new][:dialog_id]),
                          "class" => "form-control",
                          "data-miq_sparkle_on" => true, "data-miq_observe" => {:url => url}.to_json)

      - if @edit[:new][:st_prov_type] == "generic_orchestration"
        - opts = [["<#{_('Choose')}>", nil]] + @edit[:new][:available_templates]
        .form-group
          %label.col-md-2.control-label= _('Orchestration Template')
          .col-md-8
            = select_tag('template_id',
                          options_for_select(opts, @edit[:new][:template_id]),
                          "class" => "form-control",
                          "data-miq_sparkle_on" => true,
                          "data-miq_observe" => {:url => url}.to_json)
        - if @edit[:new][:template_id]
        - opts = [["<#{_('Choose')}>", nil]] + @edit[:new][:available_managers]
          .form-group
            %label.col-md-2.control-label= _('Provider')
            .col-md-8
              = select_tag('manager_id',
                           options_for_select(opts, @edit[:new][:manager_id]),
                           "class" => "form-control",
                           "data-miq_sparkle_on" => true,
                           "data-miq_observe" => {:url => url}.to_json)
      .form-group
        %label.col-md-2.control-label{:title => _("Provisioning Entry Point (NameSpace/Class/Instance)")}
          = _('Provisioning Entry Point')
          %br
          = _('State Machine (NS/Cls/Inst)')
        .col-md-8
          %table
            %tr
              %td
                = text_field_tag("fqname", @edit[:new][:fqname],
                  :onFocus => 'miqShowAE_Tree("provision");miqButtons("hide", "automate");')
              %td
                #fqname_div{:style => @edit[:new][:fqname] != "" ? "" : "display:none"}
                  - alt_str = "Remove this Provisioning Entry Point"
                  = link_to(image_tag('/images/toolbars/discard.png', :class => "rollover small", :alt => _(alt_str)),
                            {:action => 'ae_tree_select_discard', :typ => "provision"},
                            "data-miq_sparkle_on" => true,
                            "data-miq_sparkle_off" => true,
                            "data-confirm" => _("Are you sure you want to remove this Provisioning Entry Point?"),
                            :remote => true,
                            :title => _("Remove this Provisioning Entry Point"))
      - unless @edit[:new][:st_prov_type] == "generic_orchestration"
        .form-group
          %label.col-md-2.control-label{:title => _("Retirement Entry Point (NameSpace/Class/Instance)")}
            = _('Retirement Entry Point')
            %br
            = _('State Machine (NS/Cls/Inst)')
          .col-md-8
            %table
              %tr
                %td
                  = text_field_tag("reconfigure_fqname",
                                   @edit[:new][:reconfigure_fqname],
                                   :onFocus => 'miqShowAE_Tree("reconfigure");miqButtons("hide", "automate");',
                                   "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
                %td
                  #reconfigure_fqname_div{:style => @edit[:new][:reconfigure_fqname] != "" ? "" : "display:none"}
                    = link_to(image_tag('/images/toolbars/discard.png',
                                        :class => "rollover small",
                                        :alt => "Remove this Reconfigure Entry Point"),
                              {:action => 'ae_tree_select_discard', :typ => "reconfigure"},
                              "data-miq_sparkle_on" => true,
                              "data-miq_sparkle_off" => true,
                              "data-confirm" => _("Are you sure you want to remove this Reconfigure Entry Point?"),
                              :remote => true,
                              :title => _("Remove this Reconfigure Entry Point"))
