- auth_mode   = get_vmdb_config[:authentication][:mode]
%span#badge
  %img{:src => "#{current_tenant.logo? ? '/upload/custom_logo.png' : image_path("login-screen-logo.png")}"}
.container
  .row
    .col-md-12
      #brand
        %img{:src => image_path("brand.svg"), :alt => "ManageIQ"}
    .col-md-6.col-lg-5.login
      .form-horizontal#login_div
        = render(:partial => "layouts/spinner",
                 :locals  => {:login => true})
        #invalid_sso_credentials_flash{:style => "display: none;"}
          #flash_text_div{:title => _("Click to remove message")}
            .alert.alert-danger
              %span.pficon-layered
                %span.pficon.pficon-error-octagon
                %span.pficon.pficon-warning-exclamation
              %strong= _("Invalid Single Sign-On credentials")
        = render :partial => "layouts/flash_msg"
        .form-group
          %label.col-md-3.control-label= _('Username')
          .col-md-9
            = text_field_tag('user_name', @user_name,
                             :class => "form-control",
                             :placeholder => _('Username'),
                             :onkeypress => "if (miqEnterPressed(event)) miqAjaxAuth();")
            = javascript_tag(javascript_focus('user_name'))
        .form-group
          %label.col-md-3.control-label= _('Password')
          .col-md-9
            = password_field_tag('user_password',
              @user_password,
              :onkeypress => "if (miqEnterPressed(event)) miqAjaxAuth();",
              :autocomplete => "off",
              :placeholder => (auth_mode == "httpd" ? _('Password or Password+One-Time-Password') : _('Password')),
              :class => "form-control")

        - if auth_mode == 'database'
          = render :partial => 'login_more'

        -# Fields collected via JS functions, sent up with credentials
        %input{:type => "hidden", :id => "browser_name", :name => "browser_name"}
        %input{:type => "hidden", :id => "browser_version", :name => "browser_version"}
        %input{:type => "hidden", :id => "browser_os", :name => "browser_os"}
        %input{:type => "hidden", :id => "user_TZO", :name => "user_TZO"}

        .form-group
          .col-xs-8.col-md-offset-3.col-md-6
            - if auth_mode == "database"
              #back_button{:style => "display: none"}
                = link_to(_("Back"), {:action => "authenticate",
                                      :button => "back"},
                          :remote       => true,
                          "data-method" => :post,
                          :title        => _("Back"))
              #more_button
                = link_to(_("Update password"), {:action => "authenticate",
                                                 :button => "more"},
                          :remote       => true,
                          "data-method" => :post,
                          :title        => _("Update Password"))

          .col-xs-4.col-md-3.submit
            = link_to(_("Login"),
                      {:action => "authenticate",
                       :button => "login"},
                      :id                   => "login",
                      :class                => "btn btn-primary",
                      :alt                  => "Login",
                      :title                => _("Login"),
                      :remote               => true,
                      "data-method"         => :post,
                      "data-miq_sparkle_on" => true,
                      "data-submit"         => 'login_div')

            = link_to(_("SSO Login"),
                      {:action => "kerberos_authenticate",
                       :button => "sso_login"},
                      :id                    => "sso_login",
                      :class                 => "btn btn-primary",
                      :alt                   => "SSO Login",
                      :title                 => _("SSO Login"),
                      :remote                => true,
                      "data-method"          => :post,
                      :style                 => "display: none;",
                      "data-miq_sparkle_on"  => true,
                      "data-miq_login_error" => true,
                      "data-submit"          => 'login_div')

    .col-md-6.col-lg-7.details
      - if get_vmdb_config[:session][:show_login_info]
        %p
          = _('Region:')
          %span
            = (MiqRegion.my_region.description)
        %p
          = _('Zone:')
          %span
            = (MiqServer.my_zone)
        %p
          = _('Appliance:')
          %span
            = (MiqServer.my_server.name)
        %p.message
          - if get_vmdb_config[:server][:use_custom_login_text]
            = (get_vmdb_config[:server][:custom_login_text].to_s)

:javascript
  miqGetTZO();
  miqGetBrowserInfo();
  miqBrowserSizeTimeout();
  miqClearTreeState();

- auto_login  = session[:auto_login]  # Set to false via dashboard/logout
- sso_enabled = get_vmdb_config[:authentication][:sso_enabled]
- session[:auto_login] = true
- if auth_mode == "httpd" && sso_enabled
  - if auto_login != false
    :javascript
      var miq_after_onload = "$('#sso_login').click()";
- elsif @user_name  # If user name is pre-populated by the server, press the Login button automatically
  :javascript
    var miq_after_onload = "$('#login').click()";
