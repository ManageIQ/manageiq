- change_stored_password ||= _("Change stored password")
- cancel_password_change ||= _("Cancel password change")
- stored_password_placeholder = "●●●●●●●●"
- pfx ||= ""

- if @edit
  - url = url_for(:action => 'rbac_user_field_changed',
                  :id     => "#{@edit[:user_id] || "new"}")
- observe_url_json = {:interval => '.5', :url => url}.to_json
= render :partial => "layouts/flash_msg"
- disabled = @edit && @edit[:new][:userid] == "admin"
#main_div
  %h3
    = _("User Information")
  .form-horizontal
    .form-group
      %label.col-md-2.control-label
        = _("Full Name")
      .col-md-8
        - if !@edit
          %p.form-control-static
            = h(@user.name)
        - else
          = text_field_tag("name",
                           @edit[:new][:name],
                           :autocomplete => 'off',
                           :maxlength    => 50,
                           :disabled     => disabled,
                           :class => "form-control",
                           "data-miq_observe" => observe_url_json)
          - unless @edit[:new][:userid] == "admin"
            = javascript_tag(javascript_focus('name'))
    .form-group
      %label.col-md-2.control-label
        = _("Username")
      .col-md-8
        - if !@edit
          %p.form-control-static
            = h(@user.userid)
        - else
          = text_field_tag("userid",
                           @edit[:new][:userid],
                           :autocomplete => 'off',
                           :maxlength    => 50,
                           :disabled     => disabled,
                           :class => "form-control",
                           "data-miq_observe" => observe_url_json)
    - if @edit
      - db_mode = get_vmdb_config[:authentication][:mode]
      - if db_mode == "database" || (db_mode != "database" && disabled)
        .form-group
          %label.col-md-2.control-label
            = _("Password")
          .col-md-8
            = password_field_tag("password",
                                 @edit[:new][:userid].blank? ? "" : stored_password_placeholder,
                                 :maxlength         => 50,
                                 :disabled => @edit[:new][:userid].blank? ? false : true,
                                 :class => "form-control",
                                 "data-miq_observe" => observe_url_json)
            - if @edit[:new][:userid] == "admin"
              = javascript_tag(javascript_focus('password'))
          - unless @edit[:new][:userid].blank?
            %div
              %a{:id => "change_stored_password", "style" => "display:block;cursor: pointer; cursor: hand;", "onclick" => "changeStoredPassword('#{pfx}', '#{url}')"}
                = change_stored_password
              %a{:id => "cancel_password_change", "style" => "display:none;cursor: pointer; cursor: hand;", "onclick" => "cancelPasswordChange('#{pfx}', '#{url}')"}
                = cancel_password_change
        .form-group{:id => "verify_group", :style => @edit[:new][:userid].blank? ? "display:block" : "display:none"}
          %label.col-md-2.control-label
            = _("Confirm Password")
          .col-md-8
            = password_field_tag("verify",
                                 "",
                                 :maxlength         => 50,
                                 :class => "form-control",
                                 "data-miq_observe" => observe_url_json)
    .form-group
      %label.col-md-2.control-label
        = _("E-mail Address")
      .col-md-8
        - if !@edit
          %p.form-control-static
            = h(@user.email)
        - else
          = text_field_tag("email",
                           @edit[:new][:email],
                           :autocomplete      => 'off',
                           :maxlength         => 50,
                           :class => "form-control",
                           "data-miq_observe" => observe_url_json)
    .form-group
      %label.col-md-2.control-label
        = _("Group")
      .col-md-8
        - if !@edit
          - if @user.current_group
            - if role_allows(:feature => "rbac_group_show")
              - params = {:class => "pointer", :onclick => "miqDynatreeActivateNode('rbac_tree', 'g-#{to_cid(@user.current_group.id)}');", :title => _("View this Group")}
            - else
              - params = {}
            %span.product.product-group{params}
              = h(@user.miq_group_description)
          - else
            = h(@user.miq_group_description)
        - else
          - if disabled
            %p.form-control-static
              = h(@user.miq_group_description)
          - else
            - options = (@edit[:new][:group] ? [] : [[_("<Choose a Group>"), nil]]) + @edit[:groups]
            = select_tag('chosen_group',
                         options_for_select(options, @edit[:new][:group]),
                         :class    => "selectpicker")
          :javascript
            miqInitSelectPicker();
            miqSelectPickerEvent('chosen_group', "#{url}")
    - unless @edit
      .form-group
        %label.col-md-2.control-label
          = _("Role")
        .col-md-8
          - if @user.current_group && @user.current_group.miq_user_role
            - if role_allows(:feature => "rbac_user_show")
              - params = {:class => "pointer", :onclick => "miqDynatreeActivateNode('rbac_tree', 'ur-#{to_cid(@user.current_group.miq_user_role.id)}');", :title => _("View this Role")}
            - else
              - params = {}
            %span.product.product-role{params}
              = h(@user.miq_user_role_name)
          - else
            %p.form-control-static
              = h(@user.miq_user_role_name)
  %hr/
  - unless @edit
    = render :partial => "rbac_tag_box"
