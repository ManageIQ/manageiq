- if @sb[:active_tab] == "settings_replication"
  - @angular_form = true

  %form.form-horizontal#form_div{"name"          => "angularForm",
                                 "ng-controller" => "pglogicalReplicationFormController as $ctrl",
                                 "ng-show"       => "afterGet"}
    = render :partial => "layouts/flash_msg"
    %script{:id => "authkeyModalForm.html", :type => "text/ng-template"}
      :cdata
        <div class="modal fade" id="authkeyModalForm" tabindex="-1" role="dialog" aria-hidden="true">
          <div class="modal-header">
            <h4 class="modal-header">SSH Information For An Appliance In the Region</h4>
          </div>
            <form class="form-horizontal" name="authkeyModalForm" ng-submit="$ctrl.submitForm()" novalidate>
              <div class="modal-body">
                <div class="form-group">
                  <label class="col-sm-2 control-label">Host</label>
                  <div class="col-sm-10">
                    <input type="text" name="ssh_host" class="form-control" ng-model="$ctrl.ssh_params.ssh_host">
                  </div>
                </div>
                <div class="form-group">
                  <label class="col-sm-2 control-label">User</label>
                  <div class="col-sm-10">
                    <input type="text" name="ssh_user" class="form-control" ng-model="$ctrl.ssh_params.ssh_user" required>
                    <p ng-show="authkeyModalForm.ssh_user.$invalid && !authkeyModalForm.ssh_user.$pristine" class="help-block">SSH user is required.</p>
                  </div>
                </div>
                <div class="form-group">
                  <label class="col-sm-2 control-label">Password</label>
                  <div class="col-sm-10">
                    <input type="password" name="ssh_password" class="form-control" ng-model="$ctrl.ssh_params.ssh_password" required>
                    <p ng-show="authkeyModalForm.ssh_password.$invalid && !authkeyModalForm.ssh_password.$pristine" class="help-block">SSH password is required.</p>
                  </div>
                </div>
              </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-primary" ng-disabled="authkeyModalForm.$invalid">Submit</button>
              <button class="btn btn-default" ng-click="$ctrl.cancelForm()">Cancel</button>
            </div>
          </form>
        </div>
    .form-group{"ng-class" => "{'has-error': angularForm.subscriptions.$invalid}"}
      %label.col-md-2.control-label
        = _('Type')
      .col-md-2
        = select_tag('replication_type',
                          options_for_select([["<#{_('None')}>", 'none'], ["Global", 'global'], ["Remote", 'remote']]),
                          "ng-model"                    => "pglogicalReplicationModel.replication_type",
                          "ng-change"                   => "replicationTypeChanged()",
                          "miqrequired"                 => "",
                          "checkchange"                 => "",
                          "selectpicker-for-select-tag" => "")

    .subscriptions_div{"ng-if" => "pglogicalReplicationModel.replication_type == 'global'"}
      %h3
        = _('Subscriptions')
      %br
        %span{"style"=>"color:red", "ng-show" => "subscriptionInValidMessage()"}
          = _("At least 1 subscription must be added to save server replication type")
      %table{:width => "100%", :align => "bottom"}
        %tr
          %td#buttons_on{:align => "right"}
            %button.btn.btn-primary{:type => "button", "ng-disabled" => "addInProgress()",  "ng-click" => "enableSubscriptionAdd()",  :align => "left"}= _('Add Subscription')
            %br
            %br
      %table.table.table-striped.table-hover.table-condensed.table-bordered
        %thead
          %th= _('Database')
          %th= _('Host')
          %th= _('Username')
          %th= _('Password')
          %th= _('Port')
          %th= _('Central Admin Enabled')
          %th{:colspan => 2}=_('Actions')
        %tbody
          %tr{"ng-if" => "pglogicalReplicationModel.addEnabled"}
            %td
              %input.form-control{"type"        => "text",
                                  "id"          => "host",
                                  "name"        => "host",
                                  "ng-model"    => "pglogicalReplicationModel.dbname",
                                  "miqrequired" => "",
                                  "checkchange" => ""}
            %td
              %input.form-control{"type"        => "text",
                                  "id"          => "host",
                                  "name"        => "host",
                                  "ng-model"    => "pglogicalReplicationModel.host",
                                  "miqrequired" => "",
                                  "checkchange" => ""}
            %td
              %input.form-control{"type"        => "text",
                                  "id"          => "userid",
                                  "name"        => "userid",
                                  "ng-model"    => "pglogicalReplicationModel.user",
                                  "miqrequired" => "",
                                  "checkchange" => ""}
            %td
              %input.form-control{"type"        => "password",
                                  "id"          => "password",
                                  "name"        => "password",
                                  "ng-model"    => "pglogicalReplicationModel.password",
                                  "placeholder" => placeholder_if_present("pglogicalReplicationModel.password"),
                                  "miqrequired" => "",
                                  "checkchange" => ""}
            %td
              %input.form-control{"type"        => "text",
                                  "id"          => "port",
                                  "name"        => "port",
                                  "ng-model"    => "pglogicalReplicationModel.port"}
            %td
            %td{:class => "action-cell"}
              %button.btn.btn-default.btn-block.btn-sm{:type => "button", "ng-disabled" => "!subscriptionValid()",  "ng-click" => "addSubscription()"}= _('Accept')

            %td{:class => "action-cell", :style => "width: 5px"}
              %a{:class => "dropdown-toggle", "data-toggle" => "dropdown", :style => "cursor: pointer; cursor: hand;"}
                .dropdown.pull-right.dropdown-kebab-pf
                  .btn.btn-link.btn-block.dropdown-toggle
                    %span.fa.fa-ellipsis-v
                  %ul.dropdown-menu.dropdown-menu-right.3
                    %li
                      %a{:class => "disabled", "ng-show" => "!subscriptionValid()"}
                        = _('Validate')
                    %li
                      %a{"ng-show" => "subscriptionValid()", "ng-click" => "validateSubscription()"}
                        = _('Validate')
                    %li
                      %a{"ng-click" => "discardSubscription()"}
                        = _('Discard')

          %tr{"ng-repeat" => "subscription in pglogicalReplicationModel.subscriptions track by $index", "ng-form" => "rowForm", "ng-class" => "{'danger': showCancelDelete($index)}"}
            %td{"ng-if" => "!pglogicalReplicationModel.updateEnabled || (pglogicalReplicationModel.updateEnabled && $index !== pglogicalReplicationModel.s_index)",
                "ng-class"=>"{'active': showChanged($index, 'dbname')}"}
              {{subscription.dbname}}
            %td{"ng-if" => "pglogicalReplicationModel.updateEnabled && $index === pglogicalReplicationModel.s_index",
                "ng-class"=>"{'active': showChanged($index, 'dbname')}"}
              %input.form-control{"type"        => "text",
                                  "name"        => "dbname",
                                  "ng-model"    => "pglogicalReplicationModel.dbname",
                                  "ng-change"   => "showChanged($index, 'dbname')",
                                  "miqrequired" => ""}

            %td{"ng-if" => "!pglogicalReplicationModel.updateEnabled || (pglogicalReplicationModel.updateEnabled && $index !== pglogicalReplicationModel.s_index)",
                "ng-class"=>"{'active': showChanged($index, 'host')}"}
              {{subscription.host}}
            %td{"ng-if" => "pglogicalReplicationModel.updateEnabled && $index === pglogicalReplicationModel.s_index",
                "ng-class"=>"{'active': showChanged($index, 'host')}"}
              %input.form-control{"type"        => "text",
                                  "name"        => "host",
                                  "ng-model"    => "pglogicalReplicationModel.host",
                                  "miqrequired" => ""}
            %td{"ng-if" => "!pglogicalReplicationModel.updateEnabled || (pglogicalReplicationModel.updateEnabled && $index !== pglogicalReplicationModel.s_index)",
                "ng-class"=>"{'active': showChanged($index, 'user')}"}
              {{subscription.user}}
            %td{"ng-if" => "pglogicalReplicationModel.updateEnabled && $index === pglogicalReplicationModel.s_index",
                "ng-class"=>"{'active': showChanged($index, 'user')}"}
              %input.form-control{"type"        => "text",
                                  "name"        => "user",
                                  "ng-model"    => "pglogicalReplicationModel.user",
                                  "miqrequired" => ""}

            %td{"ng-if" => "!pglogicalReplicationModel.updateEnabled || (pglogicalReplicationModel.updateEnabled && $index !== pglogicalReplicationModel.s_index)",
                "ng-class"=>"{'active': showChanged($index, 'password')}"}
              ●●●●●●●●
            %td{"ng-if" => "pglogicalReplicationModel.updateEnabled && $index === pglogicalReplicationModel.s_index",
                "ng-class"=>"{'active': showChanged($index, 'password')}"}
              %input.form-control{"type"        => "password",
                                  "name"        => "password",
                                  "ng-model"    => "pglogicalReplicationModel.password",
                                  "ng-disabled" => "!subscription.newRecord"}

            %td{"ng-if" => "!pglogicalReplicationModel.updateEnabled || (pglogicalReplicationModel.updateEnabled && $index !== pglogicalReplicationModel.s_index)",
                "ng-class"=>"{'active': showChanged($index, 'port')}"}
              {{subscription.port}}
            %td{"ng-if" => "pglogicalReplicationModel.updateEnabled && $index === pglogicalReplicationModel.s_index",
                "ng-class"=>"{'active': showChanged($index, 'port')}"}
              %input.form-control{"type"        => "text",
                                  "name"        => "port",
                                  "ng-model"    => "pglogicalReplicationModel.port"}

            %td.narrow
              %input{"bs-switch" => "",
                     :data         => {:on_text => 'Yes', :off_text => 'No', :size => 'mini'},
                     "id"          => "auth_key_configured",
                     "type"        => "checkbox",
                     "name"        => "auth_key_configured",
                     "ng-model"    => "subscription.auth_key_configured",
                     "switch-readonly" => true}

            %td{:class => "action-cell", "ng-show" => "showCancelDelete($index)"}
              %button.btn.btn-default.btn-sm{:type => "button", "ng-click" => "cancelDelete($index)"}= _('Cancel Delete')

            %td{:class => "action-cell","ng-show" => "!showCancelDelete($index) && !pglogicalReplicationModel.updateEnabled || (pglogicalReplicationModel.updateEnabled && $index !== pglogicalReplicationModel.s_index)"}
              %button.btn.btn-default.btn-block.btn-sm{:type => "button", "ng-disabled" => "addInProgress()",  "ng-click" => "enableSubscriptionUpdate($index)"}= _('Update')

            %td{:class => "action-cell", :style => "width: 5px", "ng-show" => "!showCancelDelete($index) && !pglogicalReplicationModel.updateEnabled || (pglogicalReplicationModel.updateEnabled && $index !== pglogicalReplicationModel.s_index)"}
              %a{:class => "dropdown-toggle", "data-toggle" => "dropdown", :style => "cursor: pointer; cursor: hand;"}
                .dropdown.pull-right.dropdown-kebab-pf
                  .btn.btn-link.btn-block.dropdown-toggle
                    %span.fa.fa-ellipsis-v
                  %ul.dropdown-menu.dropdown-menu-right.3
                    %li
                      %a{"ng-click" => "removeSubscription($index)"}
                        = _('Delete')
                    %li
                      %a{"ng-click" => "validateSubscription($index)"}
                        = _('Validate')
                    %li
                      %a{"ng-click" => "launchAuthKeyModal($index)", "ng-show" => "isCentralAdminEnabled($index)"}
                        = _('Re-Enable Central Admin')
                    %li
                      %a{"ng-click" => "launchAuthKeyModal($index)", "ng-show" => "!isCentralAdminEnabled($index)"}
                        = _('Enable Central Admin')
                    %li
                      %a{"ng-click" => "disableCentralAdmin($index)", "ng-show" => "isCentralAdminEnabled($index)"}
                        = _('Disable Central Admin')

            %td{:class => "action-cell", "ng-show" => "!showCancelDelete($index) && pglogicalReplicationModel.updateEnabled && $index === pglogicalReplicationModel.s_index"}
              %button.btn.btn-default.btn-block.btn-sm{:type => "button", "ng-disabled" => "!subscriptionValid()", "ng-click" => "addSubscription($index)"}= _('Accept')

            %td{:class => "action-cell", :style => "width: 5px", "ng-show" => "!showCancelDelete($index) && pglogicalReplicationModel.updateEnabled && $index === pglogicalReplicationModel.s_index"}
              %a{:class => "dropdown-toggle", "data-toggle" => "dropdown", :style => "cursor: pointer; cursor: hand;"}
                .dropdown.pull-right.dropdown-kebab-pf
                  .btn.btn-link.btn-block.dropdown-toggle
                    %span.fa.fa-ellipsis-v
                  %ul.dropdown-menu.dropdown-menu-right.3
                    %li
                      %a{:class => "disabled", "ng-show" => "!subscriptionValid()"}
                        = _('Validate')
                    %li
                      %a{"ng-show" => "subscriptionValid()", "ng-click" => "validateSubscription($index)"}
                        = _('Validate')
                    %li
                      %a{"ng-click" => "discardSubscription($index)"}
                        = _('Discard')
    .exclusion_list_div{"ng-if" => "pglogicalReplicationModel.replication_type == 'remote'"}
      %h3
        = _('Excluded Tables')
      %br
        %textarea{"ui-codemirror" => "",
                  :name           => "exclusion_list",
                  'ng-model'      => 'pglogicalReplicationModel.exclusion_list',
                  'checkchange'   => ''}

    .button-group{:align => "right"}
      = button_tag(_("Save"),
                   :class     => "btn btn-primary disabled",
                   :alt       => _("Save"),
                   "ng-click" => "disabledClick($event)",
                   "ng-show"  => "!saveEnabled(angularForm)")
      = button_tag(_("Save"),
                   :class     => "btn btn-primary",
                   :alt       => _("Save"),
                   "ng-click" => "saveClicked()",
                   "ng-show"  => "saveEnabled(angularForm)")
      = button_tag(_("Reset"),
                   :class     => "btn btn-default disabled",
                   :alt       => _("Reset changes"),
                   "ng-click" => "disabledClick($event)",
                   "ng-show"  => "!saveEnabled(angularForm)")
      = button_tag(_("Reset"),
                   :class     => "btn btn-default",
                   :alt       => _("Reset changes"),
                   "ng-click" => "resetClicked()",
                   "ng-show"  => "saveEnabled(angularForm)")
  :javascript
    ManageIQ.angular.app.value('pglogicalReplicationFormId', 'new');
    miq_bootstrap('#form_div');
