- url = url_for(:action => 'forest_form_field_changed', :id => "#{@sb[:active_tab].split('_').last}")
#forest_entries_div
  %h3= _("Trusted Forest Settings")
  = form_tag({:action => 'forest_accept',
              :id     => "ldap_form"},
             :remote => true,
             :method => :post) do
    %table.table.table-striped.table-bordered.table-hover
      %thead
        %tr
          %th.narrow
          %th= _("LDAP Hostname")
          %th= _("Mode")
          %th= _("LDAP Port")
          %th= _("Base DN")
          %th= _("Bind DN")
          %th= _("Bind Password")
      %tbody
        - if entry != "new"
          %tr{:onclick => remote_function(:url => {:action => 'forest_select', :ldaphost_id => "new"}), :title => _("Click to add a new forest")}
            %td
              = image_tag(image_path('toolbars/new.png'))
            %td
              = _("<Click on this row to create a new forest>")
            %td
            %td
            %td
            %td
            %td
        - else
          %tr
            %td
              = image_submit_tag(image_path('toolbars/import.png'),
                :class => "listbutton",
                :id => "accept", :name => "accept",
                :alt => _("Add this entry"), :title => _("Add this entry"))
            %td
              = text_field("user_proxies", "ldaphost", "maxlength" => 50)
            %td
              = select_tag('user_proxies_mode',
                options_for_select([[_("ldap"), "ldap"], [_("ldaps"), "ldaps"]], "ldap"),
                "data-miq_observe" => {:url => url}.to_json)
            %td
              = text_field("user_proxies", "ldapport", "size" => 20, "maxlength" => 50, "value" => "389")
            %td
              = text_field("user_proxies", "basedn", "size" => 20, "maxlength" => 50)
            %td
              = text_field("user_proxies", "bind_dn", "size" => 20, "maxlength" => 50)
            %td
              = password_field("user_proxies", "bind_pwd", "size" => 20, "maxlength" => 128)
        - @edit[:new][:authentication][:user_proxies].sort_by { |a| a[:ldaphost] }.each do |forest|
          - if entry != nil && entry != "new" && entry[:ldaphost] == forest[:ldaphost]
            %tr
              %td
                = image_submit_tag(image_path('toolbars/import.png'),
                  :class => "listbutton",
                  :id => "accept", :name => "accept",
                  :alt => _("Update this entry"), :title => _("Update this entry"))
              %td
                = text_field("user_proxies", "ldaphost", "maxlength" => 50, "value" => entry[:ldaphost])
              %td
                = select_tag('user_proxies_mode',
                  options_for_select([[_("ldap"), "ldap"], [_("ldaps"), "ldaps"]], entry[:mode]),
                  "data-miq_observe" => {:url => url}.to_json)
              %td
                = text_field("user_proxies", "ldapport", "size" => 20, "maxlength" => 6, "value" => entry[:ldapport])
              %td
                = text_field("user_proxies", "basedn", "size" => 20, "maxlength" => 50, "value" => entry[:basedn])
              %td
                = text_field("user_proxies", "bind_dn", "size" => 20, "maxlength" => 50, "value" => entry[:bind_dn])
              %td
                = password_field("user_proxies", "bind_pwd", "size" => 20, "maxlength" => 128, "value" => entry[:bind_pwd])
          - else
            - unless forest.blank?
              %tr
                %td{:onclick => remote_function(:url => {:action => 'forest_delete',
                :ldaphost_id => forest[:ldaphost].to_s}, :confirm => _("Are you sure you want to delete forest %s ?") % forest[:ldaphost]),
                :title => _("Click to delete this forest")}
                  %ul#list
                    %li
                      = image_tag(image_path('toolbars/delete.png'))
                %td{:onclick => remote_function(:url => {:action => 'forest_select', :ldaphost_id => forest[:ldaphost].to_s}), :title => _("Click to edit this forest")}
                  = h(forest[:ldaphost])
                %td{:onclick => remote_function(:url => {:action => 'forest_select', :ldaphost_id => forest[:ldaphost].to_s}), :title => _("Click to edit this forest")}
                  = h(forest[:mode])
                %td{:onclick => remote_function(:url => {:action => 'forest_select', :ldaphost_id => forest[:ldaphost].to_s}), :title => _("Click to edit this forest")}
                  = h(forest[:ldapport])
                %td{:onclick => remote_function(:url => {:action => 'forest_select', :ldaphost_id => forest[:ldaphost].to_s}), :title => _("Click to edit this forest")}
                  = h(forest[:basedn])
                %td{:onclick => remote_function(:url => {:action => 'forest_select', :ldaphost_id => forest[:ldaphost].to_s}), :title => _("Click to edit this forest")}
                  = h(forest[:bind_dn])
                %td{:onclick => remote_function(:url => {:action => 'forest_select', :ldaphost_id => forest[:ldaphost].to_s}), :title => _("Click to edit this forest")}
                  - if forest[:bind_pwd].to_s.length > 0
                    ******
