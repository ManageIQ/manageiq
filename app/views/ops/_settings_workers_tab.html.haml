- change_stored_password ||= _("Change stored password")
- cancel_password_change ||= _("Cancel password change")
- stored_password_placeholder = "●●●●●●●●"
- pfx ||= "replication_worker"

- if @sb[:active_tab] == "settings_workers"
  - url = url_for(:action => 'settings_form_field_changed', :id => "#{@sb[:active_tab].split('_').last}")
  = render :partial => "layouts/flash_msg"
  .row
    .col-md-12.col-lg-6
      %fieldset
        %h3
          = _("Generic Workers")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Count")
            .col-md-8
              = select_tag('generic_worker_count',
                            options_for_select((0..9).to_a, @edit[:new].config[:workers][:worker_base][:queue_worker_base][:generic_worker][:count].to_i),
                            :class    => "selectpicker")
            :javascript
              miqInitSelectPicker();
              miqSelectPickerEvent('generic_worker_count', "#{url}")
          .form-group
            %label.col-md-2.control-label
              = _("Memory threshold")
            .col-md-8
              = select_tag('generic_worker_threshold',
                            options_for_select(@sb[:generic_threshold],
                                                @edit[:new].config[:workers][:worker_base][:queue_worker_base][:generic_worker][:memory_threshold]),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('generic_worker_threshold', "#{url}")

      %fieldset
        %h3
          = _("C & U Data Collectors")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Count")
            .col-md-8
              = select_tag('ems_metrics_collector_worker_count',
                            options_for_select((0..9).to_a,
                                                @edit[:new].config[:workers][:worker_base][:queue_worker_base][:ems_metrics_collector_worker][:defaults][:count].to_i),
                              :class    => "selectpicker")
              :javascript
                miqSelectPickerEvent('ems_metrics_collector_worker_count', "#{url}")
          .form-group
            %label.col-md-2.control-label
              = _("Memory threshold")
            .col-md-8
              = select_tag('ems_metrics_collector_worker_threshold',
                            options_for_select(@sb[:ems_metrics_collector_threshold],
                                              @edit[:new].config[:workers][:worker_base][:queue_worker_base][:ems_metrics_collector_worker][:defaults][:memory_threshold]),
                            :class    => "selectpicker")
              :javascript
                miqSelectPickerEvent('ems_metrics_collector_worker_threshold', "#{url}")
      %fieldset
        %h3
          = _("Event Monitor")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Memory threshold")
            .col-md-8
              = select_tag('event_catcher_threshold',
                            options_for_select(@sb[:event_catcher_threshold],
                                              @edit[:new].config[:workers][:worker_base][:event_catcher][:memory_threshold]),
                            :class    => "selectpicker")
              :javascript
                miqSelectPickerEvent('event_catcher_threshold', "#{url}")
      %fieldset
        %h3
          = _("Connection Broker")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Memory threshold")
            .col-md-8
              = select_tag('vim_broker_worker_threshold',
                            options_for_select(@sb[:vim_broker_threshold],
                                                @edit[:new].config[:workers][:worker_base][:vim_broker_worker][:memory_threshold]),
                            :class    => "selectpicker")
              :javascript
                miqSelectPickerEvent('vim_broker_worker_threshold', "#{url}")
      %fieldset
        %h3
          = _("UI Worker")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Count")
            .col-md-8
              - uiworker_count_disbaled = Vmdb::Application.config.session_store == :memory_store
              - if uiworker_count_disbaled
                = h(@edit[:new].config[:workers][:worker_base][:ui_worker][:count].to_i)
              - else
                = select_tag('ui_worker_count',
                            options_for_select((0..9).to_a, @edit[:new].config[:workers][:worker_base][:ui_worker][:count].to_i),
                            :class    => "selectpicker")
              :javascript
                miqSelectPickerEvent('ui_worker_count', "#{url}")

        - if uiworker_count_disbaled
          .note
            = _(" * Multiple UI workers can not be configured with session store as memory")
      %fieldset
        %h3
          = _("Reporting Workers")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Count")
            .col-md-8
              = select_tag('reporting_worker_count',
                          options_for_select((0..9).to_a,
                                            @edit[:new].config[:workers][:worker_base][:queue_worker_base][:reporting_worker][:count].to_i),
                          :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('reporting_worker_count', "#{url}")
          .form-group
            %label.col-md-2.control-label
              = _("Memory threshold")
            .col-md-8
              = select_tag('reporting_worker_threshold',
                            options_for_select(@sb[:reporting_threshold],
                                              @edit[:new].config[:workers][:worker_base][:queue_worker_base][:reporting_worker][:memory_threshold]),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('reporting_worker_threshold', "#{url}")
      %fieldset
        %h3
          = _("Web Service Workers")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Count")
            .col-md-8
              = select_tag('web_service_worker_count',
                          options_for_select((0..9).to_a,
                                            @edit[:new].config[:workers][:worker_base][:web_service_worker][:count].to_i),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('web_service_worker_count', "#{url}")
          .form-group
            %label.col-md-2.control-label
              = _("Memory threshold")
            .col-md-8
              = select_tag('web_service_worker_threshold',
                          options_for_select(@sb[:web_service_threshold],
                                            @edit[:new].config[:workers][:worker_base][:web_service_worker][:memory_threshold]),
                          :class    => "selectpicker")
          :javascript
            miqSelectPickerEvent('web_service_worker_threshold', "#{url}")
    .col-md-12.col-lg-6
      %fieldset
        %h3
          = _("Priority Workers")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Count")
            .col-md-8
              = select_tag('priority_worker_count',
                            options_for_select((0..4).to_a,
                                                @edit[:new].config[:workers][:worker_base][:queue_worker_base][:priority_worker][:count].to_i),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('priority_worker_count', "#{url}")
          .form-group
            %label.col-md-2.control-label
              = _("Memory threshold")
            .col-md-8
              = select_tag('priority_worker_threshold',
                            options_for_select(@sb[:priority_threshold],
                                                @edit[:new].config[:workers][:worker_base][:queue_worker_base][:priority_worker][:memory_threshold]),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('priority_worker_threshold', "#{url}")
      %fieldset
        %h3
          = _("C & U Data Processors")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Count")
            .col-md-8
              = select_tag('ems_metrics_processor_worker_count',
                            options_for_select((0..4).to_a,
                                                @edit[:new].config[:workers][:worker_base][:queue_worker_base][:ems_metrics_processor_worker][:count].to_i),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('ems_metrics_processor_worker_count', "#{url}")
          .form-group
            %label.col-md-2.control-label
              = _("Memory threshold")
            .col-md-8
              = select_tag('ems_metrics_processor_worker_threshold',
                            options_for_select(@sb[:ems_metrics_processor_threshold],
                                                @edit[:new].config[:workers][:worker_base][:queue_worker_base][:ems_metrics_processor_worker][:memory_threshold]),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('ems_metrics_processor_worker_threshold', "#{url}")
      %fieldset
        %h3
          = _("Refresh")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Memory threshold")
            .col-md-8
              = select_tag('ems_refresh_worker_threshold',
                            options_for_select(@sb[:ems_refresh_threshold],
                                                @edit[:new].get_raw_worker_setting(:MiqEmsRefreshWorker, :memory_threshold)),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('ems_refresh_worker_threshold', "#{url}")
      %fieldset
        %h3= _("VM Analysis Collectors")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Count")
            .col-md-8
              = select_tag('proxy_worker_count',
                            options_for_select((0..5).to_a,
                            @edit[:new].config[:workers][:worker_base][:queue_worker_base][:smart_proxy_worker][:count].to_i),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('proxy_worker_count', "#{url}")
          .form-group
            %label.col-md-2.control-label
              = _("Memory threshold")
            .col-md-8
              = select_tag('proxy_worker_threshold',
                            options_for_select(@sb[:smart_proxy_threshold],
                            @edit[:new].config[:workers][:worker_base][:queue_worker_base][:smart_proxy_worker][:memory_threshold]),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('proxy_worker_threshold', "#{url}")
      %fieldset
        %h3
          = _("Replication Worker (Deprecated)")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Database")
            .col-md-6
              = text_field_tag("replication_worker_dbname",
                                @edit[:new].config[:workers][:worker_base][:replication_worker][:replication][:destination][:database],
                                :maxlength => 20,
                                :class => "form-control",
                                "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
          .form-group
            %label.col-md-2.control-label
              = _("Port")
            .col-md-6
              = text_field_tag("replication_worker_port",
                              @edit[:new].config[:workers][:worker_base][:replication_worker][:replication][:destination][:port],
                              :maxlength => 20,
                              :class => "form-control",
                              "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
          .form-group
            %label.col-md-2.control-label
              = _("Username")
            .col-md-6
              = text_field_tag("replication_worker_username",
                              @edit[:new].config[:workers][:worker_base][:replication_worker][:replication][:destination][:username],
                              :maxlength => 20,
                              :class => "form-control",
                              "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
          .form-group
            %label.col-md-2.control-label
              = _("Password")
            .col-md-6
              = password_field_tag("replication_worker_password",
                                  @edit[:new].config[:workers][:worker_base][:replication_worker][:replication][:destination][:username].blank? ? "" : stored_password_placeholder,
                                  :maxlength => 20,
                                  :class => "form-control",
                                  :disabled => @edit[:new].config[:workers][:worker_base][:replication_worker][:replication][:destination][:username].blank? ? false : true,
                                  "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
            - unless @edit[:new].config[:workers][:worker_base][:replication_worker][:replication][:destination][:username].blank?
              %div
                %a{:id => "#{pfx}_change_stored_password", "style" => "display:block;cursor: pointer; cursor: hand;", "onclick" => "changeStoredPassword('#{pfx}', '#{url}')"}
                  = change_stored_password
                %a{:id => "#{pfx}_cancel_password_change", "style" => "display:none;cursor: pointer; cursor: hand;", "onclick" => "cancelPasswordChange('#{pfx}', '#{url}')"}
                  = cancel_password_change
          .form-group{:id => "#{pfx}_verify_group", :style => @edit[:new].config[:workers][:worker_base][:replication_worker][:replication][:destination][:username].blank? ? "display:block" : "display:none"}
            %label.col-md-2.control-label
              = _("Verify Password")
            .col-md-6
              = password_field_tag("replication_worker_verify",
                              '',
                              :maxlength => 20,
                              :class => "form-control",
                              "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
          .form-group
            %label.col-md-2.control-label
              = _("Host")
            .col-md-6
              = text_field_tag("replication_worker_host",
                              @edit[:new].config[:workers][:worker_base][:replication_worker][:replication][:destination][:host],
                              :maxlength => 255,
                              :class => "form-control",
                              "data-miq_observe" => {:interval => '.5', :url => url}.to_json)
          .form-group
            .col-md-6
              %span#pwd_note{:style => "color:red"}
            .col-md-8
              = render  :partial => "/layouts/form_buttons_verify",
                :locals => {:validate_url => "validate_replcation_worker", :valtype => "default",
                :verify_title_off => _("Matching password fields are needed to perform verification of credentials"),
                :verify_title_on => _("Validate the credentials"), :record_id => "#{@sb[:active_tab].split('_').last}"}
      %fieldset
        %h3
          = _("Websocket Workers")
        .form-horizontal
          .form-group
            %label.col-md-2.control-label
              = _("Count")
            .col-md-8
              = select_tag('websocket_worker_count',
                          options_for_select((0..9).to_a,
                                            @edit[:new].config[:workers][:worker_base][:websocket_worker][:count].to_i),
                            :class    => "selectpicker")
            :javascript
              miqSelectPickerEvent('websocket_worker_count', "#{url}")
