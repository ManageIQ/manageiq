#form_filter_div
  .div
    .div
      -# %h4 {{buildLegend()}}
      %div{"ng-switch" => "", "on" => "scheduleModel.action_typ"}
        .form-group
          %label.col-md-2.control-label{"for" => "textInput-markup", "ng-hide" => "dbBackup()"}
            = _("Filter")
          %label.col-md-2.control-label{"for" => "textInput-markup", "ng-show" => "dbBackup()"}
            = _("Type")
          .col-md-10
            = select_tag('filter_typ', options_for_select(@vm_options_for_select),
              "ng-switch-when" => "vm",
              "ng-model"       => "$parent.scheduleModel.filter_typ",
              "ng-change"      => "filterTypeChanged()",
              "checkchange"    => "",
              "selectpicker-for-select-tag"   => "")
            = select_tag('filter_typ', options_for_select(@vm_options_for_select),
              "ng-switch-when" => "vm_check_compliance",
              "ng-model"       => "$parent.scheduleModel.filter_typ",
              "ng-change"      => "filterTypeChanged()",
              "checkchange"    => "",
              "selectpicker-for-select-tag"   => "")
            = select_tag('filter_typ', options_for_select(@template_options_for_select),
              "ng-switch-when" => "miq_template",
              "ng-model"       => "$parent.scheduleModel.filter_typ",
              "ng-change"      => "filterTypeChanged()",
              "checkchange"    => "",
              "selectpicker-for-select-tag"   => "")
            = select_tag('filter_typ', options_for_select(@host_options_for_select),
              "ng-switch-when" => "host",
              "ng-model"       => "$parent.scheduleModel.filter_typ",
              "ng-change"      => "filterTypeChanged()",
              "checkchange"    => "",
              "selectpicker-for-select-tag"   => "")
            = select_tag('filter_typ', options_for_select(@host_options_for_select),
              "ng-switch-when" => "host_check_compliance",
              "ng-model"       => "$parent.scheduleModel.filter_typ",
              "ng-change"      => "filterTypeChanged()",
              "checkchange"    => "",
              "selectpicker-for-select-tag"   => "")
            = select_tag('filter_typ', options_for_select(@cluster_options_for_select),
              "ng-switch-when" => "emscluster",
              "ng-model"       => "$parent.scheduleModel.filter_typ",
              "ng-change"      => "filterTypeChanged()",
              "checkchange"    => "",
              "selectpicker-for-select-tag"   => "")
            = select_tag('filter_typ', options_for_select(@storage_options_for_select),
              "ng-switch-when" => "storage",
              "ng-model"       => "$parent.scheduleModel.filter_typ",
              "ng-change"      => "filterTypeChanged()",
              "checkchange"    => "",
              "selectpicker-for-select-tag"   => "")
            = select_tag('log_protocol', options_for_select(@database_backup_options_for_select),
              "ng-switch-when" => "db_backup",
              "ng-model"       => "$parent.scheduleModel.log_protocol",
              "ng-change"      => "logProtocolChanged()",
              "checkchange"    => "",
              "selectpicker-for-select-tag"   => "")

            %select#filter_value{"update-dropdown-for-filter" => "",
                                 "dropdown-model"             => "scheduleModel",
                                 "dropdown-list"              => "filterList",
                                 "name"                       => "filter_value",
                                 "ng-change"                  => "filterValueChanged()",
                                 "ng-model"                   => "scheduleModel.filter_value",
                                 "ng-options"                 => "filteredItem.value as filteredItem.text for filteredItem in filterList track by filteredItem.text",
                                 "filter-hide"                => "filterValuesEmpty",
                                 "ng-required"                => "filterValueRequired(scheduleModel.filter_value)",
                                 "checkchange"                => ""}
              %option{"disabled" => "", "value" => ""} &lt;Choose&gt;
            %input{"type" => "hidden", "name" => "filter_value", "value" => "{{scheduleModel.filter_value}}"}

        = render :partial => "layouts/angular-bootstrap/edit_log_depot_settings_angular_bootstrap",
                 :locals  => {:ng_show             => "dbBackup()",
                              :ng_reqd_depot_name  => "dbRequired(scheduleModel.depot_name)",
                              :ng_model_depot_name => "scheduleModel.depot_name",
                              :ng_reqd_uri         => "dbRequired(scheduleModel.uri)",
                              :ng_model_uri        => "scheduleModel.uri",
                              :ng_model_uri_prefix => "scheduleModel.uri_prefix",
                              :uri_prefix_display  =>  "{{scheduleModel.uri_prefix}}://"}

        = render :partial => "layouts/angular-bootstrap/auth_credentials_angular_bootstrap",
                 :locals  => {:ng_show           => "sambaBackup()",
                              :ng_model          => "scheduleModel",
                              :ng_reqd_userid    => "sambaRequired(scheduleModel.log_userid)",
                              :ng_reqd_password  => "sambaRequired(scheduleModel.log_password)",
                              :ng_reqd_verify    => "sambaRequired(scheduleModel.log_verify)",
                              :userid_disabled   => "scheduleModel.uri_prefix == 'nfs'",
                              :password_disabled => "scheduleModel.uri_prefix == 'nfs'",
                              :validate_url      => "log_depot_validate",
                              :id                => @schedule.id || "new",
                              :valtype           => "log",
                              :basic_info_needed => true}
